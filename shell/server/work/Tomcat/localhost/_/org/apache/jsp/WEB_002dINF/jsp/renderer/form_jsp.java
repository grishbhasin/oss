/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.79
 * Generated at: 2017-08-02 16:12:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.renderer;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jaeksoft.searchlib.renderer.Renderer;
import com.jaeksoft.searchlib.renderer.RendererSort;
import org.apache.commons.lang3.StringEscapeUtils;

public final class form_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"osscmnrdr oss-input-div\">\n");
      out.write("\t<form id=\"osssearchform\" method=\"get\" autocomplete=\"off\"\n");
      out.write("\t\taction=\"renderer\">\n");
      out.write("\t\t");

			Renderer renderer = (Renderer) request.getAttribute("renderer");
			String query = (String) request.getAttribute("query");
			if (query == null)
				query = "";
			String[] hiddenParameterList = (String[]) request
					.getAttribute("hiddenParameterList");
			for (String p : hiddenParameterList) {
				String v = request.getParameter(p);
				if (v != null) {
		
      out.write("\n");
      out.write("\t\t<input type=\"hidden\" name=\"");
      out.print(p);
      out.write("\" value=\"");
      out.print(v);
      out.write("\" />\n");
      out.write("\t\t");

			}
		
      out.write('\n');
      out.write('	');
      out.write('	');

			}
		
      out.write("\n");
      out.write("\t\t<input class=\"osscmnrdr ossinputrdr\" size=\"60\" type=\"text\"\n");
      out.write("\t\t\tid=\"osssearchbox\" name=\"query\"\n");
      out.write("\t\t\tvalue=\"");
      out.print(StringEscapeUtils.escapeXml10(query));
      out.write("\"\n");
      out.write("\t\t\tonkeyup=\"OpenSearchServer.autosuggest(event, '");
      out.print(request.getAttribute("autocompUrl"));
      out.write("&query=', 'osssearchform', 'osssearchbox', 'ossautocomplete')\"\n");
      out.write("\t\t\tautocomplete=\"off\" /> <input class=\"osscmnrdr ossbuttonrdr\"\n");
      out.write("\t\t\ttype=\"submit\" value=\"");
      out.print(renderer.getSearchButtonLabel());
      out.write("\" />\n");
      out.write("\t\t");

			if (renderer.getSorts().size() > 0) {
		
      out.write("\n");
      out.write("\t\t<div id=\"osssort\">\n");
      out.write("\t\t\t<select name=\"sort\"\n");
      out.write("\t\t\t\tonchange=\"document.forms['osssearchform'].submit();\">\n");
      out.write("\t\t\t\t");

					String sort = (String) request.getParameter("sort");
						if (sort == null)
							sort = "";
						for (RendererSort rendererSort : renderer.getSorts()) {
							String selected = sort.equals(rendererSort.getSort()) ? "selected=selected"
									: "";
				
      out.write("\n");
      out.write("\t\t\t\t<option ");
      out.print(selected);
      out.write(" value=\"");
      out.print(rendererSort.getSort());
      out.write('"');
      out.write('>');
      out.print(rendererSort.getLabel());
      out.write("</option>\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\n");
      out.write("\t\t\t</select>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t");

			}
		
      out.write("\n");
      out.write("\t</form>\n");
      out.write("\t<div style=\"position: relative\">\n");
      out.write("\t\t<div id=\"ossautocomplete\" class=\"osscmnrd\" style=\"position: absolute;\"></div>\n");
      out.write("\t</div>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
