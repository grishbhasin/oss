<?xml version="1.0"?>
<index><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/form/saas_information</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/form/saas_information</value></field><field name="autocomplete"><value>Saas Information</value></field><field name="title"><value>Saas Information</value></field><field name="titleExact"><value>Saas Information</value></field><field name="titlePhonetic"><value>Saas Information</value></field><field name="content"><value>Enregistrez votre adresse e-mail. Nous vous enverrons un email d'information dès le lancement des offres SaaS.. </value></field><field name="contentExact"><value>Enregistrez votre adresse e-mail. Nous vous enverrons un email d'information dès le lancement des offres SaaS.. </value></field><field name="contentPhonetic"><value>Enregistrez votre adresse e-mail. Nous vous enverrons un email d'information dès le lancement des offres SaaS.. </value></field><field name="timestamp"><value>20120425224420</value></field><field name="type"><value>webform</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/form/saas_information</value></field><field name="urlExact"><value>http://dev.open-search-server.com/form/saas_information</value></field><field name="autocomplete"><value>Saas Information</value></field><field name="title"><value>Saas Information</value></field><field name="titleExact"><value>Saas Information</value></field><field name="titlePhonetic"><value>Saas Information</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120425224213</value></field><field name="type"><value>webform</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/submit_a_projet</value></field><field name="urlExact"><value>http://dev.open-search-server.com/submit_a_projet</value></field><field name="autocomplete"><value>Describe a project</value></field><field name="title"><value>Describe a project</value></field><field name="titleExact"><value>Describe a project</value></field><field name="titlePhonetic"><value>Describe a project</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120404170543</value></field><field name="type"><value>webform</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/partenaires</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/partenaires</value></field><field name="autocomplete"><value>Formulaire partenaires</value></field><field name="title"><value>Formulaire partenaires</value></field><field name="titleExact"><value>Formulaire partenaires</value></field><field name="titlePhonetic"><value>Formulaire partenaires</value></field><field name="content"><value>Nous sommes très fiers de notre collaboration avec nos partenaires, spécialistes du développement d'applications, de sites Internet, de la gestion de données et de contenus. Nous sommes ravi de cette collaboration parce que nous partageons cette passion pour l'excellence, l'exigence d'un niveau de service élevé.. Si vous partagez ces valeurs et si vous pensez qu'une solution Enterprise Search en open source est à même de vous aider à délivrer de meilleures applications et d'augmenter le niveau de satisfation de vos clients, alors contactez-nous, nous serons heureux de vous présenter notre solution et de vous montrer comment nous pouvons vous aider à tirer avantage de ses possibilités.. </value></field><field name="contentExact"><value>Nous sommes très fiers de notre collaboration avec nos partenaires, spécialistes du développement d'applications, de sites Internet, de la gestion de données et de contenus. Nous sommes ravi de cette collaboration parce que nous partageons cette passion pour l'excellence, l'exigence d'un niveau de service élevé.. Si vous partagez ces valeurs et si vous pensez qu'une solution Enterprise Search en open source est à même de vous aider à délivrer de meilleures applications et d'augmenter le niveau de satisfation de vos clients, alors contactez-nous, nous serons heureux de vous présenter notre solution et de vous montrer comment nous pouvons vous aider à tirer avantage de ses possibilités.. </value></field><field name="contentPhonetic"><value>Nous sommes très fiers de notre collaboration avec nos partenaires, spécialistes du développement d'applications, de sites Internet, de la gestion de données et de contenus. Nous sommes ravi de cette collaboration parce que nous partageons cette passion pour l'excellence, l'exigence d'un niveau de service élevé.. Si vous partagez ces valeurs et si vous pensez qu'une solution Enterprise Search en open source est à même de vous aider à délivrer de meilleures applications et d'augmenter le niveau de satisfation de vos clients, alors contactez-nous, nous serons heureux de vous présenter notre solution et de vous montrer comment nous pouvons vous aider à tirer avantage de ses possibilités.. </value></field><field name="timestamp"><value>20120404164914</value></field><field name="type"><value>webform</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/contact</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/contact</value></field><field name="autocomplete"><value>Contact</value></field><field name="title"><value>Contact</value></field><field name="titleExact"><value>Contact</value></field><field name="titlePhonetic"><value>Contact</value></field><field name="content"><value>. Vous souhaitez en savoir plus sur notre solution:. Comprendre la mise en œuvre et l’installation. Valider vos choix de configuration du moteur de recherche. Obtenir plus d’informations sur nos tarifs. . Laissez-nous vos coordonnées en remplissant le formulaire ci-dessous, nous reprendrons contact avec vous très rapidement..  . </value></field><field name="contentExact"><value>. Vous souhaitez en savoir plus sur notre solution:. Comprendre la mise en œuvre et l’installation. Valider vos choix de configuration du moteur de recherche. Obtenir plus d’informations sur nos tarifs. . Laissez-nous vos coordonnées en remplissant le formulaire ci-dessous, nous reprendrons contact avec vous très rapidement..  . </value></field><field name="contentPhonetic"><value>. Vous souhaitez en savoir plus sur notre solution:. Comprendre la mise en œuvre et l’installation. Valider vos choix de configuration du moteur de recherche. Obtenir plus d’informations sur nos tarifs. . Laissez-nous vos coordonnées en remplissant le formulaire ci-dessous, nous reprendrons contact avec vous très rapidement..  . </value></field><field name="timestamp"><value>20120318220458</value></field><field name="type"><value>webform</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/development_partnership</value></field><field name="urlExact"><value>http://dev.open-search-server.com/development_partnership</value></field><field name="autocomplete"><value>OpenSearchServer Potential development partnership </value></field><field name="title"><value>OpenSearchServer Potential development partnership </value></field><field name="titleExact"><value>OpenSearchServer Potential development partnership </value></field><field name="titlePhonetic"><value>OpenSearchServer Potential development partnership </value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20111031080140</value></field><field name="type"><value>webform</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/soumettre_un_projet</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/soumettre_un_projet</value></field><field name="autocomplete"><value>Soumettre un projet</value></field><field name="title"><value>Soumettre un projet</value></field><field name="titleExact"><value>Soumettre un projet</value></field><field name="titlePhonetic"><value>Soumettre un projet</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110612110121</value></field><field name="type"><value>webform</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/73</value></field><field name="urlExact"><value>http://dev.open-search-server.com/73</value></field><field name="autocomplete"><value>Stay tuned</value></field><field name="title"><value>Stay tuned</value></field><field name="titleExact"><value>Stay tuned</value></field><field name="titlePhonetic"><value>Stay tuned</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110611205513</value></field><field name="type"><value>webform</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/partners</value></field><field name="urlExact"><value>http://dev.open-search-server.com/partners</value></field><field name="autocomplete"><value>Partners form</value></field><field name="title"><value>Partners form</value></field><field name="titleExact"><value>Partners form</value></field><field name="titlePhonetic"><value>Partners form</value></field><field name="content"><value>We are proud of our cooperation with many leading software houses and specialists in web development, data management and Enterprise content management. We are happy about this cooperation because we all share the same passion for excellence and a high level of service and technical quality for advanced search-based solutions.. If you share these values and think a comprehensive and performing Open Source Enterprise solution could help you to deliver better applications and raise your levels of customer satisfaction still higher, please contact us, we will be glad to present to you our solution and explain how we can help you to take full advantage of its endless possibilities.. </value></field><field name="contentExact"><value>We are proud of our cooperation with many leading software houses and specialists in web development, data management and Enterprise content management. We are happy about this cooperation because we all share the same passion for excellence and a high level of service and technical quality for advanced search-based solutions.. If you share these values and think a comprehensive and performing Open Source Enterprise solution could help you to deliver better applications and raise your levels of customer satisfaction still higher, please contact us, we will be glad to present to you our solution and explain how we can help you to take full advantage of its endless possibilities.. </value></field><field name="contentPhonetic"><value>We are proud of our cooperation with many leading software houses and specialists in web development, data management and Enterprise content management. We are happy about this cooperation because we all share the same passion for excellence and a high level of service and technical quality for advanced search-based solutions.. If you share these values and think a comprehensive and performing Open Source Enterprise solution could help you to deliver better applications and raise your levels of customer satisfaction still higher, please contact us, we will be glad to present to you our solution and explain how we can help you to take full advantage of its endless possibilities.. </value></field><field name="timestamp"><value>20110613175302</value></field><field name="type"><value>webform</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/contact</value></field><field name="urlExact"><value>http://dev.open-search-server.com/contact</value></field><field name="autocomplete"><value>Contact</value></field><field name="title"><value>Contact</value></field><field name="titleExact"><value>Contact</value></field><field name="titlePhonetic"><value>Contact</value></field><field name="content"><value>. You want to know more about our solution:. Understand setup and installation. Choose the right configuration. Get more information about pricing. . Send us your details and fill in the form below, we will contact you shortly..  . </value></field><field name="contentExact"><value>. You want to know more about our solution:. Understand setup and installation. Choose the right configuration. Get more information about pricing. . Send us your details and fill in the form below, we will contact you shortly..  . </value></field><field name="contentPhonetic"><value>. You want to know more about our solution:. Understand setup and installation. Choose the right configuration. Get more information about pricing. . Send us your details and fill in the form below, we will contact you shortly..  . </value></field><field name="timestamp"><value>20110613182257</value></field><field name="type"><value>webform</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/1616</value></field><field name="urlExact"><value>http://dev.open-search-server.com/1616</value></field><field name="autocomplete"><value>OpenSearchServer v1.2.3 Relase Candidate 2 is available</value></field><field name="title"><value>OpenSearchServer v1.2.3 Relase Candidate 2 is available</value></field><field name="titleExact"><value>OpenSearchServer v1.2.3 Relase Candidate 2 is available</value></field><field name="titlePhonetic"><value>OpenSearchServer v1.2.3 Relase Candidate 2 is available</value></field><field name="content"><value> This new candidate release adds several improvements and bugs fixing.. One of more interesting new features is the availability of an OpenSearchServer Drupal module that will allow bringing power searches to any Drupal application.Also some interesting API improvements for url, file and web crawling, as well as in scheduler with more information provided and in parser with editable parameters.Addition of 2 very nice features: sitemap generator that will be very useful and the possibility to export the search result of any query into csv file for further analysis.. And last but not least, for helping all OpenSearchServer developers, the release of a comprehensive online documentation that you will appreciate and we will enjoy your feedback!.  . Links:. Download OpenSearchServer v 1.2.3 : http://www.open-search-server.com/download. Drupal module presentation: http://www.open-search-server.com/one_feature/drupal_module. Drupal module download: http://drupal.org/sandbox/ekeller/1128202 . Online Documentation : http://www.open-search-server.com/documentation. .  .  . </value></field><field name="contentExact"><value> This new candidate release adds several improvements and bugs fixing.. One of more interesting new features is the availability of an OpenSearchServer Drupal module that will allow bringing power searches to any Drupal application.Also some interesting API improvements for url, file and web crawling, as well as in scheduler with more information provided and in parser with editable parameters.Addition of 2 very nice features: sitemap generator that will be very useful and the possibility to export the search result of any query into csv file for further analysis.. And last but not least, for helping all OpenSearchServer developers, the release of a comprehensive online documentation that you will appreciate and we will enjoy your feedback!.  . Links:. Download OpenSearchServer v 1.2.3 : http://www.open-search-server.com/download. Drupal module presentation: http://www.open-search-server.com/one_feature/drupal_module. Drupal module download: http://drupal.org/sandbox/ekeller/1128202 . Online Documentation : http://www.open-search-server.com/documentation. .  .  . </value></field><field name="contentPhonetic"><value> This new candidate release adds several improvements and bugs fixing.. One of more interesting new features is the availability of an OpenSearchServer Drupal module that will allow bringing power searches to any Drupal application.Also some interesting API improvements for url, file and web crawling, as well as in scheduler with more information provided and in parser with editable parameters.Addition of 2 very nice features: sitemap generator that will be very useful and the possibility to export the search result of any query into csv file for further analysis.. And last but not least, for helping all OpenSearchServer developers, the release of a comprehensive online documentation that you will appreciate and we will enjoy your feedback!.  . Links:. Download OpenSearchServer v 1.2.3 : http://www.open-search-server.com/download. Drupal module presentation: http://www.open-search-server.com/one_feature/drupal_module. Drupal module download: http://drupal.org/sandbox/ekeller/1128202 . Online Documentation : http://www.open-search-server.com/documentation. .  .  . </value></field><field name="timestamp"><value>20110922131417</value></field><field name="type"><value>story</value></field><field name="lang"><value/></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/opensearchserver_vision_et_strategy_avec_arnoldit.com</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/opensearchserver_vision_et_strategy_avec_arnoldit.com</value></field><field name="autocomplete"><value>Vision et stratégie d'OpenSearchServer chez arnoldit.com</value></field><field name="title"><value>Vision et stratégie d'OpenSearchServer chez arnoldit.com</value></field><field name="titleExact"><value>Vision et stratégie d'OpenSearchServer chez arnoldit.com</value></field><field name="titlePhonetic"><value>Vision et stratégie d'OpenSearchServer chez arnoldit.com</value></field><field name="content"><value>"The interest in open source search contributes to the schemozzle in enterprise search and content processing. When one reads the pontifications of the self appointed search experts, one learns that open source search is thriving or diving, innovating or imitating, and pulsing or panting...".. Un article très intéressant (en anglais) présentant notre stratégie et nos objectifs lors d'un interview par le site arnoldit.com, site web expert de l' Enterprise Search.. </value></field><field name="contentExact"><value>"The interest in open source search contributes to the schemozzle in enterprise search and content processing. When one reads the pontifications of the self appointed search experts, one learns that open source search is thriving or diving, innovating or imitating, and pulsing or panting...".. Un article très intéressant (en anglais) présentant notre stratégie et nos objectifs lors d'un interview par le site arnoldit.com, site web expert de l' Enterprise Search.. </value></field><field name="contentPhonetic"><value>"The interest in open source search contributes to the schemozzle in enterprise search and content processing. When one reads the pontifications of the self appointed search experts, one learns that open source search is thriving or diving, innovating or imitating, and pulsing or panting...".. Un article très intéressant (en anglais) présentant notre stratégie et nos objectifs lors d'un interview par le site arnoldit.com, site web expert de l' Enterprise Search.. </value></field><field name="timestamp"><value>20120303154438</value></field><field name="type"><value>story</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2011/opensearchserver_strategy_on_frenchweb</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2011/opensearchserver_strategy_on_frenchweb</value></field><field name="autocomplete"><value>OpenSearchServer strategy on Frenchweb</value></field><field name="title"><value>OpenSearchServer strategy on Frenchweb</value></field><field name="titleExact"><value>OpenSearchServer strategy on Frenchweb</value></field><field name="titlePhonetic"><value>OpenSearchServer strategy on Frenchweb</value></field><field name="content"><value>A nice article in Frenchweb including a video interviews where Emmanuel Keller and Raphael Perez, co founders, explain OpenSearchServer strategy.. </value></field><field name="contentExact"><value>A nice article in Frenchweb including a video interviews where Emmanuel Keller and Raphael Perez, co founders, explain OpenSearchServer strategy.. </value></field><field name="contentPhonetic"><value>A nice article in Frenchweb including a video interviews where Emmanuel Keller and Raphael Perez, co founders, explain OpenSearchServer strategy.. </value></field><field name="timestamp"><value>20110630172039</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2011/can_this_startup_beat_ibm_microsoft_sap_and_oracle</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2011/can_this_startup_beat_ibm_microsoft_sap_and_oracle</value></field><field name="autocomplete"><value>A great article in Business Insider</value></field><field name="title"><value>A great article in Business Insider</value></field><field name="titleExact"><value>A great article in Business Insider</value></field><field name="titlePhonetic"><value>A great article in Business Insider</value></field><field name="content"><value>Can This Startup Beat IBM, Microsoft, SAP And Oracle? OpenSearchServer, a French startup that builds an open source enterprise search product.... </value></field><field name="contentExact"><value>Can This Startup Beat IBM, Microsoft, SAP And Oracle? OpenSearchServer, a French startup that builds an open source enterprise search product.... </value></field><field name="contentPhonetic"><value>Can This Startup Beat IBM, Microsoft, SAP And Oracle? OpenSearchServer, a French startup that builds an open source enterprise search product.... </value></field><field name="timestamp"><value>20110701122058</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2011/opensearchserver_announces_an_investment_round_led_by_kima_ventures</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2011/opensearchserver_announces_an_investment_round_led_by_kima_ventures</value></field><field name="autocomplete"><value>OpenSearchServer announces an investment round led by Kima Ventures</value></field><field name="title"><value>OpenSearchServer announces an investment round led by Kima Ventures</value></field><field name="titleExact"><value>OpenSearchServer announces an investment round led by Kima Ventures</value></field><field name="titlePhonetic"><value>OpenSearchServer announces an investment round led by Kima Ventures</value></field><field name="content"><value>OpenSearchServer is a leading Open Source Enterprise Search tool allowing the development of highly-advanced applications using index and full text algorithms. It has been downloaded by 40 000 users in more than 25 countries.. Paris June 30th, 2011: Founded by CTO Emmanuel Keller and CEO Raphael Perez, OpenSearchServer offers an unrivaled set of features to all sizes of companies, for easing access to increasing volumes of data.. A comprehensive suite of modules covers all steps of index-based applications; OpenSearchServer offers a crawler for the Web, file systems and JDBC databases and a very rich feature set.. The capabilities of the solution are extremely advanced:. Full openness to enterprise data and applications of any kind,. Ease of use, making it possible to create extremely sophisticated applications without writing a single line of code,. The user is given full access to control and customize all algorithms,. Optimized for large volume of data and high loads,. Advanced features (Categorization, Faceting, Find Similar, Administration, Reporting, etc.). Web services allowing a complete embedding of OpenSearchServer in any application.. . . "Our objective is to offer advanced applications developers an optimal solution which they can use and take advantage of without being an expert in full text algorithms or NoSQL database. We see the market strongly going in this direction and so there will be more and more Search-based application projects to which OpenSearchServer is the relevant answer. We designed our software to serve this new entrants market segment but our rich features makes OpenSearchServer to be also a great solution for advanced users of search applications.  We are proud of the arrival of Kima Ventures and this will allow us to build the team so that we can be ready to serve this growing market" said Raphael Perez, OpenSearchServer CEO.. "We strongly believe in the growing need for sophisticated IA (Information Access) software solutions. An increasing number of applications need an efficient tool to access data very fast and to complement databases. OpenSearchServer is a very smart and easy-to-use software solution, yet it’s very powerful. We believe Emmanuel and Raphael can turn this project into a major success and we are happy to be their partners", added Jeremie Berrebi, General Manager of Kima Ventures.. Jaeksoft has already teamed up with a host of worldwide companies to deliver highly productive and powerful search-based applications. Initiated in 2007, the project represents more than 15 years of development and has a natural position in the market between very expensive proprietary solutions and some hard-to-use Open Source alternatives which are only suitable for specialists.. "Our goal when we started the project was to be the appropriate solution for developers that don't know what “Enterprise Search” tools were. To penetrate this segment, we built some very innovative features that can be implemented in a very easy way and the addition of APIs and webservices allow full control and the embedding of OpenSearchServer in any in-house application. Also because users can customize any parameters, they will never face a black box. This is what programmers need and we are good at that", said Emmanuel Keller, Jaeksoft CTO.. Some other successful serial entrepreneurs and business angels are investing along with Kima Ventures: Jacques-Antoine Granjon, CEO of vente-privee.com, Fabrice Grinda, CEO of olx.com and Jose Marin, CEO of Serendipity.. </value></field><field name="contentExact"><value>OpenSearchServer is a leading Open Source Enterprise Search tool allowing the development of highly-advanced applications using index and full text algorithms. It has been downloaded by 40 000 users in more than 25 countries.. Paris June 30th, 2011: Founded by CTO Emmanuel Keller and CEO Raphael Perez, OpenSearchServer offers an unrivaled set of features to all sizes of companies, for easing access to increasing volumes of data.. A comprehensive suite of modules covers all steps of index-based applications; OpenSearchServer offers a crawler for the Web, file systems and JDBC databases and a very rich feature set.. The capabilities of the solution are extremely advanced:. Full openness to enterprise data and applications of any kind,. Ease of use, making it possible to create extremely sophisticated applications without writing a single line of code,. The user is given full access to control and customize all algorithms,. Optimized for large volume of data and high loads,. Advanced features (Categorization, Faceting, Find Similar, Administration, Reporting, etc.). Web services allowing a complete embedding of OpenSearchServer in any application.. . . "Our objective is to offer advanced applications developers an optimal solution which they can use and take advantage of without being an expert in full text algorithms or NoSQL database. We see the market strongly going in this direction and so there will be more and more Search-based application projects to which OpenSearchServer is the relevant answer. We designed our software to serve this new entrants market segment but our rich features makes OpenSearchServer to be also a great solution for advanced users of search applications.  We are proud of the arrival of Kima Ventures and this will allow us to build the team so that we can be ready to serve this growing market" said Raphael Perez, OpenSearchServer CEO.. "We strongly believe in the growing need for sophisticated IA (Information Access) software solutions. An increasing number of applications need an efficient tool to access data very fast and to complement databases. OpenSearchServer is a very smart and easy-to-use software solution, yet it’s very powerful. We believe Emmanuel and Raphael can turn this project into a major success and we are happy to be their partners", added Jeremie Berrebi, General Manager of Kima Ventures.. Jaeksoft has already teamed up with a host of worldwide companies to deliver highly productive and powerful search-based applications. Initiated in 2007, the project represents more than 15 years of development and has a natural position in the market between very expensive proprietary solutions and some hard-to-use Open Source alternatives which are only suitable for specialists.. "Our goal when we started the project was to be the appropriate solution for developers that don't know what “Enterprise Search” tools were. To penetrate this segment, we built some very innovative features that can be implemented in a very easy way and the addition of APIs and webservices allow full control and the embedding of OpenSearchServer in any in-house application. Also because users can customize any parameters, they will never face a black box. This is what programmers need and we are good at that", said Emmanuel Keller, Jaeksoft CTO.. Some other successful serial entrepreneurs and business angels are investing along with Kima Ventures: Jacques-Antoine Granjon, CEO of vente-privee.com, Fabrice Grinda, CEO of olx.com and Jose Marin, CEO of Serendipity.. </value></field><field name="contentPhonetic"><value>OpenSearchServer is a leading Open Source Enterprise Search tool allowing the development of highly-advanced applications using index and full text algorithms. It has been downloaded by 40 000 users in more than 25 countries.. Paris June 30th, 2011: Founded by CTO Emmanuel Keller and CEO Raphael Perez, OpenSearchServer offers an unrivaled set of features to all sizes of companies, for easing access to increasing volumes of data.. A comprehensive suite of modules covers all steps of index-based applications; OpenSearchServer offers a crawler for the Web, file systems and JDBC databases and a very rich feature set.. The capabilities of the solution are extremely advanced:. Full openness to enterprise data and applications of any kind,. Ease of use, making it possible to create extremely sophisticated applications without writing a single line of code,. The user is given full access to control and customize all algorithms,. Optimized for large volume of data and high loads,. Advanced features (Categorization, Faceting, Find Similar, Administration, Reporting, etc.). Web services allowing a complete embedding of OpenSearchServer in any application.. . . "Our objective is to offer advanced applications developers an optimal solution which they can use and take advantage of without being an expert in full text algorithms or NoSQL database. We see the market strongly going in this direction and so there will be more and more Search-based application projects to which OpenSearchServer is the relevant answer. We designed our software to serve this new entrants market segment but our rich features makes OpenSearchServer to be also a great solution for advanced users of search applications.  We are proud of the arrival of Kima Ventures and this will allow us to build the team so that we can be ready to serve this growing market" said Raphael Perez, OpenSearchServer CEO.. "We strongly believe in the growing need for sophisticated IA (Information Access) software solutions. An increasing number of applications need an efficient tool to access data very fast and to complement databases. OpenSearchServer is a very smart and easy-to-use software solution, yet it’s very powerful. We believe Emmanuel and Raphael can turn this project into a major success and we are happy to be their partners", added Jeremie Berrebi, General Manager of Kima Ventures.. Jaeksoft has already teamed up with a host of worldwide companies to deliver highly productive and powerful search-based applications. Initiated in 2007, the project represents more than 15 years of development and has a natural position in the market between very expensive proprietary solutions and some hard-to-use Open Source alternatives which are only suitable for specialists.. "Our goal when we started the project was to be the appropriate solution for developers that don't know what “Enterprise Search” tools were. To penetrate this segment, we built some very innovative features that can be implemented in a very easy way and the addition of APIs and webservices allow full control and the embedding of OpenSearchServer in any in-house application. Also because users can customize any parameters, they will never face a black box. This is what programmers need and we are good at that", said Emmanuel Keller, Jaeksoft CTO.. Some other successful serial entrepreneurs and business angels are investing along with Kima Ventures: Jacques-Antoine Granjon, CEO of vente-privee.com, Fabrice Grinda, CEO of olx.com and Jose Marin, CEO of Serendipity.. </value></field><field name="timestamp"><value>20110630173739</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/2010/opensearchserver_community_edition_v1_2_launched</value></field><field name="urlExact"><value>http://dev.open-search-server.com/2010/opensearchserver_community_edition_v1_2_launched</value></field><field name="autocomplete"><value>OpenSearchServer Community Edition v1.2 launched</value></field><field name="title"><value>OpenSearchServer Community Edition v1.2 launched</value></field><field name="titleExact"><value>OpenSearchServer Community Edition v1.2 launched</value></field><field name="titlePhonetic"><value>OpenSearchServer Community Edition v1.2 launched</value></field><field name="content"><value>OpenSearchServer v1.2 has been launched and will propose many major improvements for search applications developers. Available in Sourceforge and downloaded more that 22 000 times this software is offering advanced search possibilities and also a very user friendly interface to shorten the learning curve for developers.. More than 50 new features and bug fixes have been added. An index can be replicated on a remote server. An n-grams filter and a shingle filter provide new possibilities, such as a suggestion box, wrong spelling tolerance, and automated topic generation. A database crawler supporting join queries and external files was added. Several improvements were made to the Web crawler, such as a URL exporter, sub-domain extraction, an exclusion list, manual crawling, and a parameter filter. An API and Web interface for monitoring and supervision was added.. A list of major OpenSearchServer v1.2 Community Edition features is available here.. </value></field><field name="contentExact"><value>OpenSearchServer v1.2 has been launched and will propose many major improvements for search applications developers. Available in Sourceforge and downloaded more that 22 000 times this software is offering advanced search possibilities and also a very user friendly interface to shorten the learning curve for developers.. More than 50 new features and bug fixes have been added. An index can be replicated on a remote server. An n-grams filter and a shingle filter provide new possibilities, such as a suggestion box, wrong spelling tolerance, and automated topic generation. A database crawler supporting join queries and external files was added. Several improvements were made to the Web crawler, such as a URL exporter, sub-domain extraction, an exclusion list, manual crawling, and a parameter filter. An API and Web interface for monitoring and supervision was added.. A list of major OpenSearchServer v1.2 Community Edition features is available here.. </value></field><field name="contentPhonetic"><value>OpenSearchServer v1.2 has been launched and will propose many major improvements for search applications developers. Available in Sourceforge and downloaded more that 22 000 times this software is offering advanced search possibilities and also a very user friendly interface to shorten the learning curve for developers.. More than 50 new features and bug fixes have been added. An index can be replicated on a remote server. An n-grams filter and a shingle filter provide new possibilities, such as a suggestion box, wrong spelling tolerance, and automated topic generation. A database crawler supporting join queries and external files was added. Several improvements were made to the Web crawler, such as a URL exporter, sub-domain extraction, an exclusion list, manual crawling, and a parameter filter. An API and Web interface for monitoring and supervision was added.. A list of major OpenSearchServer v1.2 Community Edition features is available here.. </value></field><field name="timestamp"><value>20101012192804</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/one_feature/drupal_module</value></field><field name="urlExact"><value>http://dev.open-search-server.com/one_feature/drupal_module</value></field><field name="autocomplete"><value>OpenSearchServer Drupal Module: A great Search for a leading CMS</value></field><field name="title"><value>OpenSearchServer Drupal Module: A great Search for a leading CMS</value></field><field name="titleExact"><value>OpenSearchServer Drupal Module: A great Search for a leading CMS</value></field><field name="titlePhonetic"><value>OpenSearchServer Drupal Module: A great Search for a leading CMS</value></field><field name="content"><value>Drupal is a very popular Open Source Content Management System (CMS) offering a Content Management Framework (CMF) written in PHP.. Drupal is complemented by a very active and productive community of developers, who offer more than 10 000 add-ons called Drupal Modules. It is a very customizable CMS and it is one of the more powerful ones.. Drupal includes a search component, but because this advanced CMS allows you to build very powerful applications, we wanted to provide the Drupal developers' community with a search engine of the same very professional level, with high-end possibilities.. With the OpenSearchServer module for Drupal we offer a full-featured and powerful search engine for better professional applications that can be easily integrated.. The OpenSearchServer module for Drupal is still in the sandbox stage for now, while we are waiting for final approval from the Drupal team very soon.. How to install and activate OpenSearchServer for a Drupal Module. Installing OpenSearchServer and DrupalFirst, install an OpenSearchServer instance on a computer that will provide the search ability for Drupal applications and host the index. Then Drupal should be installed on that same computer or on a different computer.. Interconnecting Drupal and OpenSearchServer. At drupal.org/sandbox/ekeller/1128202, you will be able to download the OpenSearchServer files and copy them into the sub-directory Modules of your Drupal application.. Then go to the administration interface of Drupal, click on “OpenSearchServer settings” and fill in the information requested, as in the window below. Indexing of chosen components will start immediately..  The index will be created and will allow you to create any search application within your Drupal project.. Direct access to advanced OpenSearchServer features for Drupal developers. Easy selection of index content: You will have full control of what will the index include. By only checking some boxes you will decide which type of content and category will be indexed or not.. Facetting: You can decide to offer your visitors to automatically filter anddisplay the answers based on content types, dates and categories.. Indexing interval: Depending on your application, you decide how often the index will be updated.. Snippets: When adding a snippet on your results, you will have a selected summary of each document in the answer.. Logging Searches: We know how Search queries are important and how they reflect expectations of your visitors. This feature will provide you with a report of all searches made to allow any further analysis.. Any change to these OpenSearchServer parameters will be taken into account instantly by your application as OpenSearchServer work with "hot changes"..   . Results integration. The results of queries returned by OpenSearchServer will be stored in the format of the traditional template, which can then be easily displayed in your application, as shown below..  . Please note the automatic faceting that will allow an automatic filtering of the results returned, allowing you to display a defined set  of Categories, Dates and Types.. Some advanced features you will appreciate. Should you needed to define an advanced OpenSearchServer parameter or use an advanced feature for your Search, you just have to enter OpenSearchServer, and make your change. Any modification will be instantly pushed to your Drupal application.. You will be in total control of all OpenSearchServer parameters and you will be able to fine-tune the use of full text filters to apply the appropriate processing to data.. You can easily define synonyms so that your users will have greater flexibility when they are entering their queries. For instance, they will be able to type the strings "first" or "1st" or "1st" and get the same results from all.. You will also be able to add stopwords that will be filtered out of the index-building and query process.. You can also focus on faceting possibilities, and customize it to your own needs.. A multitude of advanced features is available in OpenSearchServer and we are sure you will enjoy improving your application with the power they will provide for you.. All of the functionality of OpenSearchServer is described in our online documentation.. . . . </value></field><field name="contentExact"><value>Drupal is a very popular Open Source Content Management System (CMS) offering a Content Management Framework (CMF) written in PHP.. Drupal is complemented by a very active and productive community of developers, who offer more than 10 000 add-ons called Drupal Modules. It is a very customizable CMS and it is one of the more powerful ones.. Drupal includes a search component, but because this advanced CMS allows you to build very powerful applications, we wanted to provide the Drupal developers' community with a search engine of the same very professional level, with high-end possibilities.. With the OpenSearchServer module for Drupal we offer a full-featured and powerful search engine for better professional applications that can be easily integrated.. The OpenSearchServer module for Drupal is still in the sandbox stage for now, while we are waiting for final approval from the Drupal team very soon.. How to install and activate OpenSearchServer for a Drupal Module. Installing OpenSearchServer and DrupalFirst, install an OpenSearchServer instance on a computer that will provide the search ability for Drupal applications and host the index. Then Drupal should be installed on that same computer or on a different computer.. Interconnecting Drupal and OpenSearchServer. At drupal.org/sandbox/ekeller/1128202, you will be able to download the OpenSearchServer files and copy them into the sub-directory Modules of your Drupal application.. Then go to the administration interface of Drupal, click on “OpenSearchServer settings” and fill in the information requested, as in the window below. Indexing of chosen components will start immediately..  The index will be created and will allow you to create any search application within your Drupal project.. Direct access to advanced OpenSearchServer features for Drupal developers. Easy selection of index content: You will have full control of what will the index include. By only checking some boxes you will decide which type of content and category will be indexed or not.. Facetting: You can decide to offer your visitors to automatically filter anddisplay the answers based on content types, dates and categories.. Indexing interval: Depending on your application, you decide how often the index will be updated.. Snippets: When adding a snippet on your results, you will have a selected summary of each document in the answer.. Logging Searches: We know how Search queries are important and how they reflect expectations of your visitors. This feature will provide you with a report of all searches made to allow any further analysis.. Any change to these OpenSearchServer parameters will be taken into account instantly by your application as OpenSearchServer work with "hot changes"..   . Results integration. The results of queries returned by OpenSearchServer will be stored in the format of the traditional template, which can then be easily displayed in your application, as shown below..  . Please note the automatic faceting that will allow an automatic filtering of the results returned, allowing you to display a defined set  of Categories, Dates and Types.. Some advanced features you will appreciate. Should you needed to define an advanced OpenSearchServer parameter or use an advanced feature for your Search, you just have to enter OpenSearchServer, and make your change. Any modification will be instantly pushed to your Drupal application.. You will be in total control of all OpenSearchServer parameters and you will be able to fine-tune the use of full text filters to apply the appropriate processing to data.. You can easily define synonyms so that your users will have greater flexibility when they are entering their queries. For instance, they will be able to type the strings "first" or "1st" or "1st" and get the same results from all.. You will also be able to add stopwords that will be filtered out of the index-building and query process.. You can also focus on faceting possibilities, and customize it to your own needs.. A multitude of advanced features is available in OpenSearchServer and we are sure you will enjoy improving your application with the power they will provide for you.. All of the functionality of OpenSearchServer is described in our online documentation.. . . . </value></field><field name="contentPhonetic"><value>Drupal is a very popular Open Source Content Management System (CMS) offering a Content Management Framework (CMF) written in PHP.. Drupal is complemented by a very active and productive community of developers, who offer more than 10 000 add-ons called Drupal Modules. It is a very customizable CMS and it is one of the more powerful ones.. Drupal includes a search component, but because this advanced CMS allows you to build very powerful applications, we wanted to provide the Drupal developers' community with a search engine of the same very professional level, with high-end possibilities.. With the OpenSearchServer module for Drupal we offer a full-featured and powerful search engine for better professional applications that can be easily integrated.. The OpenSearchServer module for Drupal is still in the sandbox stage for now, while we are waiting for final approval from the Drupal team very soon.. How to install and activate OpenSearchServer for a Drupal Module. Installing OpenSearchServer and DrupalFirst, install an OpenSearchServer instance on a computer that will provide the search ability for Drupal applications and host the index. Then Drupal should be installed on that same computer or on a different computer.. Interconnecting Drupal and OpenSearchServer. At drupal.org/sandbox/ekeller/1128202, you will be able to download the OpenSearchServer files and copy them into the sub-directory Modules of your Drupal application.. Then go to the administration interface of Drupal, click on “OpenSearchServer settings” and fill in the information requested, as in the window below. Indexing of chosen components will start immediately..  The index will be created and will allow you to create any search application within your Drupal project.. Direct access to advanced OpenSearchServer features for Drupal developers. Easy selection of index content: You will have full control of what will the index include. By only checking some boxes you will decide which type of content and category will be indexed or not.. Facetting: You can decide to offer your visitors to automatically filter anddisplay the answers based on content types, dates and categories.. Indexing interval: Depending on your application, you decide how often the index will be updated.. Snippets: When adding a snippet on your results, you will have a selected summary of each document in the answer.. Logging Searches: We know how Search queries are important and how they reflect expectations of your visitors. This feature will provide you with a report of all searches made to allow any further analysis.. Any change to these OpenSearchServer parameters will be taken into account instantly by your application as OpenSearchServer work with "hot changes"..   . Results integration. The results of queries returned by OpenSearchServer will be stored in the format of the traditional template, which can then be easily displayed in your application, as shown below..  . Please note the automatic faceting that will allow an automatic filtering of the results returned, allowing you to display a defined set  of Categories, Dates and Types.. Some advanced features you will appreciate. Should you needed to define an advanced OpenSearchServer parameter or use an advanced feature for your Search, you just have to enter OpenSearchServer, and make your change. Any modification will be instantly pushed to your Drupal application.. You will be in total control of all OpenSearchServer parameters and you will be able to fine-tune the use of full text filters to apply the appropriate processing to data.. You can easily define synonyms so that your users will have greater flexibility when they are entering their queries. For instance, they will be able to type the strings "first" or "1st" or "1st" and get the same results from all.. You will also be able to add stopwords that will be filtered out of the index-building and query process.. You can also focus on faceting possibilities, and customize it to your own needs.. A multitude of advanced features is available in OpenSearchServer and we are sure you will enjoy improving your application with the power they will provide for you.. All of the functionality of OpenSearchServer is described in our online documentation.. . . . </value></field><field name="timestamp"><value>20110611005304</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/one_feature/scheduler</value></field><field name="urlExact"><value>http://dev.open-search-server.com/one_feature/scheduler</value></field><field name="autocomplete"><value>Scheduler module</value></field><field name="title"><value>Scheduler module</value></field><field name="titleExact"><value>Scheduler module</value></field><field name="titlePhonetic"><value>Scheduler module</value></field><field name="content"><value>In an OpenSearchServer application you may have several tasks that you need to run many times. For example, you may want to periodically duplicate your index in another OpenSearchServer instances.. We have integrated a Scheduler into our solution, in order to make it easier to perform these kinds of periodic tasks.. The Scheduler will allow you to schedule tasks that are to be launched and stopped automatically, with no need for you to be present when they are running. Also it will send you an e-mail each time it runs a process, indicating that the process has been run successfully.. OpenSearchServer Scheduler is based on Quartz and uses the same syntax as the Linux Cron program.. Tasks that can be created in the Scheduler module are:. Run the Database Crawler. Start / stop the Web Crawler. Start / stop the File Crawler. Optimize an index. Replicate an index. . Using the Scheduler. In order to access the Scheduler module, you just have to go to the Scheduler tab in OpenSearchServer, after first selecting an index.. Then you tick the “Active” box in order to enable (and later disable) this module and then you choose a name for your set of parameters.. You are now ready to add tasks and define when you wish them to be launched.. . Creating a job. When you are on the Scheduler tab, click on the sub-tab panel called “New/Edit”.. To define a job you will have to enter the following:. A unique name, (and then you tick a box to enable or disable that name),. A cron expression to schedule execution (start and stop times, frequency, etc.),. A list of tasks to be performed by that job.. . The cron expression. In order to make scheduling as simple as possible, we have used the same syntax as Cron, the well-known Linux application. Cron is not only very powerful but also very flexible and it will make your OpenSearchServer applications more professional and efficient.. The cron expression syntax is fully described at. http://en.wikipedia.org/wiki/CRON_expression#CRON_expression. Tasks controlled by the Scheduler. The tasks that you can set up in the Scheduler are displayed in the “Task” menu when you create a job, as shown below.. . Database crawler – run: Execute a database SQL query to populate the index, as defined in the database crawler module.. File crawler – start/stop: Start or stop the indexation of the file system, as defined in the file crawler module.. Web crawler – start/stop: Start or stop the web crawler, as defined in the web crawler module.. Index – optimize: Execute index optimization.. Replication - run: Copy the index to another OpenSearchServer instance, as defined in the Replication module.. Monitoring execution of the Scheduler. . The sub-tab called Log lists all the tasks previously run, and shows the date when they were executed and the duration of the execution.. . </value></field><field name="contentExact"><value>In an OpenSearchServer application you may have several tasks that you need to run many times. For example, you may want to periodically duplicate your index in another OpenSearchServer instances.. We have integrated a Scheduler into our solution, in order to make it easier to perform these kinds of periodic tasks.. The Scheduler will allow you to schedule tasks that are to be launched and stopped automatically, with no need for you to be present when they are running. Also it will send you an e-mail each time it runs a process, indicating that the process has been run successfully.. OpenSearchServer Scheduler is based on Quartz and uses the same syntax as the Linux Cron program.. Tasks that can be created in the Scheduler module are:. Run the Database Crawler. Start / stop the Web Crawler. Start / stop the File Crawler. Optimize an index. Replicate an index. . Using the Scheduler. In order to access the Scheduler module, you just have to go to the Scheduler tab in OpenSearchServer, after first selecting an index.. Then you tick the “Active” box in order to enable (and later disable) this module and then you choose a name for your set of parameters.. You are now ready to add tasks and define when you wish them to be launched.. . Creating a job. When you are on the Scheduler tab, click on the sub-tab panel called “New/Edit”.. To define a job you will have to enter the following:. A unique name, (and then you tick a box to enable or disable that name),. A cron expression to schedule execution (start and stop times, frequency, etc.),. A list of tasks to be performed by that job.. . The cron expression. In order to make scheduling as simple as possible, we have used the same syntax as Cron, the well-known Linux application. Cron is not only very powerful but also very flexible and it will make your OpenSearchServer applications more professional and efficient.. The cron expression syntax is fully described at. http://en.wikipedia.org/wiki/CRON_expression#CRON_expression. Tasks controlled by the Scheduler. The tasks that you can set up in the Scheduler are displayed in the “Task” menu when you create a job, as shown below.. . Database crawler – run: Execute a database SQL query to populate the index, as defined in the database crawler module.. File crawler – start/stop: Start or stop the indexation of the file system, as defined in the file crawler module.. Web crawler – start/stop: Start or stop the web crawler, as defined in the web crawler module.. Index – optimize: Execute index optimization.. Replication - run: Copy the index to another OpenSearchServer instance, as defined in the Replication module.. Monitoring execution of the Scheduler. . The sub-tab called Log lists all the tasks previously run, and shows the date when they were executed and the duration of the execution.. . </value></field><field name="contentPhonetic"><value>In an OpenSearchServer application you may have several tasks that you need to run many times. For example, you may want to periodically duplicate your index in another OpenSearchServer instances.. We have integrated a Scheduler into our solution, in order to make it easier to perform these kinds of periodic tasks.. The Scheduler will allow you to schedule tasks that are to be launched and stopped automatically, with no need for you to be present when they are running. Also it will send you an e-mail each time it runs a process, indicating that the process has been run successfully.. OpenSearchServer Scheduler is based on Quartz and uses the same syntax as the Linux Cron program.. Tasks that can be created in the Scheduler module are:. Run the Database Crawler. Start / stop the Web Crawler. Start / stop the File Crawler. Optimize an index. Replicate an index. . Using the Scheduler. In order to access the Scheduler module, you just have to go to the Scheduler tab in OpenSearchServer, after first selecting an index.. Then you tick the “Active” box in order to enable (and later disable) this module and then you choose a name for your set of parameters.. You are now ready to add tasks and define when you wish them to be launched.. . Creating a job. When you are on the Scheduler tab, click on the sub-tab panel called “New/Edit”.. To define a job you will have to enter the following:. A unique name, (and then you tick a box to enable or disable that name),. A cron expression to schedule execution (start and stop times, frequency, etc.),. A list of tasks to be performed by that job.. . The cron expression. In order to make scheduling as simple as possible, we have used the same syntax as Cron, the well-known Linux application. Cron is not only very powerful but also very flexible and it will make your OpenSearchServer applications more professional and efficient.. The cron expression syntax is fully described at. http://en.wikipedia.org/wiki/CRON_expression#CRON_expression. Tasks controlled by the Scheduler. The tasks that you can set up in the Scheduler are displayed in the “Task” menu when you create a job, as shown below.. . Database crawler – run: Execute a database SQL query to populate the index, as defined in the database crawler module.. File crawler – start/stop: Start or stop the indexation of the file system, as defined in the file crawler module.. Web crawler – start/stop: Start or stop the web crawler, as defined in the web crawler module.. Index – optimize: Execute index optimization.. Replication - run: Copy the index to another OpenSearchServer instance, as defined in the Replication module.. Monitoring execution of the Scheduler. . The sub-tab called Log lists all the tasks previously run, and shows the date when they were executed and the duration of the execution.. . </value></field><field name="timestamp"><value>20110611004626</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2010/10000_downloads</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2010/10000_downloads</value></field><field name="autocomplete"><value>More than 10 000 downloads of OpenSearchServer on SourceForge in the last 12 months</value></field><field name="title"><value>More than 10 000 downloads of OpenSearchServer on SourceForge in the last 12 months</value></field><field name="titleExact"><value>More than 10 000 downloads of OpenSearchServer on SourceForge in the last 12 months</value></field><field name="titlePhonetic"><value>More than 10 000 downloads of OpenSearchServer on SourceForge in the last 12 months</value></field><field name="content"><value>The OpenSearchServer user community grows. Since the launch of the first beta release in April 2009, our open source search engine software has passed the 10 000 downloads milestone at SourceForge. OpenSearchServer, has been downloaded 10,036 times over the past 12 months. We also acknowledge the increased interest in our software, as in March 2010 we have broken our monthly record with 1,696 downloads of OpenSearchServer 1.1.. More and more businesses, analysts, and developers are using our software. Our thanks to everyone who is contributing to OpenSearchServer success and growing popularity! We look forward our announcement this month of the launch of the release 1.2!. Links:. SourceForge: Project Statistics for OpenSearchServer. Download OpenSearchServer. OpenSearchServer SourceForge project. . </value></field><field name="contentExact"><value>The OpenSearchServer user community grows. Since the launch of the first beta release in April 2009, our open source search engine software has passed the 10 000 downloads milestone at SourceForge. OpenSearchServer, has been downloaded 10,036 times over the past 12 months. We also acknowledge the increased interest in our software, as in March 2010 we have broken our monthly record with 1,696 downloads of OpenSearchServer 1.1.. More and more businesses, analysts, and developers are using our software. Our thanks to everyone who is contributing to OpenSearchServer success and growing popularity! We look forward our announcement this month of the launch of the release 1.2!. Links:. SourceForge: Project Statistics for OpenSearchServer. Download OpenSearchServer. OpenSearchServer SourceForge project. . </value></field><field name="contentPhonetic"><value>The OpenSearchServer user community grows. Since the launch of the first beta release in April 2009, our open source search engine software has passed the 10 000 downloads milestone at SourceForge. OpenSearchServer, has been downloaded 10,036 times over the past 12 months. We also acknowledge the increased interest in our software, as in March 2010 we have broken our monthly record with 1,696 downloads of OpenSearchServer 1.1.. More and more businesses, analysts, and developers are using our software. Our thanks to everyone who is contributing to OpenSearchServer success and growing popularity! We look forward our announcement this month of the launch of the release 1.2!. Links:. SourceForge: Project Statistics for OpenSearchServer. Download OpenSearchServer. OpenSearchServer SourceForge project. . </value></field><field name="timestamp"><value>20100403003538</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2009/open-search-server--oss--version-1-1</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2009/open-search-server--oss--version-1-1</value></field><field name="autocomplete"><value>Open Search Server version 1.1</value></field><field name="title"><value>Open Search Server version 1.1</value></field><field name="titleExact"><value>Open Search Server version 1.1</value></field><field name="titlePhonetic"><value>Open Search Server version 1.1</value></field><field name="content"><value>The OpenSearchServer team is pleased to announce the release of the first stable build of OpenSearchServer version 1.1. OpenSearchServer is an open source, modern search engine and comes with a suite of high-powered full text search algorithms.. This release includes the following major enhancements:. Synonyms support. Spellcheck support. Web crawler and file crawler. Support for additional languages: Romanian, Turkish, Danish, Russian and individual Chinese characters. Open Document Format support. Management of several indices within a single instance. . AVAILABILITY. This software is available under the GNU Public License v3. Download information is available at: http://sourceforge.net/projects/opensearchserve/files/. ACKNOWLEDGEMENTS. OpenSearchServer is a project of the InfoPro Communications group. OpenSearchServer was originally developed in 2007 to meet internal needs. It soon became indispensable in a wide range of projects, and was made more generic to facilitate this. The software is now in the final phase of its maturation.. SUPPORT. OpenSearchServer Software is user supported. Please consult the forums.. http://sourceforge.net/projects/opensearchserve/forums. The project maintains a Wiki, on which you'll find the latest documentation work:. http://sourceforge.net/apps/mediawiki/opensearchserve. In addition, there are also discussion lists related to OpenSearchServer. A list of mailing lists is available at:. http://sourceforge.net/mail/?group_id=260863. To report bugs or request new OpenSearchServer features, please use project's Tracking System:. http://sourceforge.net/tracker/?group_id=260863 . The OpenSearchServer team offers an array of services for early adopters:. http://www.open-search-server.com/services. The OpenSearchServer home page containing lots of interesting information:. http://www.open-search-server.com/.  . Regards, . The OpenSearchServer team . </value></field><field name="contentExact"><value>The OpenSearchServer team is pleased to announce the release of the first stable build of OpenSearchServer version 1.1. OpenSearchServer is an open source, modern search engine and comes with a suite of high-powered full text search algorithms.. This release includes the following major enhancements:. Synonyms support. Spellcheck support. Web crawler and file crawler. Support for additional languages: Romanian, Turkish, Danish, Russian and individual Chinese characters. Open Document Format support. Management of several indices within a single instance. . AVAILABILITY. This software is available under the GNU Public License v3. Download information is available at: http://sourceforge.net/projects/opensearchserve/files/. ACKNOWLEDGEMENTS. OpenSearchServer is a project of the InfoPro Communications group. OpenSearchServer was originally developed in 2007 to meet internal needs. It soon became indispensable in a wide range of projects, and was made more generic to facilitate this. The software is now in the final phase of its maturation.. SUPPORT. OpenSearchServer Software is user supported. Please consult the forums.. http://sourceforge.net/projects/opensearchserve/forums. The project maintains a Wiki, on which you'll find the latest documentation work:. http://sourceforge.net/apps/mediawiki/opensearchserve. In addition, there are also discussion lists related to OpenSearchServer. A list of mailing lists is available at:. http://sourceforge.net/mail/?group_id=260863. To report bugs or request new OpenSearchServer features, please use project's Tracking System:. http://sourceforge.net/tracker/?group_id=260863 . The OpenSearchServer team offers an array of services for early adopters:. http://www.open-search-server.com/services. The OpenSearchServer home page containing lots of interesting information:. http://www.open-search-server.com/.  . Regards, . The OpenSearchServer team . </value></field><field name="contentPhonetic"><value>The OpenSearchServer team is pleased to announce the release of the first stable build of OpenSearchServer version 1.1. OpenSearchServer is an open source, modern search engine and comes with a suite of high-powered full text search algorithms.. This release includes the following major enhancements:. Synonyms support. Spellcheck support. Web crawler and file crawler. Support for additional languages: Romanian, Turkish, Danish, Russian and individual Chinese characters. Open Document Format support. Management of several indices within a single instance. . AVAILABILITY. This software is available under the GNU Public License v3. Download information is available at: http://sourceforge.net/projects/opensearchserve/files/. ACKNOWLEDGEMENTS. OpenSearchServer is a project of the InfoPro Communications group. OpenSearchServer was originally developed in 2007 to meet internal needs. It soon became indispensable in a wide range of projects, and was made more generic to facilitate this. The software is now in the final phase of its maturation.. SUPPORT. OpenSearchServer Software is user supported. Please consult the forums.. http://sourceforge.net/projects/opensearchserve/forums. The project maintains a Wiki, on which you'll find the latest documentation work:. http://sourceforge.net/apps/mediawiki/opensearchserve. In addition, there are also discussion lists related to OpenSearchServer. A list of mailing lists is available at:. http://sourceforge.net/mail/?group_id=260863. To report bugs or request new OpenSearchServer features, please use project's Tracking System:. http://sourceforge.net/tracker/?group_id=260863 . The OpenSearchServer team offers an array of services for early adopters:. http://www.open-search-server.com/services. The OpenSearchServer home page containing lots of interesting information:. http://www.open-search-server.com/.  . Regards, . The OpenSearchServer team . </value></field><field name="timestamp"><value>20091020003428</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2009/e-commerce_con_2009</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2009/e-commerce_con_2009</value></field><field name="autocomplete"><value>E-Commerce Con 2009</value></field><field name="title"><value>E-Commerce Con 2009</value></field><field name="titleExact"><value>E-Commerce Con 2009</value></field><field name="titlePhonetic"><value>E-Commerce Con 2009</value></field><field name="content"><value>Our thanks to the numerous folks who came to visit the OpenSearchServer booth at the E-Commerce Con 2009 in Paris, France. The team was proud to present OpenSearchServer, the first professional open source search engine in Europe.. The enthusiasm from the visitors was appreciated, and 72 hours turned out to be too short a time to answer all the questions and queries from the crowd. A change is coming!. . </value></field><field name="contentExact"><value>Our thanks to the numerous folks who came to visit the OpenSearchServer booth at the E-Commerce Con 2009 in Paris, France. The team was proud to present OpenSearchServer, the first professional open source search engine in Europe.. The enthusiasm from the visitors was appreciated, and 72 hours turned out to be too short a time to answer all the questions and queries from the crowd. A change is coming!. . </value></field><field name="contentPhonetic"><value>Our thanks to the numerous folks who came to visit the OpenSearchServer booth at the E-Commerce Con 2009 in Paris, France. The team was proud to present OpenSearchServer, the first professional open source search engine in Europe.. The enthusiasm from the visitors was appreciated, and 72 hours turned out to be too short a time to answer all the questions and queries from the crowd. A change is coming!. . </value></field><field name="timestamp"><value>20091002003241</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2009/the-wiki-for-opensearchserver-is-available</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2009/the-wiki-for-opensearchserver-is-available</value></field><field name="autocomplete"><value>The Wiki for OpenSearchServer is available</value></field><field name="title"><value>The Wiki for OpenSearchServer is available</value></field><field name="titleExact"><value>The Wiki for OpenSearchServer is available</value></field><field name="titlePhonetic"><value>The Wiki for OpenSearchServer is available</value></field><field name="content"><value>We are pleased to announce the launch of the wiki pages for OpenSearchServer. The purpose of this wiki is to be the primary source for the documentation. It contains contributions from both the community and the developer team. All further contributions are welcome!. The wiki website is here: http://www.open-search-server.com/wiki/en. Thanks to Pascal and Sébastien for the initial contributions.. </value></field><field name="contentExact"><value>We are pleased to announce the launch of the wiki pages for OpenSearchServer. The purpose of this wiki is to be the primary source for the documentation. It contains contributions from both the community and the developer team. All further contributions are welcome!. The wiki website is here: http://www.open-search-server.com/wiki/en. Thanks to Pascal and Sébastien for the initial contributions.. </value></field><field name="contentPhonetic"><value>We are pleased to announce the launch of the wiki pages for OpenSearchServer. The purpose of this wiki is to be the primary source for the documentation. It contains contributions from both the community and the developer team. All further contributions are welcome!. The wiki website is here: http://www.open-search-server.com/wiki/en. Thanks to Pascal and Sébastien for the initial contributions.. </value></field><field name="timestamp"><value>20090820003154</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2009/second-open-search-server-beta-now-available</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2009/second-open-search-server-beta-now-available</value></field><field name="autocomplete"><value>Second OpenSearchServer beta now available</value></field><field name="title"><value>Second OpenSearchServer beta now available</value></field><field name="titleExact"><value>Second OpenSearchServer beta now available</value></field><field name="titlePhonetic"><value>Second OpenSearchServer beta now available</value></field><field name="content"><value>We are pleased to announce that version 1.0b2 (beta 2) of OpenSearchServer has been released. This new version includes some improvements, and fixes the bugs identified during the beta 1 phase. It can now be downloaded on the OpenSearchServer site on SourceForge !. </value></field><field name="contentExact"><value>We are pleased to announce that version 1.0b2 (beta 2) of OpenSearchServer has been released. This new version includes some improvements, and fixes the bugs identified during the beta 1 phase. It can now be downloaded on the OpenSearchServer site on SourceForge !. </value></field><field name="contentPhonetic"><value>We are pleased to announce that version 1.0b2 (beta 2) of OpenSearchServer has been released. This new version includes some improvements, and fixes the bugs identified during the beta 1 phase. It can now be downloaded on the OpenSearchServer site on SourceForge !. </value></field><field name="timestamp"><value>20090625003107</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news/2009/open-search-server-a-technology-partner-with-ossif</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news/2009/open-search-server-a-technology-partner-with-ossif</value></field><field name="autocomplete"><value>Open Search Server a technology partner with OSSIF</value></field><field name="title"><value>Open Search Server a technology partner with OSSIF</value></field><field name="titleExact"><value>Open Search Server a technology partner with OSSIF</value></field><field name="titlePhonetic"><value>Open Search Server a technology partner with OSSIF</value></field><field name="content"><value>It will be our pleasure to meet with all who have an interest in Open Search Server on the 26th of May, 2009, during the Open Source Software Industry Forum (OSSIF) in Toulouse, France.. This event is organised by the FNILL (Fédération Nationale de l’Industrie du Logiciel Libre – National Federation of the Open Source Software Industry) along with Mêlée Numérique, the Toulouse University and Aerospace Valley. Open Search Server is technology partner with OSSIF.. We will run demos and have our experts available to answer questions.. </value></field><field name="contentExact"><value>It will be our pleasure to meet with all who have an interest in Open Search Server on the 26th of May, 2009, during the Open Source Software Industry Forum (OSSIF) in Toulouse, France.. This event is organised by the FNILL (Fédération Nationale de l’Industrie du Logiciel Libre – National Federation of the Open Source Software Industry) along with Mêlée Numérique, the Toulouse University and Aerospace Valley. Open Search Server is technology partner with OSSIF.. We will run demos and have our experts available to answer questions.. </value></field><field name="contentPhonetic"><value>It will be our pleasure to meet with all who have an interest in Open Search Server on the 26th of May, 2009, during the Open Source Software Industry Forum (OSSIF) in Toulouse, France.. This event is organised by the FNILL (Fédération Nationale de l’Industrie du Logiciel Libre – National Federation of the Open Source Software Industry) along with Mêlée Numérique, the Toulouse University and Aerospace Valley. Open Search Server is technology partner with OSSIF.. We will run demos and have our experts available to answer questions.. </value></field><field name="timestamp"><value>20090518002946</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/62</value></field><field name="urlExact"><value>http://dev.open-search-server.com/62</value></field><field name="autocomplete"><value>Online marketing Internship</value></field><field name="title"><value>Online marketing Internship</value></field><field name="titleExact"><value>Online marketing Internship</value></field><field name="titlePhonetic"><value>Online marketing Internship</value></field><field name="content"><value>An important part of our activities is to increase and improve our online exposure in order to optimize the help we give developers needing more information about OpenSearchServer. For this, we need someone to look at our web reporting every day, make the necessary analysis and decide on the most appropriate actions.. If you are student in a first level University or business school and want to spend at least 6 months in our Paris office to help with this and you believe have good reasons to succeed, please let us know by sending your resume to us at jobs@open-search-server.com. </value></field><field name="contentExact"><value>An important part of our activities is to increase and improve our online exposure in order to optimize the help we give developers needing more information about OpenSearchServer. For this, we need someone to look at our web reporting every day, make the necessary analysis and decide on the most appropriate actions.. If you are student in a first level University or business school and want to spend at least 6 months in our Paris office to help with this and you believe have good reasons to succeed, please let us know by sending your resume to us at jobs@open-search-server.com. </value></field><field name="contentPhonetic"><value>An important part of our activities is to increase and improve our online exposure in order to optimize the help we give developers needing more information about OpenSearchServer. For this, we need someone to look at our web reporting every day, make the necessary analysis and decide on the most appropriate actions.. If you are student in a first level University or business school and want to spend at least 6 months in our Paris office to help with this and you believe have good reasons to succeed, please let us know by sending your resume to us at jobs@open-search-server.com. </value></field><field name="timestamp"><value>20110610234736</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/61</value></field><field name="urlExact"><value>http://dev.open-search-server.com/61</value></field><field name="autocomplete"><value>Developers' Community manager Internship</value></field><field name="title"><value>Developers' Community manager Internship</value></field><field name="titleExact"><value>Developers' Community manager Internship</value></field><field name="titlePhonetic"><value>Developers' Community manager Internship</value></field><field name="content"><value>OpenSearchServer is available on Sourceforge, from where hundreds of developers download it every week. They can also find all tools to keep in touch with us and stay informed. It’s the basic of any Open Source project.. If you are a student in a first level University or IT school, you probably have experience of using an Open Source project from a forge and therefore you have some ideas about how we can provide the optimum service that customers dream of. This position can be an internship or a part-time job along with your studies. If this challenge suits you, we would love to hear from you, so please send your resume to us at jobs@open-search-server.com. . </value></field><field name="contentExact"><value>OpenSearchServer is available on Sourceforge, from where hundreds of developers download it every week. They can also find all tools to keep in touch with us and stay informed. It’s the basic of any Open Source project.. If you are a student in a first level University or IT school, you probably have experience of using an Open Source project from a forge and therefore you have some ideas about how we can provide the optimum service that customers dream of. This position can be an internship or a part-time job along with your studies. If this challenge suits you, we would love to hear from you, so please send your resume to us at jobs@open-search-server.com. . </value></field><field name="contentPhonetic"><value>OpenSearchServer is available on Sourceforge, from where hundreds of developers download it every week. They can also find all tools to keep in touch with us and stay informed. It’s the basic of any Open Source project.. If you are a student in a first level University or IT school, you probably have experience of using an Open Source project from a forge and therefore you have some ideas about how we can provide the optimum service that customers dream of. This position can be an internship or a part-time job along with your studies. If this challenge suits you, we would love to hear from you, so please send your resume to us at jobs@open-search-server.com. . </value></field><field name="timestamp"><value>20110610234649</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/60</value></field><field name="urlExact"><value>http://dev.open-search-server.com/60</value></field><field name="autocomplete"><value>Senior C/Java Developer</value></field><field name="title"><value>Senior C/Java Developer</value></field><field name="titleExact"><value>Senior C/Java Developer</value></field><field name="titlePhonetic"><value>Senior C/Java Developer</value></field><field name="content"><value>You have a successful background in high-level programming; you are interested in working on complex projects and in being part of the core team of an Open Source project with international scope.. . Knowledge:. Java programming in large projects,. Highly qualified in C programming,. NoSQL, . System and network programming,. Programming experience in a Windows and/or Linux environment,. PHP, HTML, Javascript.. . If you are interested in this position, please send your resume to us at jobs@open-search-server.com. </value></field><field name="contentExact"><value>You have a successful background in high-level programming; you are interested in working on complex projects and in being part of the core team of an Open Source project with international scope.. . Knowledge:. Java programming in large projects,. Highly qualified in C programming,. NoSQL, . System and network programming,. Programming experience in a Windows and/or Linux environment,. PHP, HTML, Javascript.. . If you are interested in this position, please send your resume to us at jobs@open-search-server.com. </value></field><field name="contentPhonetic"><value>You have a successful background in high-level programming; you are interested in working on complex projects and in being part of the core team of an Open Source project with international scope.. . Knowledge:. Java programming in large projects,. Highly qualified in C programming,. NoSQL, . System and network programming,. Programming experience in a Windows and/or Linux environment,. PHP, HTML, Javascript.. . If you are interested in this position, please send your resume to us at jobs@open-search-server.com. </value></field><field name="timestamp"><value>20110610234601</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/59</value></field><field name="urlExact"><value>http://dev.open-search-server.com/59</value></field><field name="autocomplete"><value>Inside Sales representative</value></field><field name="title"><value>Inside Sales representative</value></field><field name="titleExact"><value>Inside Sales representative</value></field><field name="titlePhonetic"><value>Inside Sales representative</value></field><field name="content"><value>. You will be working on online leads stored in our CRM software. Your job will be to answer inbound calls and investigate potential business from. Then you will have to have a daily follow-up and send quotations and order confirmations.. You will also be part of outbound international calls campaigns and you will be responsible for the escalation of feedback from external contacts.. If you are interested in this position, please send your resume to us at jobs@open-search-server.com. </value></field><field name="contentExact"><value>. You will be working on online leads stored in our CRM software. Your job will be to answer inbound calls and investigate potential business from. Then you will have to have a daily follow-up and send quotations and order confirmations.. You will also be part of outbound international calls campaigns and you will be responsible for the escalation of feedback from external contacts.. If you are interested in this position, please send your resume to us at jobs@open-search-server.com. </value></field><field name="contentPhonetic"><value>. You will be working on online leads stored in our CRM software. Your job will be to answer inbound calls and investigate potential business from. Then you will have to have a daily follow-up and send quotations and order confirmations.. You will also be part of outbound international calls campaigns and you will be responsible for the escalation of feedback from external contacts.. If you are interested in this position, please send your resume to us at jobs@open-search-server.com. </value></field><field name="timestamp"><value>20110610234502</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/business_case/mimtid</value></field><field name="urlExact"><value>http://dev.open-search-server.com/business_case/mimtid</value></field><field name="autocomplete"><value>MiMTiD Corp. identifies over 100 Million instances of copyright infringements</value></field><field name="title"><value>MiMTiD Corp. identifies over 100 Million instances of copyright infringements</value></field><field name="titleExact"><value>MiMTiD Corp. identifies over 100 Million instances of copyright infringements</value></field><field name="titlePhonetic"><value>MiMTiD Corp. identifies over 100 Million instances of copyright infringements</value></field><field name="content"><value>About MiMTiD Corp.. MiMTiD Corp. acts as Content Protection Agent for some of the world's leading Motion Picture, Record and Sports Programming companies in the United States. On a monthly basis, MiMTiD submits thousands of take down notices to file hosting companies, torrent sites, streaming sites and most importantly search engines. Using our proprietary technology, MiMTiD is able to locate infringing content - globally.  Once the source links for the infringed content is located, MiMTiD uses its Fulcrum technology to reverse map streaming links, locker site links and torrent links to identify the search engine links that feed traffic to these repeat infringing sites. MiMTiD also identifies Advertising networks monetizing infringing content. Since November of 2009, MiMTiD has exclusively used OpenSearchServer to identify over 100 million instances of copyright infringement.  MiMTiD uses the data accumulated by OpenSearchServer to provide its Customers, U.S. Lawmakers and U.S. Law Enforcement with essential tools to combat global copyright infringement.The central software tool used to achieve this high end service is OpenSearchServer.. What is MiMTiD offering?. MiMTiD offers a broad range of different services to copyright and intellectual property owners.. Finding. MiMTiD locates its customers infringed content globally on the web.. Noticing. MiMTiD submits notices to locker sites,torrent sites, streaming sites, major search engines, internet advertising networks and an unlimited number of infringing websites, globally.. The Chilling Report. The Chilling report provides a diverse set of investigative and reporting tools to copyright owners, law enforcement and government agencies.. Main OpenSearchServer features used by MiMTiD. MiMTiD uses OpenSearchServer extraordinary crawling modules to precisely identify content in infringing websites and leverages the product’s expansive tools to create and test algorithms and tune query results with very impressive results.MiMTiD developments with OpenSearchServer started with version 1.1 in August 2010 and now uses v 1.2.. Some hosting consideration to better describe volume of data and infrastructure. Getting OpenSearchServer up and running on Linux takes minutes. By comparison, other products are very difficult to install, run and even grasp the basic operational concepts.  OpenSearchServer can be installed, operated and maintained by persons with minimal web experience.  The documentation and the seemingly simple PHP snippets enable the rapid development of powerful web applications that leverage the product’s features and enable distribution of results without the need to allocate resources to front end integration and development.  MiMTiD routinely uses OpenSearchServer to generate several million infringement prospects in a matter of hours. Simultaneously, the real-time results are being queried using algorithms designed in OpenSearchServer to rapidly identify the actual infringements.  In a twenty four hour period, one instance of OpenSearchServer running with over Redhat with 16 gigabytes of Ram on a Dell Nehalem Server can crawl millions of web pages and can be simultaneously queried hundred of thousands of times with no crawling performance trade off.  This is accomplished with the Replication feature.. Improving result readability. The combined use of OpenSearchServer and Carrot2 visualization offers a very human readable graphical representation of search results showing infringing websites, splitting them into clusters by content type, enabling the rapid discovery of potential infringements.. . For example when you make a search for material related to "Elvis Presley" you first have a classical text presentation of results and you can browse them sing the automatic categorization or “clustering” on left side provided by the faceting feature.. . Another possibility to see and navigate results is available when clicking on the tab "Circles". This feature enables efficient data representation showing graphically the categories of data present in the query results and that will allow you to navigate easily. The combination of OpenSearchServer and Carrot2 enables an incredibly powerful discovery tool and is an essential component of the MiMTiD system.. . . </value></field><field name="contentExact"><value>About MiMTiD Corp.. MiMTiD Corp. acts as Content Protection Agent for some of the world's leading Motion Picture, Record and Sports Programming companies in the United States. On a monthly basis, MiMTiD submits thousands of take down notices to file hosting companies, torrent sites, streaming sites and most importantly search engines. Using our proprietary technology, MiMTiD is able to locate infringing content - globally.  Once the source links for the infringed content is located, MiMTiD uses its Fulcrum technology to reverse map streaming links, locker site links and torrent links to identify the search engine links that feed traffic to these repeat infringing sites. MiMTiD also identifies Advertising networks monetizing infringing content. Since November of 2009, MiMTiD has exclusively used OpenSearchServer to identify over 100 million instances of copyright infringement.  MiMTiD uses the data accumulated by OpenSearchServer to provide its Customers, U.S. Lawmakers and U.S. Law Enforcement with essential tools to combat global copyright infringement.The central software tool used to achieve this high end service is OpenSearchServer.. What is MiMTiD offering?. MiMTiD offers a broad range of different services to copyright and intellectual property owners.. Finding. MiMTiD locates its customers infringed content globally on the web.. Noticing. MiMTiD submits notices to locker sites,torrent sites, streaming sites, major search engines, internet advertising networks and an unlimited number of infringing websites, globally.. The Chilling Report. The Chilling report provides a diverse set of investigative and reporting tools to copyright owners, law enforcement and government agencies.. Main OpenSearchServer features used by MiMTiD. MiMTiD uses OpenSearchServer extraordinary crawling modules to precisely identify content in infringing websites and leverages the product’s expansive tools to create and test algorithms and tune query results with very impressive results.MiMTiD developments with OpenSearchServer started with version 1.1 in August 2010 and now uses v 1.2.. Some hosting consideration to better describe volume of data and infrastructure. Getting OpenSearchServer up and running on Linux takes minutes. By comparison, other products are very difficult to install, run and even grasp the basic operational concepts.  OpenSearchServer can be installed, operated and maintained by persons with minimal web experience.  The documentation and the seemingly simple PHP snippets enable the rapid development of powerful web applications that leverage the product’s features and enable distribution of results without the need to allocate resources to front end integration and development.  MiMTiD routinely uses OpenSearchServer to generate several million infringement prospects in a matter of hours. Simultaneously, the real-time results are being queried using algorithms designed in OpenSearchServer to rapidly identify the actual infringements.  In a twenty four hour period, one instance of OpenSearchServer running with over Redhat with 16 gigabytes of Ram on a Dell Nehalem Server can crawl millions of web pages and can be simultaneously queried hundred of thousands of times with no crawling performance trade off.  This is accomplished with the Replication feature.. Improving result readability. The combined use of OpenSearchServer and Carrot2 visualization offers a very human readable graphical representation of search results showing infringing websites, splitting them into clusters by content type, enabling the rapid discovery of potential infringements.. . For example when you make a search for material related to "Elvis Presley" you first have a classical text presentation of results and you can browse them sing the automatic categorization or “clustering” on left side provided by the faceting feature.. . Another possibility to see and navigate results is available when clicking on the tab "Circles". This feature enables efficient data representation showing graphically the categories of data present in the query results and that will allow you to navigate easily. The combination of OpenSearchServer and Carrot2 enables an incredibly powerful discovery tool and is an essential component of the MiMTiD system.. . . </value></field><field name="contentPhonetic"><value>About MiMTiD Corp.. MiMTiD Corp. acts as Content Protection Agent for some of the world's leading Motion Picture, Record and Sports Programming companies in the United States. On a monthly basis, MiMTiD submits thousands of take down notices to file hosting companies, torrent sites, streaming sites and most importantly search engines. Using our proprietary technology, MiMTiD is able to locate infringing content - globally.  Once the source links for the infringed content is located, MiMTiD uses its Fulcrum technology to reverse map streaming links, locker site links and torrent links to identify the search engine links that feed traffic to these repeat infringing sites. MiMTiD also identifies Advertising networks monetizing infringing content. Since November of 2009, MiMTiD has exclusively used OpenSearchServer to identify over 100 million instances of copyright infringement.  MiMTiD uses the data accumulated by OpenSearchServer to provide its Customers, U.S. Lawmakers and U.S. Law Enforcement with essential tools to combat global copyright infringement.The central software tool used to achieve this high end service is OpenSearchServer.. What is MiMTiD offering?. MiMTiD offers a broad range of different services to copyright and intellectual property owners.. Finding. MiMTiD locates its customers infringed content globally on the web.. Noticing. MiMTiD submits notices to locker sites,torrent sites, streaming sites, major search engines, internet advertising networks and an unlimited number of infringing websites, globally.. The Chilling Report. The Chilling report provides a diverse set of investigative and reporting tools to copyright owners, law enforcement and government agencies.. Main OpenSearchServer features used by MiMTiD. MiMTiD uses OpenSearchServer extraordinary crawling modules to precisely identify content in infringing websites and leverages the product’s expansive tools to create and test algorithms and tune query results with very impressive results.MiMTiD developments with OpenSearchServer started with version 1.1 in August 2010 and now uses v 1.2.. Some hosting consideration to better describe volume of data and infrastructure. Getting OpenSearchServer up and running on Linux takes minutes. By comparison, other products are very difficult to install, run and even grasp the basic operational concepts.  OpenSearchServer can be installed, operated and maintained by persons with minimal web experience.  The documentation and the seemingly simple PHP snippets enable the rapid development of powerful web applications that leverage the product’s features and enable distribution of results without the need to allocate resources to front end integration and development.  MiMTiD routinely uses OpenSearchServer to generate several million infringement prospects in a matter of hours. Simultaneously, the real-time results are being queried using algorithms designed in OpenSearchServer to rapidly identify the actual infringements.  In a twenty four hour period, one instance of OpenSearchServer running with over Redhat with 16 gigabytes of Ram on a Dell Nehalem Server can crawl millions of web pages and can be simultaneously queried hundred of thousands of times with no crawling performance trade off.  This is accomplished with the Replication feature.. Improving result readability. The combined use of OpenSearchServer and Carrot2 visualization offers a very human readable graphical representation of search results showing infringing websites, splitting them into clusters by content type, enabling the rapid discovery of potential infringements.. . For example when you make a search for material related to "Elvis Presley" you first have a classical text presentation of results and you can browse them sing the automatic categorization or “clustering” on left side provided by the faceting feature.. . Another possibility to see and navigate results is available when clicking on the tab "Circles". This feature enables efficient data representation showing graphically the categories of data present in the query results and that will allow you to navigate easily. The combination of OpenSearchServer and Carrot2 enables an incredibly powerful discovery tool and is an essential component of the MiMTiD system.. . . </value></field><field name="timestamp"><value>20110611214949</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/46</value></field><field name="urlExact"><value>http://dev.open-search-server.com/46</value></field><field name="autocomplete"><value>Online marketing Internship</value></field><field name="title"><value>Online marketing Internship</value></field><field name="titleExact"><value>Online marketing Internship</value></field><field name="titlePhonetic"><value>Online marketing Internship</value></field><field name="content"><value>An important part of our activity is to increase and improve our online exposure in order to better  help our visitors and .. For this we need to have a daily analysis of our web reporting, make the necessary analysis and decide of most appropriate actions.. . If you are student in a first level University or business school and want to spend at least 6 months in our Paris office to help for this and you believe have good reasons to succeed. Please let us know and send your resume at jobs@open-search-server.com quoting INT OLN MKT in subject.. </value></field><field name="contentExact"><value>An important part of our activity is to increase and improve our online exposure in order to better  help our visitors and .. For this we need to have a daily analysis of our web reporting, make the necessary analysis and decide of most appropriate actions.. . If you are student in a first level University or business school and want to spend at least 6 months in our Paris office to help for this and you believe have good reasons to succeed. Please let us know and send your resume at jobs@open-search-server.com quoting INT OLN MKT in subject.. </value></field><field name="contentPhonetic"><value>An important part of our activity is to increase and improve our online exposure in order to better  help our visitors and .. For this we need to have a daily analysis of our web reporting, make the necessary analysis and decide of most appropriate actions.. . If you are student in a first level University or business school and want to spend at least 6 months in our Paris office to help for this and you believe have good reasons to succeed. Please let us know and send your resume at jobs@open-search-server.com quoting INT OLN MKT in subject.. </value></field><field name="timestamp"><value>20110607173614</value></field><field name="type"><value>story</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/16</value></field><field name="urlExact"><value>http://dev.open-search-server.com/16</value></field><field name="autocomplete"><value>One Feature</value></field><field name="title"><value>One Feature</value></field><field name="titleExact"><value>One Feature</value></field><field name="titlePhonetic"><value>One Feature</value></field><field name="content"><value>Syntax analyzers slice sentences into words and then run text and language specific algorithms (singular/plural, gender, conjugated verbs, etc.).. </value></field><field name="contentExact"><value>Syntax analyzers slice sentences into words and then run text and language specific algorithms (singular/plural, gender, conjugated verbs, etc.).. </value></field><field name="contentPhonetic"><value>Syntax analyzers slice sentences into words and then run text and language specific algorithms (singular/plural, gender, conjugated verbs, etc.).. </value></field><field name="timestamp"><value>20110604155316</value></field><field name="type"><value>story</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/cas_client/mimtid</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/cas_client/mimtid</value></field><field name="autocomplete"><value>MIMTID Corp.: OpenSearchServer identifie plus de 100 millions d'infractions au copyright</value></field><field name="title"><value>MIMTID Corp.: OpenSearchServer identifie plus de 100 millions d'infractions au copyright</value></field><field name="titleExact"><value>MIMTID Corp.: OpenSearchServer identifie plus de 100 millions d'infractions au copyright</value></field><field name="titlePhonetic"><value>MIMTID Corp.: OpenSearchServer identifie plus de 100 millions d'infractions au copyright</value></field><field name="content"><value>A propos de MiMTiD Corp.. MiMTiD Corp. intervient dans la protection de contenus pour des acteurs majeurs dans le domaine de l'audiovisuel aux Etats-Unis. Sur une base mensuelle, MiMTiD soumet des milliers de demandes de retraits auprès de service de stockage, sites torrent, sites de téléchargement et autres importants moteurs de recherche. Basé sur notre technologie propriétaire, MiMTiD est capable de localiser les contenus illicites - globalement.  Quand le lien source du contenu illicite est identifié, MiMTiD utilise sa technologie Fulcrum technology pour cartographier les liens de téléchargement et identifier les moteurs de recherche qui alimentent en trafic les sites contrevenants. MiMTiD identifie également les réseaux de publicité monétisant ces contenus illicites. Depuis novembre 2009, MiMTiD utilise exclusivement OpenSearchServer pour identifier plus de 100 millions d'infractions au copyright.  MiMTiD utilise les données accumulées par OpenSearchServer pour informer ses clients, législateur américains, officiers assermentés américains avec des outils essentiels pour combattre globalement les infractions au copyright. Le logiciel principal utilisé pour atteindre les objectifs de ce service haut de gamme est OpenSearchServer.. Quel est l'offre de MiMTiD?. MiMTiD offre une large palette de services pour les détenteurs de droits en terme de propriété intellectuelle et de copyright.. Trouver. MiMTiD localise globalement les contenus proposés illégalement sur le web.. Informer. MiMTiD envoie des alertes aux sites identifiés, sites torrent, sites de téléchargements, moteurs de recherche majeurs, réseaux de publicité online et un nombre non limité de sites contrevants, globalement.. Le "Chilling report". Le Chilling report fournit un certain nombre d'outils d'investigation et de rapports aux détenteurs de copyright, officiers de police judiciaire, agences gouvernementales.. L'usage d'OpenSearchServer par MiMTiD. MiMTiD utiliser OpenSearchServer et son module de crawl pour identifier précisement les contenus sur les sites en démultipliant les possibilités des outils de tests d'algorithmes, de mise au point des requêtes. Les développements de MiMTiD avec OpenSearchServer ont commencé avec la version 1.1 en août 2010, ils utilisent maintenant la version 1.2.. Quelques considérations autour de l'hébergement pour mieux décrire le volume de données et l'infrastructure. Installer et faire fonctionner OpenSearchServer sur Linux ne prend que quelques minutes. En comparaison, d'autres produits sont très difficiles à installer, à faire fonctionner ou même simplement en comprendre les concepts opérationnels de base. OpenSearchServer peut être installé, opéré et maintenu par quelqu'un n'ayant qu'une expérience web minime. La documentation et les extraits de texte en PHP d'apparence simple permettent le développement rapide de puissantes applications web qui s'appuient sur les fonctionnalités du produit mais aussi la présentation de résultats sans le besoin d'allouer des ressources à l'intégration au front office ou au développement. MiMTiD utilise de façon routinière OpenSearchServer pour faire émerger en quelques heures plusieurs millions de potentielles infractions. Simultanément, les résultats en temps réel sont générés en utilisant des algorithmes conçus dans OpenSearchServer pour rapidement identifier les infractions réelles. Dans une période de vingt-quatre heure, une instance d'OpenSearchServer exécutée sur Redhat avec 16 gigaoctets de RAM sur un serveur Dell Nehalem peut crawler des millions de pages Web et en simultané être interrogée des centaines de milliers de fois sans perte de performance de crawl. Ceci est possible par la fonctionnalité de Replication.. Lisibilité des résultats. L'usage combiné d'OpenSearchServer et de l'outil de visualisation Carrot2 offre experience utilisateur basé sur une représentation graphique montrant les sites web contrevenants, regroupés par type de contenu, permettant une identification rapide des infractions potentielles.. . Par exemple, quand vous faites une recherche sur "Elvis Presley" vous avez d'abord une présentation textuelle classique des résultats, et vous pouvez les parcourir au travers de la catégorisation automatique ou via les regroupements proposés sur la colonne de gauche, via les fonctionnalités de facettes.. . Une autre possibilité de voir et de parcourir les résultats est disponible en cliquant sur l'onglet "Circles". Cette fonctionnalité affiche une représentation graphique montrant les catégories présentes dans les résultats et permet une navigation aisée. La combinaison d'OpenSearchServer et Carrot2 offre un puissant outil d'identifications et est un composant essentiel du dispositif fournit par MIMTid.. . . </value></field><field name="contentExact"><value>A propos de MiMTiD Corp.. MiMTiD Corp. intervient dans la protection de contenus pour des acteurs majeurs dans le domaine de l'audiovisuel aux Etats-Unis. Sur une base mensuelle, MiMTiD soumet des milliers de demandes de retraits auprès de service de stockage, sites torrent, sites de téléchargement et autres importants moteurs de recherche. Basé sur notre technologie propriétaire, MiMTiD est capable de localiser les contenus illicites - globalement.  Quand le lien source du contenu illicite est identifié, MiMTiD utilise sa technologie Fulcrum technology pour cartographier les liens de téléchargement et identifier les moteurs de recherche qui alimentent en trafic les sites contrevenants. MiMTiD identifie également les réseaux de publicité monétisant ces contenus illicites. Depuis novembre 2009, MiMTiD utilise exclusivement OpenSearchServer pour identifier plus de 100 millions d'infractions au copyright.  MiMTiD utilise les données accumulées par OpenSearchServer pour informer ses clients, législateur américains, officiers assermentés américains avec des outils essentiels pour combattre globalement les infractions au copyright. Le logiciel principal utilisé pour atteindre les objectifs de ce service haut de gamme est OpenSearchServer.. Quel est l'offre de MiMTiD?. MiMTiD offre une large palette de services pour les détenteurs de droits en terme de propriété intellectuelle et de copyright.. Trouver. MiMTiD localise globalement les contenus proposés illégalement sur le web.. Informer. MiMTiD envoie des alertes aux sites identifiés, sites torrent, sites de téléchargements, moteurs de recherche majeurs, réseaux de publicité online et un nombre non limité de sites contrevants, globalement.. Le "Chilling report". Le Chilling report fournit un certain nombre d'outils d'investigation et de rapports aux détenteurs de copyright, officiers de police judiciaire, agences gouvernementales.. L'usage d'OpenSearchServer par MiMTiD. MiMTiD utiliser OpenSearchServer et son module de crawl pour identifier précisement les contenus sur les sites en démultipliant les possibilités des outils de tests d'algorithmes, de mise au point des requêtes. Les développements de MiMTiD avec OpenSearchServer ont commencé avec la version 1.1 en août 2010, ils utilisent maintenant la version 1.2.. Quelques considérations autour de l'hébergement pour mieux décrire le volume de données et l'infrastructure. Installer et faire fonctionner OpenSearchServer sur Linux ne prend que quelques minutes. En comparaison, d'autres produits sont très difficiles à installer, à faire fonctionner ou même simplement en comprendre les concepts opérationnels de base. OpenSearchServer peut être installé, opéré et maintenu par quelqu'un n'ayant qu'une expérience web minime. La documentation et les extraits de texte en PHP d'apparence simple permettent le développement rapide de puissantes applications web qui s'appuient sur les fonctionnalités du produit mais aussi la présentation de résultats sans le besoin d'allouer des ressources à l'intégration au front office ou au développement. MiMTiD utilise de façon routinière OpenSearchServer pour faire émerger en quelques heures plusieurs millions de potentielles infractions. Simultanément, les résultats en temps réel sont générés en utilisant des algorithmes conçus dans OpenSearchServer pour rapidement identifier les infractions réelles. Dans une période de vingt-quatre heure, une instance d'OpenSearchServer exécutée sur Redhat avec 16 gigaoctets de RAM sur un serveur Dell Nehalem peut crawler des millions de pages Web et en simultané être interrogée des centaines de milliers de fois sans perte de performance de crawl. Ceci est possible par la fonctionnalité de Replication.. Lisibilité des résultats. L'usage combiné d'OpenSearchServer et de l'outil de visualisation Carrot2 offre experience utilisateur basé sur une représentation graphique montrant les sites web contrevenants, regroupés par type de contenu, permettant une identification rapide des infractions potentielles.. . Par exemple, quand vous faites une recherche sur "Elvis Presley" vous avez d'abord une présentation textuelle classique des résultats, et vous pouvez les parcourir au travers de la catégorisation automatique ou via les regroupements proposés sur la colonne de gauche, via les fonctionnalités de facettes.. . Une autre possibilité de voir et de parcourir les résultats est disponible en cliquant sur l'onglet "Circles". Cette fonctionnalité affiche une représentation graphique montrant les catégories présentes dans les résultats et permet une navigation aisée. La combinaison d'OpenSearchServer et Carrot2 offre un puissant outil d'identifications et est un composant essentiel du dispositif fournit par MIMTid.. . . </value></field><field name="contentPhonetic"><value>A propos de MiMTiD Corp.. MiMTiD Corp. intervient dans la protection de contenus pour des acteurs majeurs dans le domaine de l'audiovisuel aux Etats-Unis. Sur une base mensuelle, MiMTiD soumet des milliers de demandes de retraits auprès de service de stockage, sites torrent, sites de téléchargement et autres importants moteurs de recherche. Basé sur notre technologie propriétaire, MiMTiD est capable de localiser les contenus illicites - globalement.  Quand le lien source du contenu illicite est identifié, MiMTiD utilise sa technologie Fulcrum technology pour cartographier les liens de téléchargement et identifier les moteurs de recherche qui alimentent en trafic les sites contrevenants. MiMTiD identifie également les réseaux de publicité monétisant ces contenus illicites. Depuis novembre 2009, MiMTiD utilise exclusivement OpenSearchServer pour identifier plus de 100 millions d'infractions au copyright.  MiMTiD utilise les données accumulées par OpenSearchServer pour informer ses clients, législateur américains, officiers assermentés américains avec des outils essentiels pour combattre globalement les infractions au copyright. Le logiciel principal utilisé pour atteindre les objectifs de ce service haut de gamme est OpenSearchServer.. Quel est l'offre de MiMTiD?. MiMTiD offre une large palette de services pour les détenteurs de droits en terme de propriété intellectuelle et de copyright.. Trouver. MiMTiD localise globalement les contenus proposés illégalement sur le web.. Informer. MiMTiD envoie des alertes aux sites identifiés, sites torrent, sites de téléchargements, moteurs de recherche majeurs, réseaux de publicité online et un nombre non limité de sites contrevants, globalement.. Le "Chilling report". Le Chilling report fournit un certain nombre d'outils d'investigation et de rapports aux détenteurs de copyright, officiers de police judiciaire, agences gouvernementales.. L'usage d'OpenSearchServer par MiMTiD. MiMTiD utiliser OpenSearchServer et son module de crawl pour identifier précisement les contenus sur les sites en démultipliant les possibilités des outils de tests d'algorithmes, de mise au point des requêtes. Les développements de MiMTiD avec OpenSearchServer ont commencé avec la version 1.1 en août 2010, ils utilisent maintenant la version 1.2.. Quelques considérations autour de l'hébergement pour mieux décrire le volume de données et l'infrastructure. Installer et faire fonctionner OpenSearchServer sur Linux ne prend que quelques minutes. En comparaison, d'autres produits sont très difficiles à installer, à faire fonctionner ou même simplement en comprendre les concepts opérationnels de base. OpenSearchServer peut être installé, opéré et maintenu par quelqu'un n'ayant qu'une expérience web minime. La documentation et les extraits de texte en PHP d'apparence simple permettent le développement rapide de puissantes applications web qui s'appuient sur les fonctionnalités du produit mais aussi la présentation de résultats sans le besoin d'allouer des ressources à l'intégration au front office ou au développement. MiMTiD utilise de façon routinière OpenSearchServer pour faire émerger en quelques heures plusieurs millions de potentielles infractions. Simultanément, les résultats en temps réel sont générés en utilisant des algorithmes conçus dans OpenSearchServer pour rapidement identifier les infractions réelles. Dans une période de vingt-quatre heure, une instance d'OpenSearchServer exécutée sur Redhat avec 16 gigaoctets de RAM sur un serveur Dell Nehalem peut crawler des millions de pages Web et en simultané être interrogée des centaines de milliers de fois sans perte de performance de crawl. Ceci est possible par la fonctionnalité de Replication.. Lisibilité des résultats. L'usage combiné d'OpenSearchServer et de l'outil de visualisation Carrot2 offre experience utilisateur basé sur une représentation graphique montrant les sites web contrevenants, regroupés par type de contenu, permettant une identification rapide des infractions potentielles.. . Par exemple, quand vous faites une recherche sur "Elvis Presley" vous avez d'abord une présentation textuelle classique des résultats, et vous pouvez les parcourir au travers de la catégorisation automatique ou via les regroupements proposés sur la colonne de gauche, via les fonctionnalités de facettes.. . Une autre possibilité de voir et de parcourir les résultats est disponible en cliquant sur l'onglet "Circles". Cette fonctionnalité affiche une représentation graphique montrant les catégories présentes dans les résultats et permet une navigation aisée. La combinaison d'OpenSearchServer et Carrot2 offre un puissant outil d'identifications et est un composant essentiel du dispositif fournit par MIMTid.. . . </value></field><field name="timestamp"><value>20120303132414</value></field><field name="type"><value>story</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/white_paper/opensearchserver-you_control_your_search</value></field><field name="urlExact"><value>http://dev.open-search-server.com/white_paper/opensearchserver-you_control_your_search</value></field><field name="autocomplete"><value>OpenSearchServer : You control your Search</value></field><field name="title"><value>OpenSearchServer : You control your Search</value></field><field name="titleExact"><value>OpenSearchServer : You control your Search</value></field><field name="titlePhonetic"><value>OpenSearchServer : You control your Search</value></field><field name="content"><value>OpenSearchServer is a comprehensive suite of software tools and an applications server. With these, you can develop index-related applications with full text capabilities.. When we were creating OpenSearchServer, we wanted to make an appropriate solution for specialists in full text processing and also we wanted to allow professional developers who have not yet tried these technologies to enter this field easily.. We have noticed in the last few years that the use of Search-based applications has been increasing in situations where developers want to optimize access to a specific document among masses of documents.. Search-based applications can do this far better than database applications, that is why their use is increasing so much in this situation..  . More generally, Search-based applications provide a critical improvement when fast access to specific data is the challenge, when interpretation of a query is necessary before providing an answer to a human query (see Analyzers) or when the documents to be searched do not have a similar structure.. Search tools and technologies were first widely used by non-specialists for searching the web, either through a search engine portal (e.g. Google, Bing, Yahoo, etc.), or for an in-web search (finding data in a specific website). These technologies have also been used to create Enterprise Search applications for accessing and processing both structured and non-structured data.. The advantages of this new category of Search-based development methods and tools will help you to create unsurpassed applications in situations where performance and the cost of development are key factors. More professional developers will want to try and adopt these methods and tools and we were thinking of these developers when we designed OpenSearchServer. It consists of a series of tabs and, even when creating the most sophisticated applications, you just need to tick boxes and fill in some information. You do not have to write a single line of code! You just concentrate on configuring your data and using analyzers which help you to deliver the job.. Because we know that no two projects have the same needs and because when full text is involved you will need to enter specific context vocabulary, OpenSearchServer allows you to have full access to any function or rule provided, so that nothing in OpenSearchServer is a “black box” for developers and any customization that you can imagine will be possible, to help you to create your very own specific application. You can learn more about all these possibilities by reading the comprehensive free online documentation and by using our Quickstart module to install and configure your first application easily.. We know that for some of you, these tools are quite new and we will answer some of the questions we are often asked below. We will also publish some business case studies showing some concrete business situations which our customers have experienced and showing how OpenSearchServer helped them to progress and create value for their company and their customers.. Question 1 : OpenSearchServer...? But I already use a database to search my website !!. People often say this to us. As we said at the beginning of this article, we are aware of this and we constantly kept database specialists in mind when we were creating OpenSearchServer. Of course, most of our team were educated on databases first and had used them for years and had discovered their limitations. If we need to do a search, database applications have two kinds of limitations:. Limitations in performance when data is being accessed,. Limitations in the ability to understand a user query which contains some errors or some uncertainty.. . Performance. The time to access data with a Search application is between 40 and 70 times shorter than the time needed for a query in a relational database application, so the performance advantages of Search applications are very easy to understand. The goal of the creation of the relational database concept was to facilitate the sophisticated processing of structured data, including queries, comparisons, merging, printing, formatting and back-office administrative tasks. This goal drove development of the well-known tables structure and join commands, which allow developers to build a fully relational data model, with access to information in tables, using indexed fields.. In a Search application, on the other hand, all the information is in the index, so accessing information is much faster, of course. A second issue has an obvious impact on performance: in database structures most of the data are stored in hard drives and when accessing the table index (generally one field) in RAM memory, the application knows where the data is on the disk and therefore is able to access it. Therefore, in database applications, we continuously make a huge number of accesses on data stored in disks and we all know that this the slowest operation a computer can perform.. Search applications work in a completely different way. When the index is created, the entire contents of the documents are included in the index, with a pointer to the original document. Data in the index are written and sorted using very sophisticated algorithms, allowing very fast and powerful browsing of the index to identify entries matching the user's query and to extract corresponding documents sorted by relevance.. This is a very important reason why database applications cannot compete with Search applications in the area of data access performance. And of course, when the need is only to access data to find answer to a query it's dramatically below any user's expectations. Benchmarks show that, when database applications access data for query, it can be up to 100 times slower than the time needed for Search-based applications.. With the pre-eminence of internet usage today and the leadership of websites like Google.com or Bing.com, no professional user or company executive can understand that a query needs 3 seconds to return an answer when they see that any teenager can have more that 207 million results in less than 0.16 seconds when typing "Michael Jackson" in a Google search box, as shown below.. . . Query interpretation. Selective access to data in relational databases is made through the SQL language (Structured Query Language). For example, if you wish to extract records from a products database for products unsold this year, you might write the following instruction set:. Select product_number, product_description, stock_count from Products where stock_count &gt; 0 order by product_number.. SQL is very well designed for accessing structured data, but it has serious limitations if we need to retrieve information from a huge volume of unstructured data.. Full text search (i.e. a search on unstructured data) needs a very different approach. In our previous example, if the user enters the query incorrectly (e.g. "Michael Jakson" or "Michael Jacksonn") the query will still be correctly processed and the search engine will also recognize these possible errors and will automatically propose that you re-focus the query on "Michael Jackson". Also, if you search for "televisions" on an e-commerce website, you will also get answers for "television". In some sites, you would also have an automatic display of DVD players because people often purchase a DVD when they purchase a television.. To reach this level of text processing and query interpretation with SQL would require a very significant amount of programming. Due to the way data are stored, this will result in very low performance, as we saw above.. Search software applies several text analyzers to data when it is being added to the index and the same analyzers are applied to the string used as the query. The resulting interpretation of queries returns a complete set of answers, which are ranked by relevance using very powerful algorithms. These algorithms were developed using very advanced mathematics.. In conclusion, we frequently have to answer this question about the differences between relational database applications and Search applications. Of course our answer depends on the amount of the data. If a website has only a few pages, or if you have an eCommerce website with a very restricted number of products on offer, then using a database application would not have a big negative impact.On the other hand, let's imagine that you operate a community site with millions of members and a lot of information held on each member and you want to allow any member to find other users living in same country and/or having studied at the same university. In a situation like this, if you wish to provide an optimum experience for the user, a Search application is the only logical choice.. Question 2 : How does a Search engine work?. Search engines are mainly devoted to non-structured data, such as web pages, documents from various applications and nearly any type of digital data file other than database tables and binary program files.. A search engine allows a user to ask a query and then to get in response a list of documents matching this query. The response is sorted by relevance, with the most relevant coming first.. So, for each query process there are three steps:. Interpreting the query,. Finding matches in the index,. Returning the answers.. . . Before being able to process any query, the search engine needs to index the full set of documents to which queries will be applied. This is done by a module called an Indexer.. Indexing and text analyzers. This operation collects all the different words included in each document and stores them in a big file (the index) with the following information:. Which documents include any of the index words?. What is the frequency of every word in each document?. . The index is stored in a very powerful data structure and algorithms allow extremely fast access to data and browsing in the data and calculating the relevance to a query.. To extract content (words) from each document it has to add to the index, the indexer uses specific libraries called parsers. There is a parser for HTML pages, one for PDF documents, one for Word documents, one for Outlook, one for MP3 files, etc.. As long as parsers are sending individual words to the indexer, many text analyzers and optimizers will be applied to them, giving the power and versatility to search in the index.. The lemmatization analyzer will recognize the different inflected forms for each word and store only the lemma. “Drank”, “drinking”, “drinks”, “drinkable”, “drunk” all have the same lemma, which is “drink”.. The Lowercase filter will set all character to lower case and the ISOLatin1 filter will remove all accentuated characters in Latin languages (é, ê, ë, è will be replaced by e), so that the user does not have to enter accentuated characters, but nevertheless finds relevant answers.. Also stopwords are removed (e.g. words like “of”, “the”, “for” etc.).. When indexing has been completed, a large file called the index has been created. When a query is applied to it, the search engine will very quickly list the documents matching this query, showing the most relevant first. According to Wikipedia, browsing an index of 10,000 large documents can be done in milliseconds but browsing all the words of these 10,000 documents sequentially can take hours.. So when the index has been created, the system is ready to receive and answer queries.. Query and interpretation. After a user enters a query and hits the Search button, all the analyzers used to create the index will be applied to the query with the same effect that was described for index building.The result of this analysis will be then processed by powerful algorithms to browse the index, find relevant entries, sort them and return the results. We see a big difference here between database SQL queries and search application queries: in search engines the query is interpreted in order to get a fuller understanding of its meaning but SQL only returns data which match the query exactly (data which is a perfect match). Returning the results. When a query is processed, all documents linked to entries included in the answer will be displayed on the screen. In order to facilitate the reading and understanding of this list, several powerful functions are applied by the search engine. We list some of them below, described with an example of web search.. Sorting / Ranking:. first the answers will be sorted. The document which has the higher relevance to the query comes first. This relevance is calculated by an algorithm when browsing the index.. Snippets:. If you do a web search and you get a large number of answers, it is useful to see a small description of each entry you get. This is called a snippet and it is automatically extracted from the original document by the search engine.. Clustering:. It is certainly nicer if web pages included in your answer and belonging to the same website are clustered and presented together (listed together with no regard to relevance).. Faceting:. this is a very powerful feature which makes navigation through answers easier when there are hundreds of thousands of answers. Answers are categorized automatically in different ways, using very powerful algorithms, and then you are able to restrict display to videos, images, music, blogs, etc., for example, or to restrict display to documents dated today, last week, last month, last year etc.. Question 3 : What are Search engines used for?. Search engines are used to make it easier for people find digital files they need to access in various modes. We all know about websites like Google.com and Bing.com, where a user can enter a query and all the URL's related to his specific search are found and returned, sorted by relevance. In this business model, the companies which created these websites (Google and Microsoft, respectively) use search engine technology as a free service to find websites for internet users which match the users' queries. By displaying some advertising information, Google or Microsoft receive the revenue for theses websites from third parties, not from the users to which they are offering the Search services.. This model is also used and offered by many companies offering portals with search capabilities on specific fields.. But no one knows exactly how the algorithms are used or made and it's very difficult to anticipate the relevancy of a website to a specific query. Worse is that, periodically, Bing or Google change their algorithms and years of work to fine-tune and optimize rankings goes up in smoke. This portal model is offered by many companies and with search capabilities on specific activities or subjects (e.g. sport, cinema, medicines). In these websites the only part of the search engine that you see on the screen is the search box where you write your query. It's like the tip of an iceberg, you don't see the huge power and mass of the search engine behind it.. More generally, we can categorize the uses of search engines as follows:. Web / in-web search. Content sites (newspapers, special interest groups, etc.), e-commerce sites and community sites are incorporating more and more data. In these models, website owners have a big interest in helping their users or customers to find the information they wish to access easily, in the site owner's own website.. Due to the growing audience of websites, it is always very difficult to anticipate the way people want to access information and in which order they want to get it. For one website, different  users may have very different types of visits. Of course, everyone knows how important it is for e-commerce sites to direct the visitors as quick as possible to the product they want to buy.. Another type of business model is called “freemium”. In this model, basic services are free, but the   website owner charges a premium for advanced or special features. In websites that use “freemium”, the website's owners need to be sure not only that free users are happy so they continue using the service and provide the third parties with advertising revenues but also that paying users are kept satisfied, in order to have a low churn rate.. And of course in a corporate website, in which the intention is to present a company in the best possible way, nothing could give users a worse impression than not being able find information easily when the information they are looking for is somewhere on the company's website.. Enterprise search. In a recent study, IDC has shown that a knowledge worker spends an average of 9 hours a week searching for information. That represents a cost of $14,000 per employee per year.. Also, anyone who has worked for a large company on a multi-department project knows how it is difficult to share information with colleagues or partners and how difficult it is to get information from colleagues or partners. Hence, we can easily understand why enterprise IT specialists have tried their best to use and adapt Search technologies in the enterprise field.. Enterprise applications have many specific features that have had a great influence on search engine development, leading to the creation of a brand new category of Search application called Enterprise, Search applications, which have the following characteristics:. Source and nature of documents:. in a company, documents are of different types, not only web pages. They can be external, like websites; in internal files that are local or remote; and in various formats (MS Office documents, inbox, Mail servers, central databases, ERP, Enterprise Content Management systems, CRM, etc.),. Security:. in corporations, not all users have the right to see all documents so profiles should apply also to Search applications,. Companies have specific vocabularies:. if you work in an advertising company or a toy manufacturer the word banner has not the same meaning. Also if your company's best-selling product is called Paris, it is important that your product does not get confused with Paris the city in queries.. More is not always better:. unlike Bing or Google, where you get as many answers as possible, in a corporate environment, the best answer to a query is very often one single document. Enterprise Search applications return far fewer answers but those answers are much more relevant. Google may omit some answers that it considers are not very relevant to a query, and this is not normally a problem for Google users. However, in Enterprise Search applications, it might be disastrous to miss even a single document, the system might completely lose credibility.. In the field of interconnection with legacy systems and others, Enterprise Search has become a very specialized and very interesting domain. We will issue a specific white paper about this soon. Watch out for this on our website so that you can read our views on this.. Desktop search. Desktop search applications like Google Desktop aim at giving an individual user the best possible access to the documents stored within his personal computer. Here again, search technologies are used and we also see now more and more features directly handled by the new version of Windows, including some features obtained from Fast (acquired by Microsoft) or in Mac OS, with its excellent Spotlight technology.. "Portable" Search. If you want to distribute a large collection of non-structured information on portable media (CD, DVD), you can use a search engine to index this data and allow easy and fast access by entering a query as done when using internet search engine.. Inter-application usage. Because search engines have far better performance when accessing data than any other technology, many researchers have tried to find out how to use this power to speed up data access in a non-Search application (e.g. a database application) before the data is processed. Thus, when performing complex processing, when a non-Search applications (such as a database application) cannot provide fast enough access time, this data access sub-process can be given to a search engine and then when the data has been found, it is delivered to the rest of the application for processing, if required.. So this new programming approach has two parts:. Information access is performed by the Search engine. Information processing is performed by the non-Search part of the application (e.g. database).. . In this approach, the text of the query is not entered by a human user, but sent by a sub-process to the search engine and the answer is sent back by the search engine to the database.. An application produced like this is called a Search-Based Application (SBA) and it provides high performance and a better ROI because SBA's can be created much more quickly. This approach redefines the way people create applications. It seems very promising and at OpenSearchServer, we are very interested in investigating more on this direction. Also, synchronization of database and index become a key factor and a lot remains to be done on this subject. We are preparing a full white paper about Search-Based Applications, which will be available for you soon.. </value></field><field name="contentExact"><value>OpenSearchServer is a comprehensive suite of software tools and an applications server. With these, you can develop index-related applications with full text capabilities.. When we were creating OpenSearchServer, we wanted to make an appropriate solution for specialists in full text processing and also we wanted to allow professional developers who have not yet tried these technologies to enter this field easily.. We have noticed in the last few years that the use of Search-based applications has been increasing in situations where developers want to optimize access to a specific document among masses of documents.. Search-based applications can do this far better than database applications, that is why their use is increasing so much in this situation..  . More generally, Search-based applications provide a critical improvement when fast access to specific data is the challenge, when interpretation of a query is necessary before providing an answer to a human query (see Analyzers) or when the documents to be searched do not have a similar structure.. Search tools and technologies were first widely used by non-specialists for searching the web, either through a search engine portal (e.g. Google, Bing, Yahoo, etc.), or for an in-web search (finding data in a specific website). These technologies have also been used to create Enterprise Search applications for accessing and processing both structured and non-structured data.. The advantages of this new category of Search-based development methods and tools will help you to create unsurpassed applications in situations where performance and the cost of development are key factors. More professional developers will want to try and adopt these methods and tools and we were thinking of these developers when we designed OpenSearchServer. It consists of a series of tabs and, even when creating the most sophisticated applications, you just need to tick boxes and fill in some information. You do not have to write a single line of code! You just concentrate on configuring your data and using analyzers which help you to deliver the job.. Because we know that no two projects have the same needs and because when full text is involved you will need to enter specific context vocabulary, OpenSearchServer allows you to have full access to any function or rule provided, so that nothing in OpenSearchServer is a “black box” for developers and any customization that you can imagine will be possible, to help you to create your very own specific application. You can learn more about all these possibilities by reading the comprehensive free online documentation and by using our Quickstart module to install and configure your first application easily.. We know that for some of you, these tools are quite new and we will answer some of the questions we are often asked below. We will also publish some business case studies showing some concrete business situations which our customers have experienced and showing how OpenSearchServer helped them to progress and create value for their company and their customers.. Question 1 : OpenSearchServer...? But I already use a database to search my website !!. People often say this to us. As we said at the beginning of this article, we are aware of this and we constantly kept database specialists in mind when we were creating OpenSearchServer. Of course, most of our team were educated on databases first and had used them for years and had discovered their limitations. If we need to do a search, database applications have two kinds of limitations:. Limitations in performance when data is being accessed,. Limitations in the ability to understand a user query which contains some errors or some uncertainty.. . Performance. The time to access data with a Search application is between 40 and 70 times shorter than the time needed for a query in a relational database application, so the performance advantages of Search applications are very easy to understand. The goal of the creation of the relational database concept was to facilitate the sophisticated processing of structured data, including queries, comparisons, merging, printing, formatting and back-office administrative tasks. This goal drove development of the well-known tables structure and join commands, which allow developers to build a fully relational data model, with access to information in tables, using indexed fields.. In a Search application, on the other hand, all the information is in the index, so accessing information is much faster, of course. A second issue has an obvious impact on performance: in database structures most of the data are stored in hard drives and when accessing the table index (generally one field) in RAM memory, the application knows where the data is on the disk and therefore is able to access it. Therefore, in database applications, we continuously make a huge number of accesses on data stored in disks and we all know that this the slowest operation a computer can perform.. Search applications work in a completely different way. When the index is created, the entire contents of the documents are included in the index, with a pointer to the original document. Data in the index are written and sorted using very sophisticated algorithms, allowing very fast and powerful browsing of the index to identify entries matching the user's query and to extract corresponding documents sorted by relevance.. This is a very important reason why database applications cannot compete with Search applications in the area of data access performance. And of course, when the need is only to access data to find answer to a query it's dramatically below any user's expectations. Benchmarks show that, when database applications access data for query, it can be up to 100 times slower than the time needed for Search-based applications.. With the pre-eminence of internet usage today and the leadership of websites like Google.com or Bing.com, no professional user or company executive can understand that a query needs 3 seconds to return an answer when they see that any teenager can have more that 207 million results in less than 0.16 seconds when typing "Michael Jackson" in a Google search box, as shown below.. . . Query interpretation. Selective access to data in relational databases is made through the SQL language (Structured Query Language). For example, if you wish to extract records from a products database for products unsold this year, you might write the following instruction set:. Select product_number, product_description, stock_count from Products where stock_count &gt; 0 order by product_number.. SQL is very well designed for accessing structured data, but it has serious limitations if we need to retrieve information from a huge volume of unstructured data.. Full text search (i.e. a search on unstructured data) needs a very different approach. In our previous example, if the user enters the query incorrectly (e.g. "Michael Jakson" or "Michael Jacksonn") the query will still be correctly processed and the search engine will also recognize these possible errors and will automatically propose that you re-focus the query on "Michael Jackson". Also, if you search for "televisions" on an e-commerce website, you will also get answers for "television". In some sites, you would also have an automatic display of DVD players because people often purchase a DVD when they purchase a television.. To reach this level of text processing and query interpretation with SQL would require a very significant amount of programming. Due to the way data are stored, this will result in very low performance, as we saw above.. Search software applies several text analyzers to data when it is being added to the index and the same analyzers are applied to the string used as the query. The resulting interpretation of queries returns a complete set of answers, which are ranked by relevance using very powerful algorithms. These algorithms were developed using very advanced mathematics.. In conclusion, we frequently have to answer this question about the differences between relational database applications and Search applications. Of course our answer depends on the amount of the data. If a website has only a few pages, or if you have an eCommerce website with a very restricted number of products on offer, then using a database application would not have a big negative impact.On the other hand, let's imagine that you operate a community site with millions of members and a lot of information held on each member and you want to allow any member to find other users living in same country and/or having studied at the same university. In a situation like this, if you wish to provide an optimum experience for the user, a Search application is the only logical choice.. Question 2 : How does a Search engine work?. Search engines are mainly devoted to non-structured data, such as web pages, documents from various applications and nearly any type of digital data file other than database tables and binary program files.. A search engine allows a user to ask a query and then to get in response a list of documents matching this query. The response is sorted by relevance, with the most relevant coming first.. So, for each query process there are three steps:. Interpreting the query,. Finding matches in the index,. Returning the answers.. . . Before being able to process any query, the search engine needs to index the full set of documents to which queries will be applied. This is done by a module called an Indexer.. Indexing and text analyzers. This operation collects all the different words included in each document and stores them in a big file (the index) with the following information:. Which documents include any of the index words?. What is the frequency of every word in each document?. . The index is stored in a very powerful data structure and algorithms allow extremely fast access to data and browsing in the data and calculating the relevance to a query.. To extract content (words) from each document it has to add to the index, the indexer uses specific libraries called parsers. There is a parser for HTML pages, one for PDF documents, one for Word documents, one for Outlook, one for MP3 files, etc.. As long as parsers are sending individual words to the indexer, many text analyzers and optimizers will be applied to them, giving the power and versatility to search in the index.. The lemmatization analyzer will recognize the different inflected forms for each word and store only the lemma. “Drank”, “drinking”, “drinks”, “drinkable”, “drunk” all have the same lemma, which is “drink”.. The Lowercase filter will set all character to lower case and the ISOLatin1 filter will remove all accentuated characters in Latin languages (é, ê, ë, è will be replaced by e), so that the user does not have to enter accentuated characters, but nevertheless finds relevant answers.. Also stopwords are removed (e.g. words like “of”, “the”, “for” etc.).. When indexing has been completed, a large file called the index has been created. When a query is applied to it, the search engine will very quickly list the documents matching this query, showing the most relevant first. According to Wikipedia, browsing an index of 10,000 large documents can be done in milliseconds but browsing all the words of these 10,000 documents sequentially can take hours.. So when the index has been created, the system is ready to receive and answer queries.. Query and interpretation. After a user enters a query and hits the Search button, all the analyzers used to create the index will be applied to the query with the same effect that was described for index building.The result of this analysis will be then processed by powerful algorithms to browse the index, find relevant entries, sort them and return the results. We see a big difference here between database SQL queries and search application queries: in search engines the query is interpreted in order to get a fuller understanding of its meaning but SQL only returns data which match the query exactly (data which is a perfect match). Returning the results. When a query is processed, all documents linked to entries included in the answer will be displayed on the screen. In order to facilitate the reading and understanding of this list, several powerful functions are applied by the search engine. We list some of them below, described with an example of web search.. Sorting / Ranking:. first the answers will be sorted. The document which has the higher relevance to the query comes first. This relevance is calculated by an algorithm when browsing the index.. Snippets:. If you do a web search and you get a large number of answers, it is useful to see a small description of each entry you get. This is called a snippet and it is automatically extracted from the original document by the search engine.. Clustering:. It is certainly nicer if web pages included in your answer and belonging to the same website are clustered and presented together (listed together with no regard to relevance).. Faceting:. this is a very powerful feature which makes navigation through answers easier when there are hundreds of thousands of answers. Answers are categorized automatically in different ways, using very powerful algorithms, and then you are able to restrict display to videos, images, music, blogs, etc., for example, or to restrict display to documents dated today, last week, last month, last year etc.. Question 3 : What are Search engines used for?. Search engines are used to make it easier for people find digital files they need to access in various modes. We all know about websites like Google.com and Bing.com, where a user can enter a query and all the URL's related to his specific search are found and returned, sorted by relevance. In this business model, the companies which created these websites (Google and Microsoft, respectively) use search engine technology as a free service to find websites for internet users which match the users' queries. By displaying some advertising information, Google or Microsoft receive the revenue for theses websites from third parties, not from the users to which they are offering the Search services.. This model is also used and offered by many companies offering portals with search capabilities on specific fields.. But no one knows exactly how the algorithms are used or made and it's very difficult to anticipate the relevancy of a website to a specific query. Worse is that, periodically, Bing or Google change their algorithms and years of work to fine-tune and optimize rankings goes up in smoke. This portal model is offered by many companies and with search capabilities on specific activities or subjects (e.g. sport, cinema, medicines). In these websites the only part of the search engine that you see on the screen is the search box where you write your query. It's like the tip of an iceberg, you don't see the huge power and mass of the search engine behind it.. More generally, we can categorize the uses of search engines as follows:. Web / in-web search. Content sites (newspapers, special interest groups, etc.), e-commerce sites and community sites are incorporating more and more data. In these models, website owners have a big interest in helping their users or customers to find the information they wish to access easily, in the site owner's own website.. Due to the growing audience of websites, it is always very difficult to anticipate the way people want to access information and in which order they want to get it. For one website, different  users may have very different types of visits. Of course, everyone knows how important it is for e-commerce sites to direct the visitors as quick as possible to the product they want to buy.. Another type of business model is called “freemium”. In this model, basic services are free, but the   website owner charges a premium for advanced or special features. In websites that use “freemium”, the website's owners need to be sure not only that free users are happy so they continue using the service and provide the third parties with advertising revenues but also that paying users are kept satisfied, in order to have a low churn rate.. And of course in a corporate website, in which the intention is to present a company in the best possible way, nothing could give users a worse impression than not being able find information easily when the information they are looking for is somewhere on the company's website.. Enterprise search. In a recent study, IDC has shown that a knowledge worker spends an average of 9 hours a week searching for information. That represents a cost of $14,000 per employee per year.. Also, anyone who has worked for a large company on a multi-department project knows how it is difficult to share information with colleagues or partners and how difficult it is to get information from colleagues or partners. Hence, we can easily understand why enterprise IT specialists have tried their best to use and adapt Search technologies in the enterprise field.. Enterprise applications have many specific features that have had a great influence on search engine development, leading to the creation of a brand new category of Search application called Enterprise, Search applications, which have the following characteristics:. Source and nature of documents:. in a company, documents are of different types, not only web pages. They can be external, like websites; in internal files that are local or remote; and in various formats (MS Office documents, inbox, Mail servers, central databases, ERP, Enterprise Content Management systems, CRM, etc.),. Security:. in corporations, not all users have the right to see all documents so profiles should apply also to Search applications,. Companies have specific vocabularies:. if you work in an advertising company or a toy manufacturer the word banner has not the same meaning. Also if your company's best-selling product is called Paris, it is important that your product does not get confused with Paris the city in queries.. More is not always better:. unlike Bing or Google, where you get as many answers as possible, in a corporate environment, the best answer to a query is very often one single document. Enterprise Search applications return far fewer answers but those answers are much more relevant. Google may omit some answers that it considers are not very relevant to a query, and this is not normally a problem for Google users. However, in Enterprise Search applications, it might be disastrous to miss even a single document, the system might completely lose credibility.. In the field of interconnection with legacy systems and others, Enterprise Search has become a very specialized and very interesting domain. We will issue a specific white paper about this soon. Watch out for this on our website so that you can read our views on this.. Desktop search. Desktop search applications like Google Desktop aim at giving an individual user the best possible access to the documents stored within his personal computer. Here again, search technologies are used and we also see now more and more features directly handled by the new version of Windows, including some features obtained from Fast (acquired by Microsoft) or in Mac OS, with its excellent Spotlight technology.. "Portable" Search. If you want to distribute a large collection of non-structured information on portable media (CD, DVD), you can use a search engine to index this data and allow easy and fast access by entering a query as done when using internet search engine.. Inter-application usage. Because search engines have far better performance when accessing data than any other technology, many researchers have tried to find out how to use this power to speed up data access in a non-Search application (e.g. a database application) before the data is processed. Thus, when performing complex processing, when a non-Search applications (such as a database application) cannot provide fast enough access time, this data access sub-process can be given to a search engine and then when the data has been found, it is delivered to the rest of the application for processing, if required.. So this new programming approach has two parts:. Information access is performed by the Search engine. Information processing is performed by the non-Search part of the application (e.g. database).. . In this approach, the text of the query is not entered by a human user, but sent by a sub-process to the search engine and the answer is sent back by the search engine to the database.. An application produced like this is called a Search-Based Application (SBA) and it provides high performance and a better ROI because SBA's can be created much more quickly. This approach redefines the way people create applications. It seems very promising and at OpenSearchServer, we are very interested in investigating more on this direction. Also, synchronization of database and index become a key factor and a lot remains to be done on this subject. We are preparing a full white paper about Search-Based Applications, which will be available for you soon.. </value></field><field name="contentPhonetic"><value>OpenSearchServer is a comprehensive suite of software tools and an applications server. With these, you can develop index-related applications with full text capabilities.. When we were creating OpenSearchServer, we wanted to make an appropriate solution for specialists in full text processing and also we wanted to allow professional developers who have not yet tried these technologies to enter this field easily.. We have noticed in the last few years that the use of Search-based applications has been increasing in situations where developers want to optimize access to a specific document among masses of documents.. Search-based applications can do this far better than database applications, that is why their use is increasing so much in this situation..  . More generally, Search-based applications provide a critical improvement when fast access to specific data is the challenge, when interpretation of a query is necessary before providing an answer to a human query (see Analyzers) or when the documents to be searched do not have a similar structure.. Search tools and technologies were first widely used by non-specialists for searching the web, either through a search engine portal (e.g. Google, Bing, Yahoo, etc.), or for an in-web search (finding data in a specific website). These technologies have also been used to create Enterprise Search applications for accessing and processing both structured and non-structured data.. The advantages of this new category of Search-based development methods and tools will help you to create unsurpassed applications in situations where performance and the cost of development are key factors. More professional developers will want to try and adopt these methods and tools and we were thinking of these developers when we designed OpenSearchServer. It consists of a series of tabs and, even when creating the most sophisticated applications, you just need to tick boxes and fill in some information. You do not have to write a single line of code! You just concentrate on configuring your data and using analyzers which help you to deliver the job.. Because we know that no two projects have the same needs and because when full text is involved you will need to enter specific context vocabulary, OpenSearchServer allows you to have full access to any function or rule provided, so that nothing in OpenSearchServer is a “black box” for developers and any customization that you can imagine will be possible, to help you to create your very own specific application. You can learn more about all these possibilities by reading the comprehensive free online documentation and by using our Quickstart module to install and configure your first application easily.. We know that for some of you, these tools are quite new and we will answer some of the questions we are often asked below. We will also publish some business case studies showing some concrete business situations which our customers have experienced and showing how OpenSearchServer helped them to progress and create value for their company and their customers.. Question 1 : OpenSearchServer...? But I already use a database to search my website !!. People often say this to us. As we said at the beginning of this article, we are aware of this and we constantly kept database specialists in mind when we were creating OpenSearchServer. Of course, most of our team were educated on databases first and had used them for years and had discovered their limitations. If we need to do a search, database applications have two kinds of limitations:. Limitations in performance when data is being accessed,. Limitations in the ability to understand a user query which contains some errors or some uncertainty.. . Performance. The time to access data with a Search application is between 40 and 70 times shorter than the time needed for a query in a relational database application, so the performance advantages of Search applications are very easy to understand. The goal of the creation of the relational database concept was to facilitate the sophisticated processing of structured data, including queries, comparisons, merging, printing, formatting and back-office administrative tasks. This goal drove development of the well-known tables structure and join commands, which allow developers to build a fully relational data model, with access to information in tables, using indexed fields.. In a Search application, on the other hand, all the information is in the index, so accessing information is much faster, of course. A second issue has an obvious impact on performance: in database structures most of the data are stored in hard drives and when accessing the table index (generally one field) in RAM memory, the application knows where the data is on the disk and therefore is able to access it. Therefore, in database applications, we continuously make a huge number of accesses on data stored in disks and we all know that this the slowest operation a computer can perform.. Search applications work in a completely different way. When the index is created, the entire contents of the documents are included in the index, with a pointer to the original document. Data in the index are written and sorted using very sophisticated algorithms, allowing very fast and powerful browsing of the index to identify entries matching the user's query and to extract corresponding documents sorted by relevance.. This is a very important reason why database applications cannot compete with Search applications in the area of data access performance. And of course, when the need is only to access data to find answer to a query it's dramatically below any user's expectations. Benchmarks show that, when database applications access data for query, it can be up to 100 times slower than the time needed for Search-based applications.. With the pre-eminence of internet usage today and the leadership of websites like Google.com or Bing.com, no professional user or company executive can understand that a query needs 3 seconds to return an answer when they see that any teenager can have more that 207 million results in less than 0.16 seconds when typing "Michael Jackson" in a Google search box, as shown below.. . . Query interpretation. Selective access to data in relational databases is made through the SQL language (Structured Query Language). For example, if you wish to extract records from a products database for products unsold this year, you might write the following instruction set:. Select product_number, product_description, stock_count from Products where stock_count &gt; 0 order by product_number.. SQL is very well designed for accessing structured data, but it has serious limitations if we need to retrieve information from a huge volume of unstructured data.. Full text search (i.e. a search on unstructured data) needs a very different approach. In our previous example, if the user enters the query incorrectly (e.g. "Michael Jakson" or "Michael Jacksonn") the query will still be correctly processed and the search engine will also recognize these possible errors and will automatically propose that you re-focus the query on "Michael Jackson". Also, if you search for "televisions" on an e-commerce website, you will also get answers for "television". In some sites, you would also have an automatic display of DVD players because people often purchase a DVD when they purchase a television.. To reach this level of text processing and query interpretation with SQL would require a very significant amount of programming. Due to the way data are stored, this will result in very low performance, as we saw above.. Search software applies several text analyzers to data when it is being added to the index and the same analyzers are applied to the string used as the query. The resulting interpretation of queries returns a complete set of answers, which are ranked by relevance using very powerful algorithms. These algorithms were developed using very advanced mathematics.. In conclusion, we frequently have to answer this question about the differences between relational database applications and Search applications. Of course our answer depends on the amount of the data. If a website has only a few pages, or if you have an eCommerce website with a very restricted number of products on offer, then using a database application would not have a big negative impact.On the other hand, let's imagine that you operate a community site with millions of members and a lot of information held on each member and you want to allow any member to find other users living in same country and/or having studied at the same university. In a situation like this, if you wish to provide an optimum experience for the user, a Search application is the only logical choice.. Question 2 : How does a Search engine work?. Search engines are mainly devoted to non-structured data, such as web pages, documents from various applications and nearly any type of digital data file other than database tables and binary program files.. A search engine allows a user to ask a query and then to get in response a list of documents matching this query. The response is sorted by relevance, with the most relevant coming first.. So, for each query process there are three steps:. Interpreting the query,. Finding matches in the index,. Returning the answers.. . . Before being able to process any query, the search engine needs to index the full set of documents to which queries will be applied. This is done by a module called an Indexer.. Indexing and text analyzers. This operation collects all the different words included in each document and stores them in a big file (the index) with the following information:. Which documents include any of the index words?. What is the frequency of every word in each document?. . The index is stored in a very powerful data structure and algorithms allow extremely fast access to data and browsing in the data and calculating the relevance to a query.. To extract content (words) from each document it has to add to the index, the indexer uses specific libraries called parsers. There is a parser for HTML pages, one for PDF documents, one for Word documents, one for Outlook, one for MP3 files, etc.. As long as parsers are sending individual words to the indexer, many text analyzers and optimizers will be applied to them, giving the power and versatility to search in the index.. The lemmatization analyzer will recognize the different inflected forms for each word and store only the lemma. “Drank”, “drinking”, “drinks”, “drinkable”, “drunk” all have the same lemma, which is “drink”.. The Lowercase filter will set all character to lower case and the ISOLatin1 filter will remove all accentuated characters in Latin languages (é, ê, ë, è will be replaced by e), so that the user does not have to enter accentuated characters, but nevertheless finds relevant answers.. Also stopwords are removed (e.g. words like “of”, “the”, “for” etc.).. When indexing has been completed, a large file called the index has been created. When a query is applied to it, the search engine will very quickly list the documents matching this query, showing the most relevant first. According to Wikipedia, browsing an index of 10,000 large documents can be done in milliseconds but browsing all the words of these 10,000 documents sequentially can take hours.. So when the index has been created, the system is ready to receive and answer queries.. Query and interpretation. After a user enters a query and hits the Search button, all the analyzers used to create the index will be applied to the query with the same effect that was described for index building.The result of this analysis will be then processed by powerful algorithms to browse the index, find relevant entries, sort them and return the results. We see a big difference here between database SQL queries and search application queries: in search engines the query is interpreted in order to get a fuller understanding of its meaning but SQL only returns data which match the query exactly (data which is a perfect match). Returning the results. When a query is processed, all documents linked to entries included in the answer will be displayed on the screen. In order to facilitate the reading and understanding of this list, several powerful functions are applied by the search engine. We list some of them below, described with an example of web search.. Sorting / Ranking:. first the answers will be sorted. The document which has the higher relevance to the query comes first. This relevance is calculated by an algorithm when browsing the index.. Snippets:. If you do a web search and you get a large number of answers, it is useful to see a small description of each entry you get. This is called a snippet and it is automatically extracted from the original document by the search engine.. Clustering:. It is certainly nicer if web pages included in your answer and belonging to the same website are clustered and presented together (listed together with no regard to relevance).. Faceting:. this is a very powerful feature which makes navigation through answers easier when there are hundreds of thousands of answers. Answers are categorized automatically in different ways, using very powerful algorithms, and then you are able to restrict display to videos, images, music, blogs, etc., for example, or to restrict display to documents dated today, last week, last month, last year etc.. Question 3 : What are Search engines used for?. Search engines are used to make it easier for people find digital files they need to access in various modes. We all know about websites like Google.com and Bing.com, where a user can enter a query and all the URL's related to his specific search are found and returned, sorted by relevance. In this business model, the companies which created these websites (Google and Microsoft, respectively) use search engine technology as a free service to find websites for internet users which match the users' queries. By displaying some advertising information, Google or Microsoft receive the revenue for theses websites from third parties, not from the users to which they are offering the Search services.. This model is also used and offered by many companies offering portals with search capabilities on specific fields.. But no one knows exactly how the algorithms are used or made and it's very difficult to anticipate the relevancy of a website to a specific query. Worse is that, periodically, Bing or Google change their algorithms and years of work to fine-tune and optimize rankings goes up in smoke. This portal model is offered by many companies and with search capabilities on specific activities or subjects (e.g. sport, cinema, medicines). In these websites the only part of the search engine that you see on the screen is the search box where you write your query. It's like the tip of an iceberg, you don't see the huge power and mass of the search engine behind it.. More generally, we can categorize the uses of search engines as follows:. Web / in-web search. Content sites (newspapers, special interest groups, etc.), e-commerce sites and community sites are incorporating more and more data. In these models, website owners have a big interest in helping their users or customers to find the information they wish to access easily, in the site owner's own website.. Due to the growing audience of websites, it is always very difficult to anticipate the way people want to access information and in which order they want to get it. For one website, different  users may have very different types of visits. Of course, everyone knows how important it is for e-commerce sites to direct the visitors as quick as possible to the product they want to buy.. Another type of business model is called “freemium”. In this model, basic services are free, but the   website owner charges a premium for advanced or special features. In websites that use “freemium”, the website's owners need to be sure not only that free users are happy so they continue using the service and provide the third parties with advertising revenues but also that paying users are kept satisfied, in order to have a low churn rate.. And of course in a corporate website, in which the intention is to present a company in the best possible way, nothing could give users a worse impression than not being able find information easily when the information they are looking for is somewhere on the company's website.. Enterprise search. In a recent study, IDC has shown that a knowledge worker spends an average of 9 hours a week searching for information. That represents a cost of $14,000 per employee per year.. Also, anyone who has worked for a large company on a multi-department project knows how it is difficult to share information with colleagues or partners and how difficult it is to get information from colleagues or partners. Hence, we can easily understand why enterprise IT specialists have tried their best to use and adapt Search technologies in the enterprise field.. Enterprise applications have many specific features that have had a great influence on search engine development, leading to the creation of a brand new category of Search application called Enterprise, Search applications, which have the following characteristics:. Source and nature of documents:. in a company, documents are of different types, not only web pages. They can be external, like websites; in internal files that are local or remote; and in various formats (MS Office documents, inbox, Mail servers, central databases, ERP, Enterprise Content Management systems, CRM, etc.),. Security:. in corporations, not all users have the right to see all documents so profiles should apply also to Search applications,. Companies have specific vocabularies:. if you work in an advertising company or a toy manufacturer the word banner has not the same meaning. Also if your company's best-selling product is called Paris, it is important that your product does not get confused with Paris the city in queries.. More is not always better:. unlike Bing or Google, where you get as many answers as possible, in a corporate environment, the best answer to a query is very often one single document. Enterprise Search applications return far fewer answers but those answers are much more relevant. Google may omit some answers that it considers are not very relevant to a query, and this is not normally a problem for Google users. However, in Enterprise Search applications, it might be disastrous to miss even a single document, the system might completely lose credibility.. In the field of interconnection with legacy systems and others, Enterprise Search has become a very specialized and very interesting domain. We will issue a specific white paper about this soon. Watch out for this on our website so that you can read our views on this.. Desktop search. Desktop search applications like Google Desktop aim at giving an individual user the best possible access to the documents stored within his personal computer. Here again, search technologies are used and we also see now more and more features directly handled by the new version of Windows, including some features obtained from Fast (acquired by Microsoft) or in Mac OS, with its excellent Spotlight technology.. "Portable" Search. If you want to distribute a large collection of non-structured information on portable media (CD, DVD), you can use a search engine to index this data and allow easy and fast access by entering a query as done when using internet search engine.. Inter-application usage. Because search engines have far better performance when accessing data than any other technology, many researchers have tried to find out how to use this power to speed up data access in a non-Search application (e.g. a database application) before the data is processed. Thus, when performing complex processing, when a non-Search applications (such as a database application) cannot provide fast enough access time, this data access sub-process can be given to a search engine and then when the data has been found, it is delivered to the rest of the application for processing, if required.. So this new programming approach has two parts:. Information access is performed by the Search engine. Information processing is performed by the non-Search part of the application (e.g. database).. . In this approach, the text of the query is not entered by a human user, but sent by a sub-process to the search engine and the answer is sent back by the search engine to the database.. An application produced like this is called a Search-Based Application (SBA) and it provides high performance and a better ROI because SBA's can be created much more quickly. This approach redefines the way people create applications. It seems very promising and at OpenSearchServer, we are very interested in investigating more on this direction. Also, synchronization of database and index become a key factor and a lot remains to be done on this subject. We are preparing a full white paper about Search-Based Applications, which will be available for you soon.. </value></field><field name="timestamp"><value>20110612143750</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/opensearchserver_vision_and_strategy_in_arnoldit.com</value></field><field name="urlExact"><value>http://dev.open-search-server.com/opensearchserver_vision_and_strategy_in_arnoldit.com</value></field><field name="autocomplete"><value>OpenSearchServer vision and strategy in arnoldit.com</value></field><field name="title"><value>OpenSearchServer vision and strategy in arnoldit.com</value></field><field name="titleExact"><value>OpenSearchServer vision and strategy in arnoldit.com</value></field><field name="titlePhonetic"><value>OpenSearchServer vision and strategy in arnoldit.com</value></field><field name="content"><value>"The interest in open source search contributes to the schemozzle in enterprise search and content processing. When one reads the pontifications of the self appointed search experts, one learns that open source search is thriving or diving, innovating or imitating, and pulsing or panting...". A very interesting article interview presenting our strategy and objectives in arnoldit.com, the Enterprise Search expert website. . . . </value></field><field name="contentExact"><value>"The interest in open source search contributes to the schemozzle in enterprise search and content processing. When one reads the pontifications of the self appointed search experts, one learns that open source search is thriving or diving, innovating or imitating, and pulsing or panting...". A very interesting article interview presenting our strategy and objectives in arnoldit.com, the Enterprise Search expert website. . . . </value></field><field name="contentPhonetic"><value>"The interest in open source search contributes to the schemozzle in enterprise search and content processing. When one reads the pontifications of the self appointed search experts, one learns that open source search is thriving or diving, innovating or imitating, and pulsing or panting...". A very interesting article interview presenting our strategy and objectives in arnoldit.com, the Enterprise Search expert website. . . . </value></field><field name="timestamp"><value>20111031024238</value></field><field name="type"><value>story</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/white_paper/opensearchserver-prenez-le-controle-de-vos-recherches</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/white_paper/opensearchserver-prenez-le-controle-de-vos-recherches</value></field><field name="autocomplete"><value>OpenSearchServer : Prenez le contrôle de vos recherches</value></field><field name="title"><value>OpenSearchServer : Prenez le contrôle de vos recherches</value></field><field name="titleExact"><value>OpenSearchServer : Prenez le contrôle de vos recherches</value></field><field name="titlePhonetic"><value>OpenSearchServer : Prenez le contrôle de vos recherches</value></field><field name="content"><value>OpenSearchServer est un serveur d'applications et une plate-forme de développement permettant la création d’applications logicielles reposant sur les technologies full text comme les moteurs de recherche.. En créant OpenSearchServer, nous avons voulu offrir un outil adapté aux exigences des spécialistes des applications full text mais aussi permettre aux développeurs qui n’avaient pas encore utilisé ces technologies de commencer facilement et avec des délais de formation réduit.. Ces dernières années l’utilisation d’applications à base d'index full text a énormément augmenté quand les développeurs ont eu besoin d’optimiser l’accès aux données.. Les applications basées sur des index de search peuvent réaliser cela bien mieux que des applications de bases de données lorsque les référentiels de données sont volumineux.. De façon plus générale, les applications de recherche apportent des avantages significatifs lorsque les performances sont privilégiées et que les données sont non structurées ou de structures différentes, que leur volume est important et que l'application doit permette aux utilisateurs de faire des saisies approximatives ou d'extrapoler les termes d'une requête (cf analyseurs).. Les outils et les technologies de recherche ont été initialement utilisés par l'ensemble des internautes pour effectuer des recherches sur le web, soit au travers d'un portail (Google, Bing, Yahoo, etc…), ou pour une recherche d'information dans un site web. Ces technologies ont également été utilisées pour créer des applications de recherche en entreprise pour accéder et traiter des données aussi bien structurées que non structurées.. Les avantages de cette nouvelle catégorie d'applications appelées Search-Based Applications vont vous aider à créer des applications sans égale lorsque la performance et les coûts de développement sont les facteurs clés. De nombreux développeurs professionnels vont essayer, apprendre et adopter ces outils et méthodes et c’est à eux que nous avons pensé lorsque nous avons créé d’OpenSearchServer. Il est représenté par une série d’onglets et, même lorsque vous avez à créer des applications sophistiquées, vous avez simplement besoin de cocher des cases ou d'entrer certaines informations. Vous n’avez pas une seule ligne de code à écrire et il vous suffit de vous concentrer sur la configuration de vos données et de choisir les analyseurs qui vous aideront à réaliser votre mission.. Parce que nous savons qu’aucun projet ne ressemble à un autre et que lorsqu’il est question de full text, vous avez besoin d’utiliser du vocabulaire spécifique à votre contexte, OpenSearchServer vous offre l’accès total à n’importe quelle fonction ou règle de façon à ce que rien dans OpenSearchServer ne soit à une "boite noire". Chaque adaptation que vous pouvez imaginer est possible de façon à vous permettre de créer l'application spécifique qu'il vous faut. Vous pourrez en savoir plus en lisant notre documentation en ligne très complète et gratuite et en utilisant notre module Quickstart pour installer, configurer et démarrer très facilement votre première application.. Question 1 : OpenSearchServer...? Mais j’utilise déjà une base de données pour faire des recherches dans mon site web!!. On nous dit cela souvent. Comme évoqué au début de cet article, nous avons en permanence les spécialistes des bases de données à l'esprit et nous comprenons qu'ils nous disent cela. Bien sûr, la majorité de notre équipe a d'abord étudié et pratiqué les bases de données pendant des années et nous connaissons bien ces outils. Mais lorsqu'il s'agit de réaliser une application de recherches les bases de données ont des limites de trois ordres:. Limitations dans les performances d'accès aux données (temps de réponses),. Ordre de présentation des résultats inadapté (pertinence). Limitations dans la capacité à comprendre la requête de l’utilisateur si elle contient des erreurs ou des incertitudes,. . Performance. Le délai d’accès aux données via une application de recherche est de 40 à 70 fois plus court que celui nécessaire à une application de base de données relationnelle, ainsi les avantages de performances des applications de recherche sont faciles à comprendre. L’objectif à l’origine du concept de bases de données relationnelles était de faciliter le traitement sophistiqué de données structurées, incluant le requêtage, les comparaisons, les fusions, l’impression, le formatage et les tâches administratives de back-office. Cet objectif a permis le développement des structures bien connues de tables et de jointures qui permettent aux développeurs de construire un modèle de données relationnel, qui permettent l'accès aux données en utilisant un ou plusieurs champs indexés... A contrario, dans une application de recherche, toutes les données sont dans l’index ce qui permet bien évidemment d’y avoir un accès plus rapide. Un autre problème qui a un impact évident sur la performance est le fait que, dans les structures de base de données, la majorité des données est stockée dans des mémoires de masse, les index de table ne sont que partiellement en mémoire. Dans les applications de base de données, l'accès aux données provoque un très grand nombre d’accès sur les disques, ces opérations ralentissent l'exécution d'un logiciel.. Les applications de recherche agissent de façon totalement différente. Lorsque l’index est créé, l'ensemble du contenu des documents est inclus dans l’index avec un pointeur vers le document original. Les données dans l’index sont écrites et triées grâce à des algorithmes très sophistiqués offrant vitesse et puissance pour parcourir l’index et ainsi identifier les entrées qui correspondent à la requête utilisateur et extraire les documents correspondants par ordre de pertinence.. Ceci est une des raisons importantes qui font que les applications bases de données ne peuvent pas rivaliser avec les applications de recherche dans le domaine de la performance d’accès aux données. Bien sûr, lorsque le besoin est circonscrit au seul accès à des données pour répondre à une requête, les bases de données peuvent se révéler particulièrement peu performantes. Les comparatifs montrent que lorsqu'une base de données traitent une requête et accèdent aux données, le délai peut être jusqu'à 100 fois plus long que le temps nécessaires à un moteur de recherche pour traiter la même requête.. Aujourd’hui avec la prééminence de l’usage d’internet et le leadership de sites web comme Google.com ou Bing.com, personne dans le monde professionnel n’accepte qu’une réponse à une requête s’obtienne en plus de 3 secondes alors que n’importe quel adolescent peut obtenir plus de 207 millions de résultats en moins de 0.16 seconde après avoir tapé "Michael Jackson" dans une boîte de recherche Google comme montré ci-dessous... . . Interprétation de requête. L'accès sélectif aux données dans une base de données relationnelle s’effectue avec le langage SQL (Structured Query Language). Par exemple, si vous souhaitez extraire des enregistrements d’une base de données de produits les produits invendus dans l’année, vous devrez écrire les instructions suivantes :. Select product_number, product_description, stock_count from Products where stock_count &gt; 0 order by product_number.. SQL est parfait pour accéder à des données structurées, mais il reste très limité si vous avez besoin de rechercher des informations dans un volume très important de données non structurées.. La recherche full text (c’est à dire la recherche sur des données non-structurées) nécessite une approche toute différente. Dans notre exemple précédent, si l’utilisateur entre une requête incorrecte (de type "Michael Jakson" or "Michael Jacksonn"), la requête sera malgré tout traitée correctement et le moteur de recherche saura tenir compte de ces erreurs potentiels et proposera automatiquement de revenir à la requête sur "Michael Jackson". De la même façon, si vous recherchez "télévisions" sur un site web e-commerce, vous obtiendrez des réponses pour "télévision". Sur certains sites, vous pourrez également obtenir la présentation de lecteurs DVD car souvent on achète un lecteur DVD lorsqu’on est acheteur d’une télévision.. Avec SQL, pour atteindre ce niveau de traitement du texte et l’interprétation de la requête, vous aurez besoin d’écrire un programme conséquent. En raison de la façon dont sont stockées les données, cela n’amènera qu’un niveau de performance très faible, comme nous l’avons vu ci-dessus.. Le logiciel de recherche applique sur les données plusieurs analyseurs lexicaux lorsqu’elles sont ajoutées à l’index et les mêmes analyseurs sont appliqués à la chaîne de caractères de la requête. L’interprétation résultante de requêtes remonte une série complète de réponses qui sont classées par pertinence en utilisant de puissants algorithmes, issues d'algorithmes mathématiques adaptés.. En conclusion, nous répondons fréquemment à cette question sur la différence entre applications de bases de données relationnelles et applications de recherche. Bien évidemment, notre réponse dépend de la quantité de données. Si un site web n’a que quelques pages ou si vous êtes en présence d’un site e-commerce n’ayant qu’une offre de produits limitée, alors l’utilisation d’une application de base de données n’aura que peu d’impact négatif. A l’inverse, imaginons que nous parlions d’un site communautaire de millions de membres, chacun avec des informations personnelles et que vous vouliez permettre à un quelconque membre de retrouver ceux qui sont dans le même pays et/ou ont étudié dans la même université. Dans une telle situation, si vous voulez offrir une réponse optimale à l’utilisateur, l’application de recherche est la seule solution logique et adaptée.. Question 2: Comment fonctionne un moteur de recherche?. Les moteurs de recherche sont spécifiquement conçues pour les données non structures ou des collections de données avec des structures différentes comme les pages web, les différents documents bureautiques et à peu près tout type de fichiers autre que les bases de données et les fichiers binaires de programme.. Le processing de chaque requête se fait en trois étapes:. Interpréter la requête,. Trouver les correspondances dans l’index,. Retourner les réponses.. . . Avant de pouvoir traiter une quelconque requête, le moteur de recherche va indexer la globalité des documents auxquels la requête pourra s’appliquer. Cela s’effectue grâce au process d'indexation.. Index et analyseurs de texte. Cette opération recense les différents mots présents dans chaque document et les stocke (l’index) avec les informations suivantes:. Quel document contient chacun des mots de l’index?. Quelle est la fréquence de chaque mot dans chaque document?. . L’index est stocké dans une structure de données optimisé vie des algorithmes qui permettent l’accès extrêmement rapide aux données, la navigation dans les données et le calcul de pertinence lié à la requête. Pour extraire de chacun des documents le contenu à indexer, l'indexeur utilise des librairies spécifiques appelées parser adaptées au format du document à indexer. Il y a un parser pour chacun des formats de données standards comme par exemple : page HTML/XHTML, document MS Word, mail, fichier MP3 ou documents PDF….. Au fur et à mesure que les parsers envoient des mots à l'indexeur, de nombreux analyseurs de texte leurs sont appliqué, donnant richesse et versatilité à l'index ainsi constitué.. L’analyseur de lemmatisation reconnaîtra les différentes formes accentuées de chaque mot et stockera uniquement le lemme. “Boire”, “Boisson”, “buvons”, “buvable”ont tous le même radical qui est “boire”.. Le filtre MiseEnMinuscule va transformer chaque caractère en minuscule et le filtre ISOLatin1 supprimera tous les caractères accentués (é, ê, ë, è seront remplacés par e) de façon à ce que l’utilisateur n'ait pas à entrer des caractères accentués mais obtiendra malgré tout les réponses pertinentes... Les mots ignorés (stopword) sont également retirés (les mots comme “de”, “le”, “pour” etc).. A la fin du processus d’indexation, un fichier appelé index est ainsi créé. Lorsqu’une requête lui est appliquée, le moteur de recherche va très rapidement lister les documents répondant à cette requête en les affichant par ordre de pertinence décroissante (le plus pertinent en première position). Selon Wikipedia, parcourir un index constitué du contenu de 10 000 documents de taille importante peut se faire en quelques millisecondes alors que parcourir séquentiellement tous les mots de ces 10 000 documents prendrait des heures.. Avec l’index ainsi créé, le système est prêt à recevoir et répondre aux requêtes.. Requête et interprétation. Quand un utilisateur entre une requête et lance la recherche, tous les analyseurs utilisés pour créer l’index sont appliqués à la requête avec les mêmes effets décrits lors de l’élaboration de l’index. Le résultat de cette analyse est ensuite traité par de puissants algorithmes qui parcourent l’index, trouvent les entrées correspondantes les trient par ordre de pertinence et retournent les résultats. Nous voyons ici une grande différence entre les requêtes SQL de bases de données et les requêtes d’applications de recherche : dans un moteur de recherche, la requête est interprétée dans le but d’apporter une compréhension complète de sa signification alors que SQL ne renvoie que les données qui correspondent parfaitement à la requête.. Présentation des résultats. Lorsqu’une requête est traitée, tous les documents répondants à la requête seront affichés à l’écran. Dans le souci de faciliter la lecture et la compréhension de cette liste, de puissantes fonctions sont proposées par le moteur de recherche. Nous en listons quelques-unes ci-dessous, décrites avec un exemple de recherche web.. Tri / Classement:. Le document qui a la pertinence la plus élevée par rapport à la requête est positionné en premier. Cette pertinence est calculée par un algorithme lors de la navigation dans l’index.. Extraits (Snippets)::. Lorsque vous faites une recherche web, vous pouvez obtenir un nombre important de réponses. Il est alors utile d’avoir une description courte de chaque entrée obtenue, appelée Snippet et qui est automatiquement extraite du document d’origine par le moteur de recherche... Regroupement:. Il est possible de regrouper les résultats selon différents critères. Par exemple, il serait certainement plus agréable que les pages web incluses dans vos réponses et appartenant au même site web soient regroupées ensemble et listées sans tenir compte de la pertinence.. Navigation à Facettes:. C’est une fonctionnalité très puissante qui facilite la navigation parmi des milliers de réponses. Ces réponses sont catégorisées automatiquement et suivant différents axes en utilisant de puissants algorithmes et ainsi vous permettre de regrouper ensemble les réponses par nature (vidéos, images, musique, blogs…), par date (les documents du jour, de la semaine dernière, du mois précédent, de l’année précédente, …) et pour des sites de commerce par prix (moins de 10 euros, de 10 à 100 euros, de 100 à 1000 euros, plus de 1000 euros) ou suivant toute autre catégorisation possible.. Question 3: Dans quel but utilise-t-on un moteur de recherche?. L’objectif des moteurs de recherche est de rendre aisé l'accès à des données structurées, fichiers numériques en proposant plusieurs accès possibles. Nous connaissons tous des sites web comme Google.com, Yahoo.com ou Bing.com, où un utilisateur peut soumettre une requête et recevoir comme réponses toutes les URLs correspondantes. Dans le modèle économique des sociétés qui ont créé ces sites web (Google, Yahoo et Microsoft), la technologie de moteur de recherche est utilisée comme un service gratuit de recherche de sites web pour les internautes en fonction de leurs requêtes. En affichant quelques publicités, Google Yahoo et Microsoft perçoivent des revenues de la part des annonceurs et non pas des utilisateurs à qui ils offrent le service de recherche.. Mais nul ne sait exactement comment sont utilisés ou construits les algorithmes et il est très difficile d’anticiper la pertinence d’un site web à une requête spécifique. Le pire est que périodiquement, Bing ou Google changent leurs algorithmes et des années de travail à peaufiner et optimiser votre classement (ranking) partent en fumée. Ce modèle est également proposé par de nombreuses sociétés qui mettent à disposition des portails avec possibilité de recherche dans des domaines spécifiques (sport, cinéma, culture, …). Dans ces sites, la seule chose que vous voyez est la case de recherche dans laquelle vous saisissez votre requête. C’est comme la partie émergée d’un iceberg, vous ne mesurez pas la puissance et l'étendue du moteur de recherche qui se cache en dessous.. Plus généralement, nous pouvons catégoriser les utilisations de moteurs de recherche comme suit:. Recherche dans un site web. Les sites de contenus (journaux, groupes d’intérêt, etc…), les sites de e-commerce et les sites communautaires incorporent de plus en plus de données. Dans ces modèles, les opérateurs des sites ont grand intérêt à ce que leurs utilisateurs ou clients trouvent l’information qu’ils souhaitent consulter directement dans leur site. En raison de l’audience grandissante de sites web, il est toujours très difficile d’anticiper de quelle façon les gens voudront accéder à l’information et dans quel ordre ils voudront la voir apparaître. Pour un même site web, différents utilisateurs pourront souhaiter des types d’accès différents. Bien sûr, chacun sait combien il est important sur un site e-commerce de pouvoir orienter le plus vite possible le visiteur vers le produit qu’il veut acheter.. Un autre type de modèle économique est appelé "freemium". Dans ce modèle, les services de base sont gratuits mais l'opérateur du site web propose des fonctionnalités avancées qui sont payantes. Pour les sites web de type "freemium", le propriétaire du site web doit s'assurer que non seulement les utilisateurs gratuits sont satisfaits afin qu'une partie d'entre eux évoluent vers le service payant tout en assurant des revenus liés à la publicité mais aussi s'assurer que les utilisateurs payants restent satisfaits et ne se désabonnent pas.. Et bien sûr, dans le cadre d'un site web d'entreprise, dont l'objectif premier est de présenter au mieux la société, on ne doit pas laisser les utilisateurs passer à côté de l'information qu'ils sont venus chercher sur le site web au risque qu'ils ignorent les offres de la société.. La recherche en entreprise. Dans une étude récente, IDC a montré qu'un cadre passe en moyenne 9 heures par semaine à rechercher de l'information. Cela représente un coût de 14 000 dollars par an et par employé.. De la même façon, toute personne qui a travaillé dans une grande entreprise sur un projet transversal d'envergure sait combien il est difficile de partager des informations avec des collègues ou des partenaires ou bien d'en obtenir de leur part. C'est pourquoi, il est facile à comprendre pourquoi les technologies de recherche ont été adaptées et utilisées dans le monde de l'entreprise.. Les applications d'entreprise ont beaucoup de fonctionnalités spécifiques qui ont eu une grande influence sur le développement des moteurs de recherche, menant à l'avènement d'une nouvelle catégorie d'applications de recherche appelée application de recherche d'entreprise qui ont les caractéristiques particulières suivantes:. Source et nature des documents:. En entreprise, les documents sont de natures très différentes et pas uniquement des pages web. Ils peuvent être externes en provenance de sites web ou bien internes, stockés localement ou à distance et dans des formats très variés (documents MS Office, boite de réception de courriers électroniques, serveurs de courriers, bases de données centrales, ERP, systèmes de gestion de contenus d'entreprise, CRM, etc…),. Sécurité:. En entreprise, tous les utilisateurs n'ont pas les mêmes droits quant à l'accès aux documents. Il faudra donc que l'application de recherche gère des profils en fonction de ces droits,. Vocabulaires spécifiques:. Si vous travaillez dans la publicité ou chez un fabricant de jouets, le mot bannière n'a pas la même signification. De même, si le produit phare de votre société s'intitule Paris, il est important que votre produit ne puisse être confondu dans une requête avec la ville de Paris.. Le plus n'est pas toujours synonyme de mieux:. A la différence de Bing, Yahoo ou Google, où vous recevez autant de réponses que possible, dans un environnement d'entreprise, la meilleure réponse à une requête est souvent un unique document. Les applications de recherche d'entreprise retournent moins de réponses mais elles sont bien plus pertinentes. Google peut omettre quelques réponses qui sont considérées comme non pertinentes à la requête mais cela n'est en principe pas un problème pour les utilisateurs Google. A l'inverse, en entreprise, oublier même une réponse pourrait faire perdre toute crédibilité au système.. Dans le cas de la connexion à des applications centrales d'entreprises, la recherche en entreprise est devenue un domaine très intéressant et spécialisé, qui permet d'amener une haute productivité aux utilisateurs. Nous allons sortir prochainement un livre blanc sur ce sujet qui sera disponible sur notre site web et qui vous permettra de voir notre point de vue et nos nouvelles offres sur le sujet.. Recherche locale. Les outils de recherche locale comme Google Desktop ont pour but de donner à un individu le meilleur accès possible aux documents stockés sur son ordinateur personnel. Ici à nouveau les technologies de recherche sont utilisées et nous voyons également de plus en plus de fonctionnalités directement prises en compte directement au niveau du système d'exploitation. Les nouvelles versions de Windows incluent notamment les fonctionnalités issues de Fast (société acquise par Microsoft) ou bien dans Mac OS avec la technologie Spotlight.. Recherche "offline". Si vous voulez distribuer un nombre important d'informations non structurées sur un media portable (CD, DVD), vous pouvez utiliser un moteur de recherche pour indexer ces données puis permettre un accès rapide et facile à ces mêmes données grâce à une requête comme vous l'auriez fait en utilisant un moteur de recherche sur internet.. Utilisation inter-applicatif (Search Based applications). Parce que les performances d'accès aux données des moteurs de recherche sont très élevées, des chercheurs se sont penchés depuis quelques années sur la possibilité d'utiliser cet avantage pour améliorer les performances des applications existantes, comme les applications produites par les bases de données.. Ceci a donné naissance à une toute nouvelle catégorie d'applications appelée Search Based Applications ou SBA dont la caractéristique est de reposer sur un index full text qui vient en complément ou à la place de l'index traditionnel de la base de données.. L'application va utiliser le moteur de recherche pour accéder rapidement à la donnée et passera la main à la base de données seulement si un traitement est nécessaire. Comme les applications gèrent des volumes de données de plus en plus importants et que l'accès aux données n'implique pas forcément un traitement, travailler de la sorte produit une grande efficacité.. Cette nouvelle approche de programmation se décompose en deux parties:. L’accès à l’information est assuré par le moteur de recherche,. Le traitement de l’information est effectué par la partie non liée à la recherche de l’application (dans ce cas la base de données).. . Dans une Search Based Application le moteur de recherche est utilisé de manière particulière puisque les requêtes qui permettent d'accéder aux données ne sont pas entrées par un utilisateur mais générées par un programme informatique et les réponses à ces requêtes vont alimenter un autre programme.. Une telle application intitulée Search-Based Application (SBA) est particulièrement performante et offre un très bon retour sur investissement car les SBAs peuvent être créées bien plus rapidement. Cette approche novatrice dans la façon de créer des applications est très prometteuse et chez OpenSearchServer, nous sommes très intéressés à investiguer dans cette direction. Ainsi, la synchronisation de la base de données et de l'index est un facteur clé et beaucoup reste à faire sur ce sujet. Nous préparons un livre blanc complet sur les Search Based Applications qui devrait être bientôt disponible.. </value></field><field name="contentExact"><value>OpenSearchServer est un serveur d'applications et une plate-forme de développement permettant la création d’applications logicielles reposant sur les technologies full text comme les moteurs de recherche.. En créant OpenSearchServer, nous avons voulu offrir un outil adapté aux exigences des spécialistes des applications full text mais aussi permettre aux développeurs qui n’avaient pas encore utilisé ces technologies de commencer facilement et avec des délais de formation réduit.. Ces dernières années l’utilisation d’applications à base d'index full text a énormément augmenté quand les développeurs ont eu besoin d’optimiser l’accès aux données.. Les applications basées sur des index de search peuvent réaliser cela bien mieux que des applications de bases de données lorsque les référentiels de données sont volumineux.. De façon plus générale, les applications de recherche apportent des avantages significatifs lorsque les performances sont privilégiées et que les données sont non structurées ou de structures différentes, que leur volume est important et que l'application doit permette aux utilisateurs de faire des saisies approximatives ou d'extrapoler les termes d'une requête (cf analyseurs).. Les outils et les technologies de recherche ont été initialement utilisés par l'ensemble des internautes pour effectuer des recherches sur le web, soit au travers d'un portail (Google, Bing, Yahoo, etc…), ou pour une recherche d'information dans un site web. Ces technologies ont également été utilisées pour créer des applications de recherche en entreprise pour accéder et traiter des données aussi bien structurées que non structurées.. Les avantages de cette nouvelle catégorie d'applications appelées Search-Based Applications vont vous aider à créer des applications sans égale lorsque la performance et les coûts de développement sont les facteurs clés. De nombreux développeurs professionnels vont essayer, apprendre et adopter ces outils et méthodes et c’est à eux que nous avons pensé lorsque nous avons créé d’OpenSearchServer. Il est représenté par une série d’onglets et, même lorsque vous avez à créer des applications sophistiquées, vous avez simplement besoin de cocher des cases ou d'entrer certaines informations. Vous n’avez pas une seule ligne de code à écrire et il vous suffit de vous concentrer sur la configuration de vos données et de choisir les analyseurs qui vous aideront à réaliser votre mission.. Parce que nous savons qu’aucun projet ne ressemble à un autre et que lorsqu’il est question de full text, vous avez besoin d’utiliser du vocabulaire spécifique à votre contexte, OpenSearchServer vous offre l’accès total à n’importe quelle fonction ou règle de façon à ce que rien dans OpenSearchServer ne soit à une "boite noire". Chaque adaptation que vous pouvez imaginer est possible de façon à vous permettre de créer l'application spécifique qu'il vous faut. Vous pourrez en savoir plus en lisant notre documentation en ligne très complète et gratuite et en utilisant notre module Quickstart pour installer, configurer et démarrer très facilement votre première application.. Question 1 : OpenSearchServer...? Mais j’utilise déjà une base de données pour faire des recherches dans mon site web!!. On nous dit cela souvent. Comme évoqué au début de cet article, nous avons en permanence les spécialistes des bases de données à l'esprit et nous comprenons qu'ils nous disent cela. Bien sûr, la majorité de notre équipe a d'abord étudié et pratiqué les bases de données pendant des années et nous connaissons bien ces outils. Mais lorsqu'il s'agit de réaliser une application de recherches les bases de données ont des limites de trois ordres:. Limitations dans les performances d'accès aux données (temps de réponses),. Ordre de présentation des résultats inadapté (pertinence). Limitations dans la capacité à comprendre la requête de l’utilisateur si elle contient des erreurs ou des incertitudes,. . Performance. Le délai d’accès aux données via une application de recherche est de 40 à 70 fois plus court que celui nécessaire à une application de base de données relationnelle, ainsi les avantages de performances des applications de recherche sont faciles à comprendre. L’objectif à l’origine du concept de bases de données relationnelles était de faciliter le traitement sophistiqué de données structurées, incluant le requêtage, les comparaisons, les fusions, l’impression, le formatage et les tâches administratives de back-office. Cet objectif a permis le développement des structures bien connues de tables et de jointures qui permettent aux développeurs de construire un modèle de données relationnel, qui permettent l'accès aux données en utilisant un ou plusieurs champs indexés... A contrario, dans une application de recherche, toutes les données sont dans l’index ce qui permet bien évidemment d’y avoir un accès plus rapide. Un autre problème qui a un impact évident sur la performance est le fait que, dans les structures de base de données, la majorité des données est stockée dans des mémoires de masse, les index de table ne sont que partiellement en mémoire. Dans les applications de base de données, l'accès aux données provoque un très grand nombre d’accès sur les disques, ces opérations ralentissent l'exécution d'un logiciel.. Les applications de recherche agissent de façon totalement différente. Lorsque l’index est créé, l'ensemble du contenu des documents est inclus dans l’index avec un pointeur vers le document original. Les données dans l’index sont écrites et triées grâce à des algorithmes très sophistiqués offrant vitesse et puissance pour parcourir l’index et ainsi identifier les entrées qui correspondent à la requête utilisateur et extraire les documents correspondants par ordre de pertinence.. Ceci est une des raisons importantes qui font que les applications bases de données ne peuvent pas rivaliser avec les applications de recherche dans le domaine de la performance d’accès aux données. Bien sûr, lorsque le besoin est circonscrit au seul accès à des données pour répondre à une requête, les bases de données peuvent se révéler particulièrement peu performantes. Les comparatifs montrent que lorsqu'une base de données traitent une requête et accèdent aux données, le délai peut être jusqu'à 100 fois plus long que le temps nécessaires à un moteur de recherche pour traiter la même requête.. Aujourd’hui avec la prééminence de l’usage d’internet et le leadership de sites web comme Google.com ou Bing.com, personne dans le monde professionnel n’accepte qu’une réponse à une requête s’obtienne en plus de 3 secondes alors que n’importe quel adolescent peut obtenir plus de 207 millions de résultats en moins de 0.16 seconde après avoir tapé "Michael Jackson" dans une boîte de recherche Google comme montré ci-dessous... . . Interprétation de requête. L'accès sélectif aux données dans une base de données relationnelle s’effectue avec le langage SQL (Structured Query Language). Par exemple, si vous souhaitez extraire des enregistrements d’une base de données de produits les produits invendus dans l’année, vous devrez écrire les instructions suivantes :. Select product_number, product_description, stock_count from Products where stock_count &gt; 0 order by product_number.. SQL est parfait pour accéder à des données structurées, mais il reste très limité si vous avez besoin de rechercher des informations dans un volume très important de données non structurées.. La recherche full text (c’est à dire la recherche sur des données non-structurées) nécessite une approche toute différente. Dans notre exemple précédent, si l’utilisateur entre une requête incorrecte (de type "Michael Jakson" or "Michael Jacksonn"), la requête sera malgré tout traitée correctement et le moteur de recherche saura tenir compte de ces erreurs potentiels et proposera automatiquement de revenir à la requête sur "Michael Jackson". De la même façon, si vous recherchez "télévisions" sur un site web e-commerce, vous obtiendrez des réponses pour "télévision". Sur certains sites, vous pourrez également obtenir la présentation de lecteurs DVD car souvent on achète un lecteur DVD lorsqu’on est acheteur d’une télévision.. Avec SQL, pour atteindre ce niveau de traitement du texte et l’interprétation de la requête, vous aurez besoin d’écrire un programme conséquent. En raison de la façon dont sont stockées les données, cela n’amènera qu’un niveau de performance très faible, comme nous l’avons vu ci-dessus.. Le logiciel de recherche applique sur les données plusieurs analyseurs lexicaux lorsqu’elles sont ajoutées à l’index et les mêmes analyseurs sont appliqués à la chaîne de caractères de la requête. L’interprétation résultante de requêtes remonte une série complète de réponses qui sont classées par pertinence en utilisant de puissants algorithmes, issues d'algorithmes mathématiques adaptés.. En conclusion, nous répondons fréquemment à cette question sur la différence entre applications de bases de données relationnelles et applications de recherche. Bien évidemment, notre réponse dépend de la quantité de données. Si un site web n’a que quelques pages ou si vous êtes en présence d’un site e-commerce n’ayant qu’une offre de produits limitée, alors l’utilisation d’une application de base de données n’aura que peu d’impact négatif. A l’inverse, imaginons que nous parlions d’un site communautaire de millions de membres, chacun avec des informations personnelles et que vous vouliez permettre à un quelconque membre de retrouver ceux qui sont dans le même pays et/ou ont étudié dans la même université. Dans une telle situation, si vous voulez offrir une réponse optimale à l’utilisateur, l’application de recherche est la seule solution logique et adaptée.. Question 2: Comment fonctionne un moteur de recherche?. Les moteurs de recherche sont spécifiquement conçues pour les données non structures ou des collections de données avec des structures différentes comme les pages web, les différents documents bureautiques et à peu près tout type de fichiers autre que les bases de données et les fichiers binaires de programme.. Le processing de chaque requête se fait en trois étapes:. Interpréter la requête,. Trouver les correspondances dans l’index,. Retourner les réponses.. . . Avant de pouvoir traiter une quelconque requête, le moteur de recherche va indexer la globalité des documents auxquels la requête pourra s’appliquer. Cela s’effectue grâce au process d'indexation.. Index et analyseurs de texte. Cette opération recense les différents mots présents dans chaque document et les stocke (l’index) avec les informations suivantes:. Quel document contient chacun des mots de l’index?. Quelle est la fréquence de chaque mot dans chaque document?. . L’index est stocké dans une structure de données optimisé vie des algorithmes qui permettent l’accès extrêmement rapide aux données, la navigation dans les données et le calcul de pertinence lié à la requête. Pour extraire de chacun des documents le contenu à indexer, l'indexeur utilise des librairies spécifiques appelées parser adaptées au format du document à indexer. Il y a un parser pour chacun des formats de données standards comme par exemple : page HTML/XHTML, document MS Word, mail, fichier MP3 ou documents PDF….. Au fur et à mesure que les parsers envoient des mots à l'indexeur, de nombreux analyseurs de texte leurs sont appliqué, donnant richesse et versatilité à l'index ainsi constitué.. L’analyseur de lemmatisation reconnaîtra les différentes formes accentuées de chaque mot et stockera uniquement le lemme. “Boire”, “Boisson”, “buvons”, “buvable”ont tous le même radical qui est “boire”.. Le filtre MiseEnMinuscule va transformer chaque caractère en minuscule et le filtre ISOLatin1 supprimera tous les caractères accentués (é, ê, ë, è seront remplacés par e) de façon à ce que l’utilisateur n'ait pas à entrer des caractères accentués mais obtiendra malgré tout les réponses pertinentes... Les mots ignorés (stopword) sont également retirés (les mots comme “de”, “le”, “pour” etc).. A la fin du processus d’indexation, un fichier appelé index est ainsi créé. Lorsqu’une requête lui est appliquée, le moteur de recherche va très rapidement lister les documents répondant à cette requête en les affichant par ordre de pertinence décroissante (le plus pertinent en première position). Selon Wikipedia, parcourir un index constitué du contenu de 10 000 documents de taille importante peut se faire en quelques millisecondes alors que parcourir séquentiellement tous les mots de ces 10 000 documents prendrait des heures.. Avec l’index ainsi créé, le système est prêt à recevoir et répondre aux requêtes.. Requête et interprétation. Quand un utilisateur entre une requête et lance la recherche, tous les analyseurs utilisés pour créer l’index sont appliqués à la requête avec les mêmes effets décrits lors de l’élaboration de l’index. Le résultat de cette analyse est ensuite traité par de puissants algorithmes qui parcourent l’index, trouvent les entrées correspondantes les trient par ordre de pertinence et retournent les résultats. Nous voyons ici une grande différence entre les requêtes SQL de bases de données et les requêtes d’applications de recherche : dans un moteur de recherche, la requête est interprétée dans le but d’apporter une compréhension complète de sa signification alors que SQL ne renvoie que les données qui correspondent parfaitement à la requête.. Présentation des résultats. Lorsqu’une requête est traitée, tous les documents répondants à la requête seront affichés à l’écran. Dans le souci de faciliter la lecture et la compréhension de cette liste, de puissantes fonctions sont proposées par le moteur de recherche. Nous en listons quelques-unes ci-dessous, décrites avec un exemple de recherche web.. Tri / Classement:. Le document qui a la pertinence la plus élevée par rapport à la requête est positionné en premier. Cette pertinence est calculée par un algorithme lors de la navigation dans l’index.. Extraits (Snippets)::. Lorsque vous faites une recherche web, vous pouvez obtenir un nombre important de réponses. Il est alors utile d’avoir une description courte de chaque entrée obtenue, appelée Snippet et qui est automatiquement extraite du document d’origine par le moteur de recherche... Regroupement:. Il est possible de regrouper les résultats selon différents critères. Par exemple, il serait certainement plus agréable que les pages web incluses dans vos réponses et appartenant au même site web soient regroupées ensemble et listées sans tenir compte de la pertinence.. Navigation à Facettes:. C’est une fonctionnalité très puissante qui facilite la navigation parmi des milliers de réponses. Ces réponses sont catégorisées automatiquement et suivant différents axes en utilisant de puissants algorithmes et ainsi vous permettre de regrouper ensemble les réponses par nature (vidéos, images, musique, blogs…), par date (les documents du jour, de la semaine dernière, du mois précédent, de l’année précédente, …) et pour des sites de commerce par prix (moins de 10 euros, de 10 à 100 euros, de 100 à 1000 euros, plus de 1000 euros) ou suivant toute autre catégorisation possible.. Question 3: Dans quel but utilise-t-on un moteur de recherche?. L’objectif des moteurs de recherche est de rendre aisé l'accès à des données structurées, fichiers numériques en proposant plusieurs accès possibles. Nous connaissons tous des sites web comme Google.com, Yahoo.com ou Bing.com, où un utilisateur peut soumettre une requête et recevoir comme réponses toutes les URLs correspondantes. Dans le modèle économique des sociétés qui ont créé ces sites web (Google, Yahoo et Microsoft), la technologie de moteur de recherche est utilisée comme un service gratuit de recherche de sites web pour les internautes en fonction de leurs requêtes. En affichant quelques publicités, Google Yahoo et Microsoft perçoivent des revenues de la part des annonceurs et non pas des utilisateurs à qui ils offrent le service de recherche.. Mais nul ne sait exactement comment sont utilisés ou construits les algorithmes et il est très difficile d’anticiper la pertinence d’un site web à une requête spécifique. Le pire est que périodiquement, Bing ou Google changent leurs algorithmes et des années de travail à peaufiner et optimiser votre classement (ranking) partent en fumée. Ce modèle est également proposé par de nombreuses sociétés qui mettent à disposition des portails avec possibilité de recherche dans des domaines spécifiques (sport, cinéma, culture, …). Dans ces sites, la seule chose que vous voyez est la case de recherche dans laquelle vous saisissez votre requête. C’est comme la partie émergée d’un iceberg, vous ne mesurez pas la puissance et l'étendue du moteur de recherche qui se cache en dessous.. Plus généralement, nous pouvons catégoriser les utilisations de moteurs de recherche comme suit:. Recherche dans un site web. Les sites de contenus (journaux, groupes d’intérêt, etc…), les sites de e-commerce et les sites communautaires incorporent de plus en plus de données. Dans ces modèles, les opérateurs des sites ont grand intérêt à ce que leurs utilisateurs ou clients trouvent l’information qu’ils souhaitent consulter directement dans leur site. En raison de l’audience grandissante de sites web, il est toujours très difficile d’anticiper de quelle façon les gens voudront accéder à l’information et dans quel ordre ils voudront la voir apparaître. Pour un même site web, différents utilisateurs pourront souhaiter des types d’accès différents. Bien sûr, chacun sait combien il est important sur un site e-commerce de pouvoir orienter le plus vite possible le visiteur vers le produit qu’il veut acheter.. Un autre type de modèle économique est appelé "freemium". Dans ce modèle, les services de base sont gratuits mais l'opérateur du site web propose des fonctionnalités avancées qui sont payantes. Pour les sites web de type "freemium", le propriétaire du site web doit s'assurer que non seulement les utilisateurs gratuits sont satisfaits afin qu'une partie d'entre eux évoluent vers le service payant tout en assurant des revenus liés à la publicité mais aussi s'assurer que les utilisateurs payants restent satisfaits et ne se désabonnent pas.. Et bien sûr, dans le cadre d'un site web d'entreprise, dont l'objectif premier est de présenter au mieux la société, on ne doit pas laisser les utilisateurs passer à côté de l'information qu'ils sont venus chercher sur le site web au risque qu'ils ignorent les offres de la société.. La recherche en entreprise. Dans une étude récente, IDC a montré qu'un cadre passe en moyenne 9 heures par semaine à rechercher de l'information. Cela représente un coût de 14 000 dollars par an et par employé.. De la même façon, toute personne qui a travaillé dans une grande entreprise sur un projet transversal d'envergure sait combien il est difficile de partager des informations avec des collègues ou des partenaires ou bien d'en obtenir de leur part. C'est pourquoi, il est facile à comprendre pourquoi les technologies de recherche ont été adaptées et utilisées dans le monde de l'entreprise.. Les applications d'entreprise ont beaucoup de fonctionnalités spécifiques qui ont eu une grande influence sur le développement des moteurs de recherche, menant à l'avènement d'une nouvelle catégorie d'applications de recherche appelée application de recherche d'entreprise qui ont les caractéristiques particulières suivantes:. Source et nature des documents:. En entreprise, les documents sont de natures très différentes et pas uniquement des pages web. Ils peuvent être externes en provenance de sites web ou bien internes, stockés localement ou à distance et dans des formats très variés (documents MS Office, boite de réception de courriers électroniques, serveurs de courriers, bases de données centrales, ERP, systèmes de gestion de contenus d'entreprise, CRM, etc…),. Sécurité:. En entreprise, tous les utilisateurs n'ont pas les mêmes droits quant à l'accès aux documents. Il faudra donc que l'application de recherche gère des profils en fonction de ces droits,. Vocabulaires spécifiques:. Si vous travaillez dans la publicité ou chez un fabricant de jouets, le mot bannière n'a pas la même signification. De même, si le produit phare de votre société s'intitule Paris, il est important que votre produit ne puisse être confondu dans une requête avec la ville de Paris.. Le plus n'est pas toujours synonyme de mieux:. A la différence de Bing, Yahoo ou Google, où vous recevez autant de réponses que possible, dans un environnement d'entreprise, la meilleure réponse à une requête est souvent un unique document. Les applications de recherche d'entreprise retournent moins de réponses mais elles sont bien plus pertinentes. Google peut omettre quelques réponses qui sont considérées comme non pertinentes à la requête mais cela n'est en principe pas un problème pour les utilisateurs Google. A l'inverse, en entreprise, oublier même une réponse pourrait faire perdre toute crédibilité au système.. Dans le cas de la connexion à des applications centrales d'entreprises, la recherche en entreprise est devenue un domaine très intéressant et spécialisé, qui permet d'amener une haute productivité aux utilisateurs. Nous allons sortir prochainement un livre blanc sur ce sujet qui sera disponible sur notre site web et qui vous permettra de voir notre point de vue et nos nouvelles offres sur le sujet.. Recherche locale. Les outils de recherche locale comme Google Desktop ont pour but de donner à un individu le meilleur accès possible aux documents stockés sur son ordinateur personnel. Ici à nouveau les technologies de recherche sont utilisées et nous voyons également de plus en plus de fonctionnalités directement prises en compte directement au niveau du système d'exploitation. Les nouvelles versions de Windows incluent notamment les fonctionnalités issues de Fast (société acquise par Microsoft) ou bien dans Mac OS avec la technologie Spotlight.. Recherche "offline". Si vous voulez distribuer un nombre important d'informations non structurées sur un media portable (CD, DVD), vous pouvez utiliser un moteur de recherche pour indexer ces données puis permettre un accès rapide et facile à ces mêmes données grâce à une requête comme vous l'auriez fait en utilisant un moteur de recherche sur internet.. Utilisation inter-applicatif (Search Based applications). Parce que les performances d'accès aux données des moteurs de recherche sont très élevées, des chercheurs se sont penchés depuis quelques années sur la possibilité d'utiliser cet avantage pour améliorer les performances des applications existantes, comme les applications produites par les bases de données.. Ceci a donné naissance à une toute nouvelle catégorie d'applications appelée Search Based Applications ou SBA dont la caractéristique est de reposer sur un index full text qui vient en complément ou à la place de l'index traditionnel de la base de données.. L'application va utiliser le moteur de recherche pour accéder rapidement à la donnée et passera la main à la base de données seulement si un traitement est nécessaire. Comme les applications gèrent des volumes de données de plus en plus importants et que l'accès aux données n'implique pas forcément un traitement, travailler de la sorte produit une grande efficacité.. Cette nouvelle approche de programmation se décompose en deux parties:. L’accès à l’information est assuré par le moteur de recherche,. Le traitement de l’information est effectué par la partie non liée à la recherche de l’application (dans ce cas la base de données).. . Dans une Search Based Application le moteur de recherche est utilisé de manière particulière puisque les requêtes qui permettent d'accéder aux données ne sont pas entrées par un utilisateur mais générées par un programme informatique et les réponses à ces requêtes vont alimenter un autre programme.. Une telle application intitulée Search-Based Application (SBA) est particulièrement performante et offre un très bon retour sur investissement car les SBAs peuvent être créées bien plus rapidement. Cette approche novatrice dans la façon de créer des applications est très prometteuse et chez OpenSearchServer, nous sommes très intéressés à investiguer dans cette direction. Ainsi, la synchronisation de la base de données et de l'index est un facteur clé et beaucoup reste à faire sur ce sujet. Nous préparons un livre blanc complet sur les Search Based Applications qui devrait être bientôt disponible.. </value></field><field name="contentPhonetic"><value>OpenSearchServer est un serveur d'applications et une plate-forme de développement permettant la création d’applications logicielles reposant sur les technologies full text comme les moteurs de recherche.. En créant OpenSearchServer, nous avons voulu offrir un outil adapté aux exigences des spécialistes des applications full text mais aussi permettre aux développeurs qui n’avaient pas encore utilisé ces technologies de commencer facilement et avec des délais de formation réduit.. Ces dernières années l’utilisation d’applications à base d'index full text a énormément augmenté quand les développeurs ont eu besoin d’optimiser l’accès aux données.. Les applications basées sur des index de search peuvent réaliser cela bien mieux que des applications de bases de données lorsque les référentiels de données sont volumineux.. De façon plus générale, les applications de recherche apportent des avantages significatifs lorsque les performances sont privilégiées et que les données sont non structurées ou de structures différentes, que leur volume est important et que l'application doit permette aux utilisateurs de faire des saisies approximatives ou d'extrapoler les termes d'une requête (cf analyseurs).. Les outils et les technologies de recherche ont été initialement utilisés par l'ensemble des internautes pour effectuer des recherches sur le web, soit au travers d'un portail (Google, Bing, Yahoo, etc…), ou pour une recherche d'information dans un site web. Ces technologies ont également été utilisées pour créer des applications de recherche en entreprise pour accéder et traiter des données aussi bien structurées que non structurées.. Les avantages de cette nouvelle catégorie d'applications appelées Search-Based Applications vont vous aider à créer des applications sans égale lorsque la performance et les coûts de développement sont les facteurs clés. De nombreux développeurs professionnels vont essayer, apprendre et adopter ces outils et méthodes et c’est à eux que nous avons pensé lorsque nous avons créé d’OpenSearchServer. Il est représenté par une série d’onglets et, même lorsque vous avez à créer des applications sophistiquées, vous avez simplement besoin de cocher des cases ou d'entrer certaines informations. Vous n’avez pas une seule ligne de code à écrire et il vous suffit de vous concentrer sur la configuration de vos données et de choisir les analyseurs qui vous aideront à réaliser votre mission.. Parce que nous savons qu’aucun projet ne ressemble à un autre et que lorsqu’il est question de full text, vous avez besoin d’utiliser du vocabulaire spécifique à votre contexte, OpenSearchServer vous offre l’accès total à n’importe quelle fonction ou règle de façon à ce que rien dans OpenSearchServer ne soit à une "boite noire". Chaque adaptation que vous pouvez imaginer est possible de façon à vous permettre de créer l'application spécifique qu'il vous faut. Vous pourrez en savoir plus en lisant notre documentation en ligne très complète et gratuite et en utilisant notre module Quickstart pour installer, configurer et démarrer très facilement votre première application.. Question 1 : OpenSearchServer...? Mais j’utilise déjà une base de données pour faire des recherches dans mon site web!!. On nous dit cela souvent. Comme évoqué au début de cet article, nous avons en permanence les spécialistes des bases de données à l'esprit et nous comprenons qu'ils nous disent cela. Bien sûr, la majorité de notre équipe a d'abord étudié et pratiqué les bases de données pendant des années et nous connaissons bien ces outils. Mais lorsqu'il s'agit de réaliser une application de recherches les bases de données ont des limites de trois ordres:. Limitations dans les performances d'accès aux données (temps de réponses),. Ordre de présentation des résultats inadapté (pertinence). Limitations dans la capacité à comprendre la requête de l’utilisateur si elle contient des erreurs ou des incertitudes,. . Performance. Le délai d’accès aux données via une application de recherche est de 40 à 70 fois plus court que celui nécessaire à une application de base de données relationnelle, ainsi les avantages de performances des applications de recherche sont faciles à comprendre. L’objectif à l’origine du concept de bases de données relationnelles était de faciliter le traitement sophistiqué de données structurées, incluant le requêtage, les comparaisons, les fusions, l’impression, le formatage et les tâches administratives de back-office. Cet objectif a permis le développement des structures bien connues de tables et de jointures qui permettent aux développeurs de construire un modèle de données relationnel, qui permettent l'accès aux données en utilisant un ou plusieurs champs indexés... A contrario, dans une application de recherche, toutes les données sont dans l’index ce qui permet bien évidemment d’y avoir un accès plus rapide. Un autre problème qui a un impact évident sur la performance est le fait que, dans les structures de base de données, la majorité des données est stockée dans des mémoires de masse, les index de table ne sont que partiellement en mémoire. Dans les applications de base de données, l'accès aux données provoque un très grand nombre d’accès sur les disques, ces opérations ralentissent l'exécution d'un logiciel.. Les applications de recherche agissent de façon totalement différente. Lorsque l’index est créé, l'ensemble du contenu des documents est inclus dans l’index avec un pointeur vers le document original. Les données dans l’index sont écrites et triées grâce à des algorithmes très sophistiqués offrant vitesse et puissance pour parcourir l’index et ainsi identifier les entrées qui correspondent à la requête utilisateur et extraire les documents correspondants par ordre de pertinence.. Ceci est une des raisons importantes qui font que les applications bases de données ne peuvent pas rivaliser avec les applications de recherche dans le domaine de la performance d’accès aux données. Bien sûr, lorsque le besoin est circonscrit au seul accès à des données pour répondre à une requête, les bases de données peuvent se révéler particulièrement peu performantes. Les comparatifs montrent que lorsqu'une base de données traitent une requête et accèdent aux données, le délai peut être jusqu'à 100 fois plus long que le temps nécessaires à un moteur de recherche pour traiter la même requête.. Aujourd’hui avec la prééminence de l’usage d’internet et le leadership de sites web comme Google.com ou Bing.com, personne dans le monde professionnel n’accepte qu’une réponse à une requête s’obtienne en plus de 3 secondes alors que n’importe quel adolescent peut obtenir plus de 207 millions de résultats en moins de 0.16 seconde après avoir tapé "Michael Jackson" dans une boîte de recherche Google comme montré ci-dessous... . . Interprétation de requête. L'accès sélectif aux données dans une base de données relationnelle s’effectue avec le langage SQL (Structured Query Language). Par exemple, si vous souhaitez extraire des enregistrements d’une base de données de produits les produits invendus dans l’année, vous devrez écrire les instructions suivantes :. Select product_number, product_description, stock_count from Products where stock_count &gt; 0 order by product_number.. SQL est parfait pour accéder à des données structurées, mais il reste très limité si vous avez besoin de rechercher des informations dans un volume très important de données non structurées.. La recherche full text (c’est à dire la recherche sur des données non-structurées) nécessite une approche toute différente. Dans notre exemple précédent, si l’utilisateur entre une requête incorrecte (de type "Michael Jakson" or "Michael Jacksonn"), la requête sera malgré tout traitée correctement et le moteur de recherche saura tenir compte de ces erreurs potentiels et proposera automatiquement de revenir à la requête sur "Michael Jackson". De la même façon, si vous recherchez "télévisions" sur un site web e-commerce, vous obtiendrez des réponses pour "télévision". Sur certains sites, vous pourrez également obtenir la présentation de lecteurs DVD car souvent on achète un lecteur DVD lorsqu’on est acheteur d’une télévision.. Avec SQL, pour atteindre ce niveau de traitement du texte et l’interprétation de la requête, vous aurez besoin d’écrire un programme conséquent. En raison de la façon dont sont stockées les données, cela n’amènera qu’un niveau de performance très faible, comme nous l’avons vu ci-dessus.. Le logiciel de recherche applique sur les données plusieurs analyseurs lexicaux lorsqu’elles sont ajoutées à l’index et les mêmes analyseurs sont appliqués à la chaîne de caractères de la requête. L’interprétation résultante de requêtes remonte une série complète de réponses qui sont classées par pertinence en utilisant de puissants algorithmes, issues d'algorithmes mathématiques adaptés.. En conclusion, nous répondons fréquemment à cette question sur la différence entre applications de bases de données relationnelles et applications de recherche. Bien évidemment, notre réponse dépend de la quantité de données. Si un site web n’a que quelques pages ou si vous êtes en présence d’un site e-commerce n’ayant qu’une offre de produits limitée, alors l’utilisation d’une application de base de données n’aura que peu d’impact négatif. A l’inverse, imaginons que nous parlions d’un site communautaire de millions de membres, chacun avec des informations personnelles et que vous vouliez permettre à un quelconque membre de retrouver ceux qui sont dans le même pays et/ou ont étudié dans la même université. Dans une telle situation, si vous voulez offrir une réponse optimale à l’utilisateur, l’application de recherche est la seule solution logique et adaptée.. Question 2: Comment fonctionne un moteur de recherche?. Les moteurs de recherche sont spécifiquement conçues pour les données non structures ou des collections de données avec des structures différentes comme les pages web, les différents documents bureautiques et à peu près tout type de fichiers autre que les bases de données et les fichiers binaires de programme.. Le processing de chaque requête se fait en trois étapes:. Interpréter la requête,. Trouver les correspondances dans l’index,. Retourner les réponses.. . . Avant de pouvoir traiter une quelconque requête, le moteur de recherche va indexer la globalité des documents auxquels la requête pourra s’appliquer. Cela s’effectue grâce au process d'indexation.. Index et analyseurs de texte. Cette opération recense les différents mots présents dans chaque document et les stocke (l’index) avec les informations suivantes:. Quel document contient chacun des mots de l’index?. Quelle est la fréquence de chaque mot dans chaque document?. . L’index est stocké dans une structure de données optimisé vie des algorithmes qui permettent l’accès extrêmement rapide aux données, la navigation dans les données et le calcul de pertinence lié à la requête. Pour extraire de chacun des documents le contenu à indexer, l'indexeur utilise des librairies spécifiques appelées parser adaptées au format du document à indexer. Il y a un parser pour chacun des formats de données standards comme par exemple : page HTML/XHTML, document MS Word, mail, fichier MP3 ou documents PDF….. Au fur et à mesure que les parsers envoient des mots à l'indexeur, de nombreux analyseurs de texte leurs sont appliqué, donnant richesse et versatilité à l'index ainsi constitué.. L’analyseur de lemmatisation reconnaîtra les différentes formes accentuées de chaque mot et stockera uniquement le lemme. “Boire”, “Boisson”, “buvons”, “buvable”ont tous le même radical qui est “boire”.. Le filtre MiseEnMinuscule va transformer chaque caractère en minuscule et le filtre ISOLatin1 supprimera tous les caractères accentués (é, ê, ë, è seront remplacés par e) de façon à ce que l’utilisateur n'ait pas à entrer des caractères accentués mais obtiendra malgré tout les réponses pertinentes... Les mots ignorés (stopword) sont également retirés (les mots comme “de”, “le”, “pour” etc).. A la fin du processus d’indexation, un fichier appelé index est ainsi créé. Lorsqu’une requête lui est appliquée, le moteur de recherche va très rapidement lister les documents répondant à cette requête en les affichant par ordre de pertinence décroissante (le plus pertinent en première position). Selon Wikipedia, parcourir un index constitué du contenu de 10 000 documents de taille importante peut se faire en quelques millisecondes alors que parcourir séquentiellement tous les mots de ces 10 000 documents prendrait des heures.. Avec l’index ainsi créé, le système est prêt à recevoir et répondre aux requêtes.. Requête et interprétation. Quand un utilisateur entre une requête et lance la recherche, tous les analyseurs utilisés pour créer l’index sont appliqués à la requête avec les mêmes effets décrits lors de l’élaboration de l’index. Le résultat de cette analyse est ensuite traité par de puissants algorithmes qui parcourent l’index, trouvent les entrées correspondantes les trient par ordre de pertinence et retournent les résultats. Nous voyons ici une grande différence entre les requêtes SQL de bases de données et les requêtes d’applications de recherche : dans un moteur de recherche, la requête est interprétée dans le but d’apporter une compréhension complète de sa signification alors que SQL ne renvoie que les données qui correspondent parfaitement à la requête.. Présentation des résultats. Lorsqu’une requête est traitée, tous les documents répondants à la requête seront affichés à l’écran. Dans le souci de faciliter la lecture et la compréhension de cette liste, de puissantes fonctions sont proposées par le moteur de recherche. Nous en listons quelques-unes ci-dessous, décrites avec un exemple de recherche web.. Tri / Classement:. Le document qui a la pertinence la plus élevée par rapport à la requête est positionné en premier. Cette pertinence est calculée par un algorithme lors de la navigation dans l’index.. Extraits (Snippets)::. Lorsque vous faites une recherche web, vous pouvez obtenir un nombre important de réponses. Il est alors utile d’avoir une description courte de chaque entrée obtenue, appelée Snippet et qui est automatiquement extraite du document d’origine par le moteur de recherche... Regroupement:. Il est possible de regrouper les résultats selon différents critères. Par exemple, il serait certainement plus agréable que les pages web incluses dans vos réponses et appartenant au même site web soient regroupées ensemble et listées sans tenir compte de la pertinence.. Navigation à Facettes:. C’est une fonctionnalité très puissante qui facilite la navigation parmi des milliers de réponses. Ces réponses sont catégorisées automatiquement et suivant différents axes en utilisant de puissants algorithmes et ainsi vous permettre de regrouper ensemble les réponses par nature (vidéos, images, musique, blogs…), par date (les documents du jour, de la semaine dernière, du mois précédent, de l’année précédente, …) et pour des sites de commerce par prix (moins de 10 euros, de 10 à 100 euros, de 100 à 1000 euros, plus de 1000 euros) ou suivant toute autre catégorisation possible.. Question 3: Dans quel but utilise-t-on un moteur de recherche?. L’objectif des moteurs de recherche est de rendre aisé l'accès à des données structurées, fichiers numériques en proposant plusieurs accès possibles. Nous connaissons tous des sites web comme Google.com, Yahoo.com ou Bing.com, où un utilisateur peut soumettre une requête et recevoir comme réponses toutes les URLs correspondantes. Dans le modèle économique des sociétés qui ont créé ces sites web (Google, Yahoo et Microsoft), la technologie de moteur de recherche est utilisée comme un service gratuit de recherche de sites web pour les internautes en fonction de leurs requêtes. En affichant quelques publicités, Google Yahoo et Microsoft perçoivent des revenues de la part des annonceurs et non pas des utilisateurs à qui ils offrent le service de recherche.. Mais nul ne sait exactement comment sont utilisés ou construits les algorithmes et il est très difficile d’anticiper la pertinence d’un site web à une requête spécifique. Le pire est que périodiquement, Bing ou Google changent leurs algorithmes et des années de travail à peaufiner et optimiser votre classement (ranking) partent en fumée. Ce modèle est également proposé par de nombreuses sociétés qui mettent à disposition des portails avec possibilité de recherche dans des domaines spécifiques (sport, cinéma, culture, …). Dans ces sites, la seule chose que vous voyez est la case de recherche dans laquelle vous saisissez votre requête. C’est comme la partie émergée d’un iceberg, vous ne mesurez pas la puissance et l'étendue du moteur de recherche qui se cache en dessous.. Plus généralement, nous pouvons catégoriser les utilisations de moteurs de recherche comme suit:. Recherche dans un site web. Les sites de contenus (journaux, groupes d’intérêt, etc…), les sites de e-commerce et les sites communautaires incorporent de plus en plus de données. Dans ces modèles, les opérateurs des sites ont grand intérêt à ce que leurs utilisateurs ou clients trouvent l’information qu’ils souhaitent consulter directement dans leur site. En raison de l’audience grandissante de sites web, il est toujours très difficile d’anticiper de quelle façon les gens voudront accéder à l’information et dans quel ordre ils voudront la voir apparaître. Pour un même site web, différents utilisateurs pourront souhaiter des types d’accès différents. Bien sûr, chacun sait combien il est important sur un site e-commerce de pouvoir orienter le plus vite possible le visiteur vers le produit qu’il veut acheter.. Un autre type de modèle économique est appelé "freemium". Dans ce modèle, les services de base sont gratuits mais l'opérateur du site web propose des fonctionnalités avancées qui sont payantes. Pour les sites web de type "freemium", le propriétaire du site web doit s'assurer que non seulement les utilisateurs gratuits sont satisfaits afin qu'une partie d'entre eux évoluent vers le service payant tout en assurant des revenus liés à la publicité mais aussi s'assurer que les utilisateurs payants restent satisfaits et ne se désabonnent pas.. Et bien sûr, dans le cadre d'un site web d'entreprise, dont l'objectif premier est de présenter au mieux la société, on ne doit pas laisser les utilisateurs passer à côté de l'information qu'ils sont venus chercher sur le site web au risque qu'ils ignorent les offres de la société.. La recherche en entreprise. Dans une étude récente, IDC a montré qu'un cadre passe en moyenne 9 heures par semaine à rechercher de l'information. Cela représente un coût de 14 000 dollars par an et par employé.. De la même façon, toute personne qui a travaillé dans une grande entreprise sur un projet transversal d'envergure sait combien il est difficile de partager des informations avec des collègues ou des partenaires ou bien d'en obtenir de leur part. C'est pourquoi, il est facile à comprendre pourquoi les technologies de recherche ont été adaptées et utilisées dans le monde de l'entreprise.. Les applications d'entreprise ont beaucoup de fonctionnalités spécifiques qui ont eu une grande influence sur le développement des moteurs de recherche, menant à l'avènement d'une nouvelle catégorie d'applications de recherche appelée application de recherche d'entreprise qui ont les caractéristiques particulières suivantes:. Source et nature des documents:. En entreprise, les documents sont de natures très différentes et pas uniquement des pages web. Ils peuvent être externes en provenance de sites web ou bien internes, stockés localement ou à distance et dans des formats très variés (documents MS Office, boite de réception de courriers électroniques, serveurs de courriers, bases de données centrales, ERP, systèmes de gestion de contenus d'entreprise, CRM, etc…),. Sécurité:. En entreprise, tous les utilisateurs n'ont pas les mêmes droits quant à l'accès aux documents. Il faudra donc que l'application de recherche gère des profils en fonction de ces droits,. Vocabulaires spécifiques:. Si vous travaillez dans la publicité ou chez un fabricant de jouets, le mot bannière n'a pas la même signification. De même, si le produit phare de votre société s'intitule Paris, il est important que votre produit ne puisse être confondu dans une requête avec la ville de Paris.. Le plus n'est pas toujours synonyme de mieux:. A la différence de Bing, Yahoo ou Google, où vous recevez autant de réponses que possible, dans un environnement d'entreprise, la meilleure réponse à une requête est souvent un unique document. Les applications de recherche d'entreprise retournent moins de réponses mais elles sont bien plus pertinentes. Google peut omettre quelques réponses qui sont considérées comme non pertinentes à la requête mais cela n'est en principe pas un problème pour les utilisateurs Google. A l'inverse, en entreprise, oublier même une réponse pourrait faire perdre toute crédibilité au système.. Dans le cas de la connexion à des applications centrales d'entreprises, la recherche en entreprise est devenue un domaine très intéressant et spécialisé, qui permet d'amener une haute productivité aux utilisateurs. Nous allons sortir prochainement un livre blanc sur ce sujet qui sera disponible sur notre site web et qui vous permettra de voir notre point de vue et nos nouvelles offres sur le sujet.. Recherche locale. Les outils de recherche locale comme Google Desktop ont pour but de donner à un individu le meilleur accès possible aux documents stockés sur son ordinateur personnel. Ici à nouveau les technologies de recherche sont utilisées et nous voyons également de plus en plus de fonctionnalités directement prises en compte directement au niveau du système d'exploitation. Les nouvelles versions de Windows incluent notamment les fonctionnalités issues de Fast (société acquise par Microsoft) ou bien dans Mac OS avec la technologie Spotlight.. Recherche "offline". Si vous voulez distribuer un nombre important d'informations non structurées sur un media portable (CD, DVD), vous pouvez utiliser un moteur de recherche pour indexer ces données puis permettre un accès rapide et facile à ces mêmes données grâce à une requête comme vous l'auriez fait en utilisant un moteur de recherche sur internet.. Utilisation inter-applicatif (Search Based applications). Parce que les performances d'accès aux données des moteurs de recherche sont très élevées, des chercheurs se sont penchés depuis quelques années sur la possibilité d'utiliser cet avantage pour améliorer les performances des applications existantes, comme les applications produites par les bases de données.. Ceci a donné naissance à une toute nouvelle catégorie d'applications appelée Search Based Applications ou SBA dont la caractéristique est de reposer sur un index full text qui vient en complément ou à la place de l'index traditionnel de la base de données.. L'application va utiliser le moteur de recherche pour accéder rapidement à la donnée et passera la main à la base de données seulement si un traitement est nécessaire. Comme les applications gèrent des volumes de données de plus en plus importants et que l'accès aux données n'implique pas forcément un traitement, travailler de la sorte produit une grande efficacité.. Cette nouvelle approche de programmation se décompose en deux parties:. L’accès à l’information est assuré par le moteur de recherche,. Le traitement de l’information est effectué par la partie non liée à la recherche de l’application (dans ce cas la base de données).. . Dans une Search Based Application le moteur de recherche est utilisé de manière particulière puisque les requêtes qui permettent d'accéder aux données ne sont pas entrées par un utilisateur mais générées par un programme informatique et les réponses à ces requêtes vont alimenter un autre programme.. Une telle application intitulée Search-Based Application (SBA) est particulièrement performante et offre un très bon retour sur investissement car les SBAs peuvent être créées bien plus rapidement. Cette approche novatrice dans la façon de créer des applications est très prometteuse et chez OpenSearchServer, nous sommes très intéressés à investiguer dans cette direction. Ainsi, la synchronisation de la base de données et de l'index est un facteur clé et beaucoup reste à faire sur ce sujet. Nous préparons un livre blanc complet sur les Search Based Applications qui devrait être bientôt disponible.. </value></field><field name="timestamp"><value>20120303120440</value></field><field name="type"><value>story</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/fr/une_fonction/module_scheduler</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/fr/une_fonction/module_scheduler</value></field><field name="autocomplete"><value>Module Scheduler</value></field><field name="title"><value>Module Scheduler</value></field><field name="titleExact"><value>Module Scheduler</value></field><field name="titlePhonetic"><value>Module Scheduler</value></field><field name="content"><value>Avec OpenSearchServer vous pouvez programmer et automatiser les tâches mettant en oeuvre la stratégie d'indexation. Vous pouvez, par exemple, indexer des données issues d'une base de données, puis dupliquer l'index sur une autre instance d'OpenSearchServer.. Pour facilier l'intégration des tâches périodiques, nous avons intégré un ordonnanceur dans notre solution.. Le Scheduler permet de programmer automatiquement l'arrêt ou le démarrage des tâches, sans avoir besoin d'être présent lors de leur exécution. Un journal d'activités trace l'exécution des tâches.. Le scheduler d'OpenSearchServer est basé sur Quartz, il utilise une syntaxe comparable aux expressions Cron.. Voici quelques exemples de tâches prises en charge par le module Scheduler:. Exécuter une tâche d'indexation de données en base. Démarrer / arrêter le crawler Web. Démarrer / arrêter le crawler de fichiers. Supprimer des données d'un index. Optimiser un index. Repliquer un index. . Utilisation du scheduler. Pour accéder à l'interface utilisateur du module Scheduler, il suffit de vous rendre dans l'onglet Scheduler d'OpenSearchServer, après avoir sélectionné l'index concerné..  Vous pouvez maintenant ajouter des "jobs" et définir quand vous souhaitez qu'ils s'exécutent. Chaque "job" est identifié par un nom. Il peut être activé ou désactivé en fonction des besoins.. . Créér un "job". Depuis l'onglet Scheduler, cliquez sur le sous onglet nommé "New/Edit".. Pour définir un job, vous devez entrer les éléments suivants:. Un nom unique,. Un expression "Cron" pour programmer l'execution (date/heure de démarrage, fréquence, etc.),. Une liste de tâches.. . L'expression Cron. Pour rendre la programmation la plus souple possible, nous avons choisi d'utiliser la syntaxe des expression Cron, bien connue des utilisateurs des systèmes d'exploitation Linux/Unix. Les expressions Cron sont non seulement puissants mais également extrêment flexibles.. La syntaxe des expression Cron est intégralement décrite ici:. http://en.wikipedia.org/wiki/CRON_expression#CRON_expression. Les tâches contrôlées par le Scheduler. Les tâches que vous pouvez paramétrer dans le Scheduler sont affichées dans le menu "Task" quand vous créez un "job", comme indiqué ci-dessous.. . Database crawler – run: Exécute une requête SQL peuplant l'index, tel que défini dans le module de crawl de base de données.. File crawler – start/stop: Démarre ou stoppe l'indexation de systèmes de fichiers, tel que défini dans le crawler de système de fichiers.. Web crawler – start/stop: Démarre ou stoppe l'indexation de sites internet, tel que défini dans le crawler web.. Index – optimize: Lance l'optimisation de l'index.. Replication - run: Copie l'index sur une autre instance d'OpenSearchServer, défini dans le module de réplication.. Monitoring upload: Remontée des informations de monitoring.. . Le sous-onglet "Log" liste toutes les tâches exécutées ou en cours d'exécution, il contient la date et la durée d'exécution.. . </value></field><field name="contentExact"><value>Avec OpenSearchServer vous pouvez programmer et automatiser les tâches mettant en oeuvre la stratégie d'indexation. Vous pouvez, par exemple, indexer des données issues d'une base de données, puis dupliquer l'index sur une autre instance d'OpenSearchServer.. Pour facilier l'intégration des tâches périodiques, nous avons intégré un ordonnanceur dans notre solution.. Le Scheduler permet de programmer automatiquement l'arrêt ou le démarrage des tâches, sans avoir besoin d'être présent lors de leur exécution. Un journal d'activités trace l'exécution des tâches.. Le scheduler d'OpenSearchServer est basé sur Quartz, il utilise une syntaxe comparable aux expressions Cron.. Voici quelques exemples de tâches prises en charge par le module Scheduler:. Exécuter une tâche d'indexation de données en base. Démarrer / arrêter le crawler Web. Démarrer / arrêter le crawler de fichiers. Supprimer des données d'un index. Optimiser un index. Repliquer un index. . Utilisation du scheduler. Pour accéder à l'interface utilisateur du module Scheduler, il suffit de vous rendre dans l'onglet Scheduler d'OpenSearchServer, après avoir sélectionné l'index concerné..  Vous pouvez maintenant ajouter des "jobs" et définir quand vous souhaitez qu'ils s'exécutent. Chaque "job" est identifié par un nom. Il peut être activé ou désactivé en fonction des besoins.. . Créér un "job". Depuis l'onglet Scheduler, cliquez sur le sous onglet nommé "New/Edit".. Pour définir un job, vous devez entrer les éléments suivants:. Un nom unique,. Un expression "Cron" pour programmer l'execution (date/heure de démarrage, fréquence, etc.),. Une liste de tâches.. . L'expression Cron. Pour rendre la programmation la plus souple possible, nous avons choisi d'utiliser la syntaxe des expression Cron, bien connue des utilisateurs des systèmes d'exploitation Linux/Unix. Les expressions Cron sont non seulement puissants mais également extrêment flexibles.. La syntaxe des expression Cron est intégralement décrite ici:. http://en.wikipedia.org/wiki/CRON_expression#CRON_expression. Les tâches contrôlées par le Scheduler. Les tâches que vous pouvez paramétrer dans le Scheduler sont affichées dans le menu "Task" quand vous créez un "job", comme indiqué ci-dessous.. . Database crawler – run: Exécute une requête SQL peuplant l'index, tel que défini dans le module de crawl de base de données.. File crawler – start/stop: Démarre ou stoppe l'indexation de systèmes de fichiers, tel que défini dans le crawler de système de fichiers.. Web crawler – start/stop: Démarre ou stoppe l'indexation de sites internet, tel que défini dans le crawler web.. Index – optimize: Lance l'optimisation de l'index.. Replication - run: Copie l'index sur une autre instance d'OpenSearchServer, défini dans le module de réplication.. Monitoring upload: Remontée des informations de monitoring.. . Le sous-onglet "Log" liste toutes les tâches exécutées ou en cours d'exécution, il contient la date et la durée d'exécution.. . </value></field><field name="contentPhonetic"><value>Avec OpenSearchServer vous pouvez programmer et automatiser les tâches mettant en oeuvre la stratégie d'indexation. Vous pouvez, par exemple, indexer des données issues d'une base de données, puis dupliquer l'index sur une autre instance d'OpenSearchServer.. Pour facilier l'intégration des tâches périodiques, nous avons intégré un ordonnanceur dans notre solution.. Le Scheduler permet de programmer automatiquement l'arrêt ou le démarrage des tâches, sans avoir besoin d'être présent lors de leur exécution. Un journal d'activités trace l'exécution des tâches.. Le scheduler d'OpenSearchServer est basé sur Quartz, il utilise une syntaxe comparable aux expressions Cron.. Voici quelques exemples de tâches prises en charge par le module Scheduler:. Exécuter une tâche d'indexation de données en base. Démarrer / arrêter le crawler Web. Démarrer / arrêter le crawler de fichiers. Supprimer des données d'un index. Optimiser un index. Repliquer un index. . Utilisation du scheduler. Pour accéder à l'interface utilisateur du module Scheduler, il suffit de vous rendre dans l'onglet Scheduler d'OpenSearchServer, après avoir sélectionné l'index concerné..  Vous pouvez maintenant ajouter des "jobs" et définir quand vous souhaitez qu'ils s'exécutent. Chaque "job" est identifié par un nom. Il peut être activé ou désactivé en fonction des besoins.. . Créér un "job". Depuis l'onglet Scheduler, cliquez sur le sous onglet nommé "New/Edit".. Pour définir un job, vous devez entrer les éléments suivants:. Un nom unique,. Un expression "Cron" pour programmer l'execution (date/heure de démarrage, fréquence, etc.),. Une liste de tâches.. . L'expression Cron. Pour rendre la programmation la plus souple possible, nous avons choisi d'utiliser la syntaxe des expression Cron, bien connue des utilisateurs des systèmes d'exploitation Linux/Unix. Les expressions Cron sont non seulement puissants mais également extrêment flexibles.. La syntaxe des expression Cron est intégralement décrite ici:. http://en.wikipedia.org/wiki/CRON_expression#CRON_expression. Les tâches contrôlées par le Scheduler. Les tâches que vous pouvez paramétrer dans le Scheduler sont affichées dans le menu "Task" quand vous créez un "job", comme indiqué ci-dessous.. . Database crawler – run: Exécute une requête SQL peuplant l'index, tel que défini dans le module de crawl de base de données.. File crawler – start/stop: Démarre ou stoppe l'indexation de systèmes de fichiers, tel que défini dans le crawler de système de fichiers.. Web crawler – start/stop: Démarre ou stoppe l'indexation de sites internet, tel que défini dans le crawler web.. Index – optimize: Lance l'optimisation de l'index.. Replication - run: Copie l'index sur une autre instance d'OpenSearchServer, défini dans le module de réplication.. Monitoring upload: Remontée des informations de monitoring.. . Le sous-onglet "Log" liste toutes les tâches exécutées ou en cours d'exécution, il contient la date et la durée d'exécution.. . </value></field><field name="timestamp"><value>20120303220521</value></field><field name="type"><value>story</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/newsletter</value></field><field name="urlExact"><value>http://dev.open-search-server.com/newsletter</value></field><field name="autocomplete"><value>OpenSearchServer Newsletter</value></field><field name="title"><value>OpenSearchServer Newsletter</value></field><field name="titleExact"><value>OpenSearchServer Newsletter</value></field><field name="titlePhonetic"><value>OpenSearchServer Newsletter</value></field><field name="content"><value> Subscribe to our mailing list . . </value></field><field name="contentExact"><value> Subscribe to our mailing list . . </value></field><field name="contentPhonetic"><value> Subscribe to our mailing list . . </value></field><field name="timestamp"><value>20120823233718</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/services_saas</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/services_saas</value></field><field name="autocomplete"><value>Service SaaS</value></field><field name="title"><value>Service SaaS</value></field><field name="titleExact"><value>Service SaaS</value></field><field name="titlePhonetic"><value>Service SaaS</value></field><field name="content"><value>L'offre SaaS est un service de location d'une instance OpenSearchServer hébergée sur notre propre infrastructure Cloud.. Cette offre vous permet de disposer en quelques minutes du logiciel OpenSearchServer complet et opérationnel via son interface utilisateur et ses APIs. L'infrastructure Cloud d'OpenSearchServer est supervisée en 24/7, 365 jours par an, pour garantir un taux de disponibilité optimum.. Choisissez la formule adaptée à votre besoin:. Formules. DISCOVER. . EVOLUTION. . ADVANCED. . PROFESSIONAL. . ENTERPRISE. . . Nombre total. de documents . 1 000. 10 000. . 100 000. . 1 million. . 10 millions. . . Nombre. d'index . 5. 10. . 100. . Illimité. . Illimité. . . Stockage. 500 Mo. . 2 Go. . 5 Go. . 20 Go. . 50 Go. . . Performance. Requêtes . par seconde. 100. . 500. . 1000. . Illimité. . Illimité. . .  . 14 jours d'essai gratuit. . Price per month . (ex. VAT). No commitment (1) . 9,90 €. par mois  (2) . . . 19,90 €. par mois  (2) . . . 39,90 €. par mois  (2) . . . 79,90 €. par mois  (2) . . . 149,00 €. par mois  (2) . . . . . . (1) Sans engagement: Vous pouvez stopper l'abonnement à tout moment.. (2)  Toute commande suppose l'acceptation sans réserve des conditions générales de vente.. Notre équipe est à votre disposition pour répondre à toutes vos questions. Contactez-nous via le formulaire de contact ou en nous écrivant à contact@open-search-server.com.. </value></field><field name="contentExact"><value>L'offre SaaS est un service de location d'une instance OpenSearchServer hébergée sur notre propre infrastructure Cloud.. Cette offre vous permet de disposer en quelques minutes du logiciel OpenSearchServer complet et opérationnel via son interface utilisateur et ses APIs. L'infrastructure Cloud d'OpenSearchServer est supervisée en 24/7, 365 jours par an, pour garantir un taux de disponibilité optimum.. Choisissez la formule adaptée à votre besoin:. Formules. DISCOVER. . EVOLUTION. . ADVANCED. . PROFESSIONAL. . ENTERPRISE. . . Nombre total. de documents . 1 000. 10 000. . 100 000. . 1 million. . 10 millions. . . Nombre. d'index . 5. 10. . 100. . Illimité. . Illimité. . . Stockage. 500 Mo. . 2 Go. . 5 Go. . 20 Go. . 50 Go. . . Performance. Requêtes . par seconde. 100. . 500. . 1000. . Illimité. . Illimité. . .  . 14 jours d'essai gratuit. . Price per month . (ex. VAT). No commitment (1) . 9,90 €. par mois  (2) . . . 19,90 €. par mois  (2) . . . 39,90 €. par mois  (2) . . . 79,90 €. par mois  (2) . . . 149,00 €. par mois  (2) . . . . . . (1) Sans engagement: Vous pouvez stopper l'abonnement à tout moment.. (2)  Toute commande suppose l'acceptation sans réserve des conditions générales de vente.. Notre équipe est à votre disposition pour répondre à toutes vos questions. Contactez-nous via le formulaire de contact ou en nous écrivant à contact@open-search-server.com.. </value></field><field name="contentPhonetic"><value>L'offre SaaS est un service de location d'une instance OpenSearchServer hébergée sur notre propre infrastructure Cloud.. Cette offre vous permet de disposer en quelques minutes du logiciel OpenSearchServer complet et opérationnel via son interface utilisateur et ses APIs. L'infrastructure Cloud d'OpenSearchServer est supervisée en 24/7, 365 jours par an, pour garantir un taux de disponibilité optimum.. Choisissez la formule adaptée à votre besoin:. Formules. DISCOVER. . EVOLUTION. . ADVANCED. . PROFESSIONAL. . ENTERPRISE. . . Nombre total. de documents . 1 000. 10 000. . 100 000. . 1 million. . 10 millions. . . Nombre. d'index . 5. 10. . 100. . Illimité. . Illimité. . . Stockage. 500 Mo. . 2 Go. . 5 Go. . 20 Go. . 50 Go. . . Performance. Requêtes . par seconde. 100. . 500. . 1000. . Illimité. . Illimité. . .  . 14 jours d'essai gratuit. . Price per month . (ex. VAT). No commitment (1) . 9,90 €. par mois  (2) . . . 19,90 €. par mois  (2) . . . 39,90 €. par mois  (2) . . . 79,90 €. par mois  (2) . . . 149,00 €. par mois  (2) . . . . . . (1) Sans engagement: Vous pouvez stopper l'abonnement à tout moment.. (2)  Toute commande suppose l'acceptation sans réserve des conditions générales de vente.. Notre équipe est à votre disposition pour répondre à toutes vos questions. Contactez-nous via le formulaire de contact ou en nous écrivant à contact@open-search-server.com.. </value></field><field name="timestamp"><value>20120331115515</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/home</value></field><field name="urlExact"><value>http://dev.open-search-server.com/home</value></field><field name="autocomplete"><value>Include a genuine search engine in your application</value></field><field name="title"><value>Include a genuine search engine in your application</value></field><field name="titleExact"><value>Include a genuine search engine in your application</value></field><field name="titlePhonetic"><value>Include a genuine search engine in your application</value></field><field name="content"><value>OpenSearchServer is an open source search engine and crawler software based on best open source technologies.. Give your users the best search experience: Suggestion box (autocompletion), spell checking, facet and filter search, relevant customization.. Index all your data: Internet / Extranet Web sites, documents (Office, PDF, medias, ...), databases and/or XML files.. Fast &amp; easy: Integrated with your applications, Web sites, content, e-commerce, whatever the technology you are using  (PHP, .NET, Java, Drupal, Wordpress, ...).. </value></field><field name="contentExact"><value>OpenSearchServer is an open source search engine and crawler software based on best open source technologies.. Give your users the best search experience: Suggestion box (autocompletion), spell checking, facet and filter search, relevant customization.. Index all your data: Internet / Extranet Web sites, documents (Office, PDF, medias, ...), databases and/or XML files.. Fast &amp; easy: Integrated with your applications, Web sites, content, e-commerce, whatever the technology you are using  (PHP, .NET, Java, Drupal, Wordpress, ...).. </value></field><field name="contentPhonetic"><value>OpenSearchServer is an open source search engine and crawler software based on best open source technologies.. Give your users the best search experience: Suggestion box (autocompletion), spell checking, facet and filter search, relevant customization.. Index all your data: Internet / Extranet Web sites, documents (Office, PDF, medias, ...), databases and/or XML files.. Fast &amp; easy: Integrated with your applications, Web sites, content, e-commerce, whatever the technology you are using  (PHP, .NET, Java, Drupal, Wordpress, ...).. </value></field><field name="timestamp"><value>20120330123507</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/news</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/news</value></field><field name="autocomplete"><value>News</value></field><field name="title"><value>News</value></field><field name="titleExact"><value>News</value></field><field name="titlePhonetic"><value>News</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120525120934</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/a_propos</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/a_propos</value></field><field name="autocomplete"><value>A propos</value></field><field name="title"><value>A propos</value></field><field name="titleExact"><value>A propos</value></field><field name="titlePhonetic"><value>A propos</value></field><field name="content"><value>Le projet OpenSearchServer est né en 2007 au sein d'Infopro Communications, un groupe d'information et de services professionnels français couvrant cinq secteurs clés de l'économie au travers de logiciels, bases de données, services en ligne, magazines, salons, formations, conférences.. Parce qu'il n'existait pas de solution de recherche offrant à la fois, des fonctionnalités complètes, un prix compétitif et une facilité d'utilisation, il a été décidé de créer en interne un logiciel répondant à ces critères en se basant sur les meilleurs composants open source. Ce nouveau logiciel devait offrir toutes les fonctionnalités d'une solution professionnelle d'Enterprise Search, apte à servir les besoins des applications internes. Ainsi naquit OpenSearchServer.. Ce projet fut initié et mené par Emmanuel Keller, alors DSI de la filiale GISI Interactive, en charge d'une équipe de 20 ingénieurs dont 3 dédiés au projet.. En 2008, une première application est créée, basé sur OpenSearchServer. Le succès de cette première application fut tel, qu'un an plus tard, OpenSearchServer était utilisé dans plus de dix applications.. La qualité du logiciel, l'efficacité des applications s'appuyant dessus, ont forgé la conviction qu'un plus grand nombre d'entreprises pourrait être intéressé par son utilisation. A l'issue d'une réflexion avec la direction du groupe Infopro Communications, un accord fut trouvé. Emmanuel Keller quittait ses fonctions de DSI et acquérait l'intégralité des droits d'OpenSearchServer en décembre 2009. Infopro Communications devint logiquement le premier client de l'entreprise créée par Emmanuel en février 2010.. Après une analyse approfondie du marché, l'élaboration d'un ambitieux plan de développement, la signature de premiers contrats, un groupe d'investisseurs menés par Kima Ventures fournit un premier tour de financement en février 2011.. Depuis, la société a redoublé d'effort pour développer l'équipe, attirer de nouveaux clients et écrire l'histoire de cette nouvelle compagnie.. Adresse :. Paris Incubateurs - Technologies Numeriques. 15 Rue Jean-Baptiste Berlier. 75013 PARIS. France. contact@open-search-server.com. </value></field><field name="contentExact"><value>Le projet OpenSearchServer est né en 2007 au sein d'Infopro Communications, un groupe d'information et de services professionnels français couvrant cinq secteurs clés de l'économie au travers de logiciels, bases de données, services en ligne, magazines, salons, formations, conférences.. Parce qu'il n'existait pas de solution de recherche offrant à la fois, des fonctionnalités complètes, un prix compétitif et une facilité d'utilisation, il a été décidé de créer en interne un logiciel répondant à ces critères en se basant sur les meilleurs composants open source. Ce nouveau logiciel devait offrir toutes les fonctionnalités d'une solution professionnelle d'Enterprise Search, apte à servir les besoins des applications internes. Ainsi naquit OpenSearchServer.. Ce projet fut initié et mené par Emmanuel Keller, alors DSI de la filiale GISI Interactive, en charge d'une équipe de 20 ingénieurs dont 3 dédiés au projet.. En 2008, une première application est créée, basé sur OpenSearchServer. Le succès de cette première application fut tel, qu'un an plus tard, OpenSearchServer était utilisé dans plus de dix applications.. La qualité du logiciel, l'efficacité des applications s'appuyant dessus, ont forgé la conviction qu'un plus grand nombre d'entreprises pourrait être intéressé par son utilisation. A l'issue d'une réflexion avec la direction du groupe Infopro Communications, un accord fut trouvé. Emmanuel Keller quittait ses fonctions de DSI et acquérait l'intégralité des droits d'OpenSearchServer en décembre 2009. Infopro Communications devint logiquement le premier client de l'entreprise créée par Emmanuel en février 2010.. Après une analyse approfondie du marché, l'élaboration d'un ambitieux plan de développement, la signature de premiers contrats, un groupe d'investisseurs menés par Kima Ventures fournit un premier tour de financement en février 2011.. Depuis, la société a redoublé d'effort pour développer l'équipe, attirer de nouveaux clients et écrire l'histoire de cette nouvelle compagnie.. Adresse :. Paris Incubateurs - Technologies Numeriques. 15 Rue Jean-Baptiste Berlier. 75013 PARIS. France. contact@open-search-server.com. </value></field><field name="contentPhonetic"><value>Le projet OpenSearchServer est né en 2007 au sein d'Infopro Communications, un groupe d'information et de services professionnels français couvrant cinq secteurs clés de l'économie au travers de logiciels, bases de données, services en ligne, magazines, salons, formations, conférences.. Parce qu'il n'existait pas de solution de recherche offrant à la fois, des fonctionnalités complètes, un prix compétitif et une facilité d'utilisation, il a été décidé de créer en interne un logiciel répondant à ces critères en se basant sur les meilleurs composants open source. Ce nouveau logiciel devait offrir toutes les fonctionnalités d'une solution professionnelle d'Enterprise Search, apte à servir les besoins des applications internes. Ainsi naquit OpenSearchServer.. Ce projet fut initié et mené par Emmanuel Keller, alors DSI de la filiale GISI Interactive, en charge d'une équipe de 20 ingénieurs dont 3 dédiés au projet.. En 2008, une première application est créée, basé sur OpenSearchServer. Le succès de cette première application fut tel, qu'un an plus tard, OpenSearchServer était utilisé dans plus de dix applications.. La qualité du logiciel, l'efficacité des applications s'appuyant dessus, ont forgé la conviction qu'un plus grand nombre d'entreprises pourrait être intéressé par son utilisation. A l'issue d'une réflexion avec la direction du groupe Infopro Communications, un accord fut trouvé. Emmanuel Keller quittait ses fonctions de DSI et acquérait l'intégralité des droits d'OpenSearchServer en décembre 2009. Infopro Communications devint logiquement le premier client de l'entreprise créée par Emmanuel en février 2010.. Après une analyse approfondie du marché, l'élaboration d'un ambitieux plan de développement, la signature de premiers contrats, un groupe d'investisseurs menés par Kima Ventures fournit un premier tour de financement en février 2011.. Depuis, la société a redoublé d'effort pour développer l'équipe, attirer de nouveaux clients et écrire l'histoire de cette nouvelle compagnie.. Adresse :. Paris Incubateurs - Technologies Numeriques. 15 Rue Jean-Baptiste Berlier. 75013 PARIS. France. contact@open-search-server.com. </value></field><field name="timestamp"><value>20120318215426</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/telechargement</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/telechargement</value></field><field name="autocomplete"><value>Téléchargement</value></field><field name="title"><value>Téléchargement</value></field><field name="titleExact"><value>Téléchargement</value></field><field name="titlePhonetic"><value>Téléchargement</value></field><field name="content"><value> Community Edition. Nouvelle version finale candidate: v1.2.4-rc3. Pour Windows, Mac OS X: open-search-server-1.2.4-rc3.zip. Pour Linux, Solaris, BSD, Unix: open-search-server-1.2.4-rc3.tar.gz. CHANGELOG.txt. Tous les fichiers: JAVA, PHP and ASP.NET libraries. . Version actuelle stable et certifiée: v1.2.3. Pour Windows, Mac OS X: open-search-server-1.2.3.zip. Pour Linux, Solaris, BSD, Unix: open-search-server-1.2.3.tar.gz. CHANGELOG.txt. Tous les fichiers: JAVA, PHP and ASP.NET libraries. . Précédente version stable: v1.2.1. open-search-server-1.2.1.zip. open-search-server-1.2.1.tar.gz. CHANGELOG.txt. . . . Principes de versioning. Version finale candidate. C'est la dernière version en cours que nous mettons à disposition, elle est stabilisée et sera certifiée très prochainement. Cette version n'est plus sensée faire l'objet de corrections.. Version actuelle stable et certifiée. La stabilité est un jugement subjectif et nous vous conseillons toujours de lire attentivement le change log txt. Les versions stables peuvent contenir un petit nombre de bugs mineurs. La version stable est adaptée aux environnements de production qui réclament stabilité et qui vont fonctionner sur des longues périodes de temps.. Version Beta. La version Beta peut contenir des fonctionnalités non encore testées et/ou un certain nombre de bugs relativement  mineurs. Il se peut qu'une version Beta puisse être instable sur la durée.. Version Alpha. La version Alpha peut contenir un certain nombre de fonctionnalités non encore testées ou manquantes mais inscrites dans les spécifications et des bugs significatifs. On ne peut attendre d'une version Alpha aucune notion de stabilité dans la durée.. . . </value></field><field name="contentExact"><value> Community Edition. Nouvelle version finale candidate: v1.2.4-rc3. Pour Windows, Mac OS X: open-search-server-1.2.4-rc3.zip. Pour Linux, Solaris, BSD, Unix: open-search-server-1.2.4-rc3.tar.gz. CHANGELOG.txt. Tous les fichiers: JAVA, PHP and ASP.NET libraries. . Version actuelle stable et certifiée: v1.2.3. Pour Windows, Mac OS X: open-search-server-1.2.3.zip. Pour Linux, Solaris, BSD, Unix: open-search-server-1.2.3.tar.gz. CHANGELOG.txt. Tous les fichiers: JAVA, PHP and ASP.NET libraries. . Précédente version stable: v1.2.1. open-search-server-1.2.1.zip. open-search-server-1.2.1.tar.gz. CHANGELOG.txt. . . . Principes de versioning. Version finale candidate. C'est la dernière version en cours que nous mettons à disposition, elle est stabilisée et sera certifiée très prochainement. Cette version n'est plus sensée faire l'objet de corrections.. Version actuelle stable et certifiée. La stabilité est un jugement subjectif et nous vous conseillons toujours de lire attentivement le change log txt. Les versions stables peuvent contenir un petit nombre de bugs mineurs. La version stable est adaptée aux environnements de production qui réclament stabilité et qui vont fonctionner sur des longues périodes de temps.. Version Beta. La version Beta peut contenir des fonctionnalités non encore testées et/ou un certain nombre de bugs relativement  mineurs. Il se peut qu'une version Beta puisse être instable sur la durée.. Version Alpha. La version Alpha peut contenir un certain nombre de fonctionnalités non encore testées ou manquantes mais inscrites dans les spécifications et des bugs significatifs. On ne peut attendre d'une version Alpha aucune notion de stabilité dans la durée.. . . </value></field><field name="contentPhonetic"><value> Community Edition. Nouvelle version finale candidate: v1.2.4-rc3. Pour Windows, Mac OS X: open-search-server-1.2.4-rc3.zip. Pour Linux, Solaris, BSD, Unix: open-search-server-1.2.4-rc3.tar.gz. CHANGELOG.txt. Tous les fichiers: JAVA, PHP and ASP.NET libraries. . Version actuelle stable et certifiée: v1.2.3. Pour Windows, Mac OS X: open-search-server-1.2.3.zip. Pour Linux, Solaris, BSD, Unix: open-search-server-1.2.3.tar.gz. CHANGELOG.txt. Tous les fichiers: JAVA, PHP and ASP.NET libraries. . Précédente version stable: v1.2.1. open-search-server-1.2.1.zip. open-search-server-1.2.1.tar.gz. CHANGELOG.txt. . . . Principes de versioning. Version finale candidate. C'est la dernière version en cours que nous mettons à disposition, elle est stabilisée et sera certifiée très prochainement. Cette version n'est plus sensée faire l'objet de corrections.. Version actuelle stable et certifiée. La stabilité est un jugement subjectif et nous vous conseillons toujours de lire attentivement le change log txt. Les versions stables peuvent contenir un petit nombre de bugs mineurs. La version stable est adaptée aux environnements de production qui réclament stabilité et qui vont fonctionner sur des longues périodes de temps.. Version Beta. La version Beta peut contenir des fonctionnalités non encore testées et/ou un certain nombre de bugs relativement  mineurs. Il se peut qu'une version Beta puisse être instable sur la durée.. Version Alpha. La version Alpha peut contenir un certain nombre de fonctionnalités non encore testées ou manquantes mais inscrites dans les spécifications et des bugs significatifs. On ne peut attendre d'une version Alpha aucune notion de stabilité dans la durée.. . . </value></field><field name="timestamp"><value>20120318212321</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/services/assistance_consultative</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/services/assistance_consultative</value></field><field name="autocomplete"><value>Services spécifiques</value></field><field name="title"><value>Services spécifiques</value></field><field name="titleExact"><value>Services spécifiques</value></field><field name="titlePhonetic"><value>Services spécifiques</value></field><field name="content"><value>Notre équipe est à votre disposition pour vous aider à réaliser vos projets.. Pour avoir plus d'information sur nos services spécifiques, contactez nous. Vous pouvez également nous soumettre votre projet, envoyez nous sa description et nous vous ferons un retour.. . Intervention à distance. Installation, mises à jour,. Audit et paramétrage,. Diagnostic performances,. Supervision périodique,. Gestion des incidents. . . . Intégration. Définition de la stratégie d'indexation,. Modèle de données (schéma, indexation, ordonnancement),. Paramétrage des requêtes,. Intégration des résultats de recherche,. Gestion de la pertinence. . . . Performance / optimisation. Audit à distance,. Recommandations, bonnes pratiques,. Hébergement, infrastructure,. Recommandations matériel et système.  . . . Développement. Revue de code,. Bonnes pratiques,. Assistance au débuggage,. Implémentations alternatives,. Développement de fonctionnalités.. . . </value></field><field name="contentExact"><value>Notre équipe est à votre disposition pour vous aider à réaliser vos projets.. Pour avoir plus d'information sur nos services spécifiques, contactez nous. Vous pouvez également nous soumettre votre projet, envoyez nous sa description et nous vous ferons un retour.. . Intervention à distance. Installation, mises à jour,. Audit et paramétrage,. Diagnostic performances,. Supervision périodique,. Gestion des incidents. . . . Intégration. Définition de la stratégie d'indexation,. Modèle de données (schéma, indexation, ordonnancement),. Paramétrage des requêtes,. Intégration des résultats de recherche,. Gestion de la pertinence. . . . Performance / optimisation. Audit à distance,. Recommandations, bonnes pratiques,. Hébergement, infrastructure,. Recommandations matériel et système.  . . . Développement. Revue de code,. Bonnes pratiques,. Assistance au débuggage,. Implémentations alternatives,. Développement de fonctionnalités.. . . </value></field><field name="contentPhonetic"><value>Notre équipe est à votre disposition pour vous aider à réaliser vos projets.. Pour avoir plus d'information sur nos services spécifiques, contactez nous. Vous pouvez également nous soumettre votre projet, envoyez nous sa description et nous vous ferons un retour.. . Intervention à distance. Installation, mises à jour,. Audit et paramétrage,. Diagnostic performances,. Supervision périodique,. Gestion des incidents. . . . Intégration. Définition de la stratégie d'indexation,. Modèle de données (schéma, indexation, ordonnancement),. Paramétrage des requêtes,. Intégration des résultats de recherche,. Gestion de la pertinence. . . . Performance / optimisation. Audit à distance,. Recommandations, bonnes pratiques,. Hébergement, infrastructure,. Recommandations matériel et système.  . . . Développement. Revue de code,. Bonnes pratiques,. Assistance au débuggage,. Implémentations alternatives,. Développement de fonctionnalités.. . . </value></field><field name="timestamp"><value>20120318205507</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/services</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/services</value></field><field name="autocomplete"><value>Services</value></field><field name="title"><value>Services</value></field><field name="titleExact"><value>Services</value></field><field name="titlePhonetic"><value>Services</value></field><field name="content"><value>Nous fournissons des services et de support et d'assistance pour les intégrateurs et utilisateurs d'OpenSearchServer. Vous constaterez qu'OpenSearchServer est le meilleur choix grâce à l'équipe d'experts qui fournira support et aide pour vous permettre de délivrer vos projets en temps et en heure et avec le meilleur niveau de qualité. De sa planification jusqu'à sa mise en ligne, nous sommes à vos côtés pour garantir le succès de vos projets et l'atteinte de vos objectifs.. Personnalisation. Nous savons qu'il n'y a pas deux projets parfaitement identiques. Chaque projet bénéficie d'une approche personnalisée, adaptée aux spécificités et à l'environnement de l'entreprise. C'est pourquoi nous offrons une liste de services adaptés, voués à vous fournir ce dont vous avez besoin pour réussir des projets d'Enterprise Search dont vous serez fiers.. Le premier service que nous offrons est la documentation en ligne, elle s'attaque à présenter l'ensemble des fonctionnalités, interface et APIs d'OpenSearchServer. Vous pouvez également interroger nos forums dans lesquels vous trouverez de l'aide auprès de notre communauté d'utilisateurs et contributeurs.. Notre offre. Quelque soit vos besoins, nous sommes heureux de présenter notre offre de service spécifique, nous pouvons également, à votre demande, les adapter et vous fournir un service sur mesure.. Programmes de support. Services spécifiques. . </value></field><field name="contentExact"><value>Nous fournissons des services et de support et d'assistance pour les intégrateurs et utilisateurs d'OpenSearchServer. Vous constaterez qu'OpenSearchServer est le meilleur choix grâce à l'équipe d'experts qui fournira support et aide pour vous permettre de délivrer vos projets en temps et en heure et avec le meilleur niveau de qualité. De sa planification jusqu'à sa mise en ligne, nous sommes à vos côtés pour garantir le succès de vos projets et l'atteinte de vos objectifs.. Personnalisation. Nous savons qu'il n'y a pas deux projets parfaitement identiques. Chaque projet bénéficie d'une approche personnalisée, adaptée aux spécificités et à l'environnement de l'entreprise. C'est pourquoi nous offrons une liste de services adaptés, voués à vous fournir ce dont vous avez besoin pour réussir des projets d'Enterprise Search dont vous serez fiers.. Le premier service que nous offrons est la documentation en ligne, elle s'attaque à présenter l'ensemble des fonctionnalités, interface et APIs d'OpenSearchServer. Vous pouvez également interroger nos forums dans lesquels vous trouverez de l'aide auprès de notre communauté d'utilisateurs et contributeurs.. Notre offre. Quelque soit vos besoins, nous sommes heureux de présenter notre offre de service spécifique, nous pouvons également, à votre demande, les adapter et vous fournir un service sur mesure.. Programmes de support. Services spécifiques. . </value></field><field name="contentPhonetic"><value>Nous fournissons des services et de support et d'assistance pour les intégrateurs et utilisateurs d'OpenSearchServer. Vous constaterez qu'OpenSearchServer est le meilleur choix grâce à l'équipe d'experts qui fournira support et aide pour vous permettre de délivrer vos projets en temps et en heure et avec le meilleur niveau de qualité. De sa planification jusqu'à sa mise en ligne, nous sommes à vos côtés pour garantir le succès de vos projets et l'atteinte de vos objectifs.. Personnalisation. Nous savons qu'il n'y a pas deux projets parfaitement identiques. Chaque projet bénéficie d'une approche personnalisée, adaptée aux spécificités et à l'environnement de l'entreprise. C'est pourquoi nous offrons une liste de services adaptés, voués à vous fournir ce dont vous avez besoin pour réussir des projets d'Enterprise Search dont vous serez fiers.. Le premier service que nous offrons est la documentation en ligne, elle s'attaque à présenter l'ensemble des fonctionnalités, interface et APIs d'OpenSearchServer. Vous pouvez également interroger nos forums dans lesquels vous trouverez de l'aide auprès de notre communauté d'utilisateurs et contributeurs.. Notre offre. Quelque soit vos besoins, nous sommes heureux de présenter notre offre de service spécifique, nous pouvons également, à votre demande, les adapter et vous fournir un service sur mesure.. Programmes de support. Services spécifiques. . </value></field><field name="timestamp"><value>20120304133644</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/produits/community-edition</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/produits/community-edition</value></field><field name="autocomplete"><value>Community Edition</value></field><field name="title"><value>Community Edition</value></field><field name="titleExact"><value>Community Edition</value></field><field name="titlePhonetic"><value>Community Edition</value></field><field name="content"><value>OpenSearchServer est un logiciel de moteur de recherche embarquant un serveur d'application et un environnement de développement. Vous pouvez utiliser OpenSearchServer pour créer tout type d'application basée sur des index (Search-based application).. Généralités. Interface utilisateur accessible via tout navigateur compatible ajax (Internet Explorer, Firefox, Safari, Chrome, Opera,...).. Droits d'accès avec gestion des privilèges à l'interface et aux APIs,. Scallable et optimisé pour travailler sur des grands volumes de données,. Configurable par l'interface WEB ou par fichiers de configuration XML,. Ordonnanceur intégré pilotant la stratégie d'indexation.. . Fonctions de recherche. Fonctions avancées de recherche full-text. Recherche booléenne avancée avec langage de requêtes. Facettes avec possibilité de regrouper des résultats. Filtres basés sur des sous-requêtes (filtre négatif inclus). Personnalisation de la pertinence. Suggestion automatique (auto-completion)  . Full WebServices API (XML over HTTP). Plugin Wordpress et Drupal. Librairies clientes PHP et .NET. . Parsers. Les parsers reconnaissent les fichiers à indexer en se basant sur leur extension ou le type MIME, ils extraient automatiquement les informations nécessaires à l'indexation (titre, texte, auteur, liens hypertexte, etc.).. De nombreux formats sont supportés:. HTML / XHTML,. MS Office (Word, Excel, Powerpoint),. Documents OpenOffice,. Adobe PDF,. RTF, Plaintext,. Fichiers audios (WAV, MP3, AIFF, OGG/Vorbis). Torrent files. . . . Crawlers. Ce module prend en charge l'indexation des données. OpenSearchServer est équipé de plusieurs crawlers spécialisés qui permettent de parcourir et d'indexer différentes catégories de contenus:. Le crawler Web pour les sites Internet, extranet and intranet,. Les systèmes de fichiers locaux et distants (NFS, SMB/CIFS, FTP, FTPS),. L'indexation de base de données JDBC (MySQL, PostgreSQL, Oracle, SQL Server, ...).. . Chaque crawler est doté de paramètres permettant à l'intégrateur de personnaliser son comportement:. Liste d'inclusion et d'exclusion utilisant les caractères génériques (wildcards) ,. Suppression automatique des paramètres de session,. Support des jointures SQL et des pièces jointes,. Captures d'écran,. Import de sitemap,.... . Indexation. Plus de 16 langages supportés,. Définition du schéma d'indexation et des analyseurs par champs et pour chaque langue,. Outils semantiques: n-gram, lemmatisation multilingue, shingle, caractères accentués, …. Détection automatique de la langue,. Synonymes de mots et expressions,. Réplication d'index (haute disponibilité),. Export des vocabulaires de termes et leurs fréquences,. . Monitoring.  Le module assure le monitoring de votre instance OpenSearchServer de manière autonome ou en collaboration avec vos outils de monitoring.  Analyse de performance, contrôle des paramètres de mémoire et d'espace disque.. . . </value></field><field name="contentExact"><value>OpenSearchServer est un logiciel de moteur de recherche embarquant un serveur d'application et un environnement de développement. Vous pouvez utiliser OpenSearchServer pour créer tout type d'application basée sur des index (Search-based application).. Généralités. Interface utilisateur accessible via tout navigateur compatible ajax (Internet Explorer, Firefox, Safari, Chrome, Opera,...).. Droits d'accès avec gestion des privilèges à l'interface et aux APIs,. Scallable et optimisé pour travailler sur des grands volumes de données,. Configurable par l'interface WEB ou par fichiers de configuration XML,. Ordonnanceur intégré pilotant la stratégie d'indexation.. . Fonctions de recherche. Fonctions avancées de recherche full-text. Recherche booléenne avancée avec langage de requêtes. Facettes avec possibilité de regrouper des résultats. Filtres basés sur des sous-requêtes (filtre négatif inclus). Personnalisation de la pertinence. Suggestion automatique (auto-completion)  . Full WebServices API (XML over HTTP). Plugin Wordpress et Drupal. Librairies clientes PHP et .NET. . Parsers. Les parsers reconnaissent les fichiers à indexer en se basant sur leur extension ou le type MIME, ils extraient automatiquement les informations nécessaires à l'indexation (titre, texte, auteur, liens hypertexte, etc.).. De nombreux formats sont supportés:. HTML / XHTML,. MS Office (Word, Excel, Powerpoint),. Documents OpenOffice,. Adobe PDF,. RTF, Plaintext,. Fichiers audios (WAV, MP3, AIFF, OGG/Vorbis). Torrent files. . . . Crawlers. Ce module prend en charge l'indexation des données. OpenSearchServer est équipé de plusieurs crawlers spécialisés qui permettent de parcourir et d'indexer différentes catégories de contenus:. Le crawler Web pour les sites Internet, extranet and intranet,. Les systèmes de fichiers locaux et distants (NFS, SMB/CIFS, FTP, FTPS),. L'indexation de base de données JDBC (MySQL, PostgreSQL, Oracle, SQL Server, ...).. . Chaque crawler est doté de paramètres permettant à l'intégrateur de personnaliser son comportement:. Liste d'inclusion et d'exclusion utilisant les caractères génériques (wildcards) ,. Suppression automatique des paramètres de session,. Support des jointures SQL et des pièces jointes,. Captures d'écran,. Import de sitemap,.... . Indexation. Plus de 16 langages supportés,. Définition du schéma d'indexation et des analyseurs par champs et pour chaque langue,. Outils semantiques: n-gram, lemmatisation multilingue, shingle, caractères accentués, …. Détection automatique de la langue,. Synonymes de mots et expressions,. Réplication d'index (haute disponibilité),. Export des vocabulaires de termes et leurs fréquences,. . Monitoring.  Le module assure le monitoring de votre instance OpenSearchServer de manière autonome ou en collaboration avec vos outils de monitoring.  Analyse de performance, contrôle des paramètres de mémoire et d'espace disque.. . . </value></field><field name="contentPhonetic"><value>OpenSearchServer est un logiciel de moteur de recherche embarquant un serveur d'application et un environnement de développement. Vous pouvez utiliser OpenSearchServer pour créer tout type d'application basée sur des index (Search-based application).. Généralités. Interface utilisateur accessible via tout navigateur compatible ajax (Internet Explorer, Firefox, Safari, Chrome, Opera,...).. Droits d'accès avec gestion des privilèges à l'interface et aux APIs,. Scallable et optimisé pour travailler sur des grands volumes de données,. Configurable par l'interface WEB ou par fichiers de configuration XML,. Ordonnanceur intégré pilotant la stratégie d'indexation.. . Fonctions de recherche. Fonctions avancées de recherche full-text. Recherche booléenne avancée avec langage de requêtes. Facettes avec possibilité de regrouper des résultats. Filtres basés sur des sous-requêtes (filtre négatif inclus). Personnalisation de la pertinence. Suggestion automatique (auto-completion)  . Full WebServices API (XML over HTTP). Plugin Wordpress et Drupal. Librairies clientes PHP et .NET. . Parsers. Les parsers reconnaissent les fichiers à indexer en se basant sur leur extension ou le type MIME, ils extraient automatiquement les informations nécessaires à l'indexation (titre, texte, auteur, liens hypertexte, etc.).. De nombreux formats sont supportés:. HTML / XHTML,. MS Office (Word, Excel, Powerpoint),. Documents OpenOffice,. Adobe PDF,. RTF, Plaintext,. Fichiers audios (WAV, MP3, AIFF, OGG/Vorbis). Torrent files. . . . Crawlers. Ce module prend en charge l'indexation des données. OpenSearchServer est équipé de plusieurs crawlers spécialisés qui permettent de parcourir et d'indexer différentes catégories de contenus:. Le crawler Web pour les sites Internet, extranet and intranet,. Les systèmes de fichiers locaux et distants (NFS, SMB/CIFS, FTP, FTPS),. L'indexation de base de données JDBC (MySQL, PostgreSQL, Oracle, SQL Server, ...).. . Chaque crawler est doté de paramètres permettant à l'intégrateur de personnaliser son comportement:. Liste d'inclusion et d'exclusion utilisant les caractères génériques (wildcards) ,. Suppression automatique des paramètres de session,. Support des jointures SQL et des pièces jointes,. Captures d'écran,. Import de sitemap,.... . Indexation. Plus de 16 langages supportés,. Définition du schéma d'indexation et des analyseurs par champs et pour chaque langue,. Outils semantiques: n-gram, lemmatisation multilingue, shingle, caractères accentués, …. Détection automatique de la langue,. Synonymes de mots et expressions,. Réplication d'index (haute disponibilité),. Export des vocabulaires de termes et leurs fréquences,. . Monitoring.  Le module assure le monitoring de votre instance OpenSearchServer de manière autonome ou en collaboration avec vos outils de monitoring.  Analyse de performance, contrôle des paramètres de mémoire et d'espace disque.. . . </value></field><field name="timestamp"><value>20120304112534</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/produits/opensearchserver</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/produits/opensearchserver</value></field><field name="autocomplete"><value>OpenSearchServer</value></field><field name="title"><value>OpenSearchServer</value></field><field name="titleExact"><value>OpenSearchServer</value></field><field name="titlePhonetic"><value>OpenSearchServer</value></field><field name="content"><value>OpenSearchServer est la solution idéale, pas seulement pour les spécialistes de la recherche full-text, mais aussi pour les intégrateurs et développeurs qui n'ont pas encore mis en oeuvre ces technologies, car elle permet d'y accéder facilement. Construit autour d'une interface intuitive basée sur des onglets, quelque soit la complexité de l'application que vous êtes en train de créer, il suffit de parcourir les composants de l'interface et de renseigner les paramètres, sans écrire une seule ligne de code. Concentrez vous sur la configuration de vos données, la politique d'indexation, le paramétrage des requêtes.. OpenSearchServer est un logiciel de moteur de recherche embarquant un serveur d'application et un environnement de développement. Vous pouvez utiliser OpenSearchServer pour créer tout type d'application basée sur des index (Search-based application). Les crawlers inclus vous permettent d'indexer tout type de contenus, site Internet, document, base de données.. Vous aurez un accès complet à l'ensemble des composants d'un moteur de recherche. Plutôt que de devoir accepter des paramètres et options fixés par nous, vous avez la liberté de modifier et personnaliser tous les paramètres pour répondre parfaitement aux besoins de votre application. OpenSearchServer n'est pas une boite noire.... OpenSearchServer vous permet de créer n'importe quelle application basée sur des index: Recherche Web (internet, intranet, extranet),  recherche de documents (locaux ou sur système de fichiers distant), recherche embarquée. OpenSearchServer a été développé de telle manière que vous pourrez faire cela le plus facilement possible.. Disponible pour les développeurs en tant que logiciel Open Source sur Sourceforge depuis avril 2009, OpenSearchServer est le premier de sa catégorie à offrir une palette de fonctions aussi complète, apte à fournir des résultats de niveau professionnel.. . . . .  . Les crawlers vous permettent d'indexer des pages Web, des fichiers locaux ou sur des systèmes de fichier distants, des contenus de base de données JDBC, comme PostgreSQL, Oracle, MySql, Microsoft SQL Server et d'autres,. Le schéma et ses analyseurs full-text permettent d'optimiser l'indexation et les recherches dans plus de 16 langues,. Le moteur créé et met à jour les documents dans l'index, il répond aux requêtes des utilisateurs en utilisant les meilleurs algorithmes pour un maximum de performance et des temps de réponse rapides,. L'intégration est aisée quelque soit l'environnement, Iframe, Javascript, en utilisant les librairies clientes en PHP et .NET, les Web services XML/HTTP ou SOAP, ou les plugins de CMS (Wordpress, Drupal,...).. . . . Les parsers extraient les données indexables des contenus et metadata des principaux formats de fichiers comme MS Office, OpenOffice, HTML/XHTML, Adobe PDF, RTF, TXT, MP3/4, WAV, torrents et autres,. Le module de monitoring notifie l'administrateur de l'état de l'index, en contrôlant notamment la disponibilité des ressources système et matériels (espace disque, mémoire,...),. Un ordonnanceur intégré permet de mettre en oeuvre des stratégies d'indexation simple ou complexe, et de les lancer automatiquement,. Une documentation en ligne fournit toute l'aide nécessaire pour apprendre à utiliser les fonctionnalités et créer vos applications,. Des fonctionnalités avancées: facettes, regroupements, filtres, snippets, synonymes, stopwords, catégorisation, documents similaires, captures d'écran,... . . . . Pré-requis minimum pour OpenSearchServer:. Linux, Solaris, MacOS, Windows 2000/XP/Vista/7 et/ou server editions, 32 or 64 bits. Java Virtual Machine version 5 or 6. 512Mo de mémoire. . . </value></field><field name="contentExact"><value>OpenSearchServer est la solution idéale, pas seulement pour les spécialistes de la recherche full-text, mais aussi pour les intégrateurs et développeurs qui n'ont pas encore mis en oeuvre ces technologies, car elle permet d'y accéder facilement. Construit autour d'une interface intuitive basée sur des onglets, quelque soit la complexité de l'application que vous êtes en train de créer, il suffit de parcourir les composants de l'interface et de renseigner les paramètres, sans écrire une seule ligne de code. Concentrez vous sur la configuration de vos données, la politique d'indexation, le paramétrage des requêtes.. OpenSearchServer est un logiciel de moteur de recherche embarquant un serveur d'application et un environnement de développement. Vous pouvez utiliser OpenSearchServer pour créer tout type d'application basée sur des index (Search-based application). Les crawlers inclus vous permettent d'indexer tout type de contenus, site Internet, document, base de données.. Vous aurez un accès complet à l'ensemble des composants d'un moteur de recherche. Plutôt que de devoir accepter des paramètres et options fixés par nous, vous avez la liberté de modifier et personnaliser tous les paramètres pour répondre parfaitement aux besoins de votre application. OpenSearchServer n'est pas une boite noire.... OpenSearchServer vous permet de créer n'importe quelle application basée sur des index: Recherche Web (internet, intranet, extranet),  recherche de documents (locaux ou sur système de fichiers distant), recherche embarquée. OpenSearchServer a été développé de telle manière que vous pourrez faire cela le plus facilement possible.. Disponible pour les développeurs en tant que logiciel Open Source sur Sourceforge depuis avril 2009, OpenSearchServer est le premier de sa catégorie à offrir une palette de fonctions aussi complète, apte à fournir des résultats de niveau professionnel.. . . . .  . Les crawlers vous permettent d'indexer des pages Web, des fichiers locaux ou sur des systèmes de fichier distants, des contenus de base de données JDBC, comme PostgreSQL, Oracle, MySql, Microsoft SQL Server et d'autres,. Le schéma et ses analyseurs full-text permettent d'optimiser l'indexation et les recherches dans plus de 16 langues,. Le moteur créé et met à jour les documents dans l'index, il répond aux requêtes des utilisateurs en utilisant les meilleurs algorithmes pour un maximum de performance et des temps de réponse rapides,. L'intégration est aisée quelque soit l'environnement, Iframe, Javascript, en utilisant les librairies clientes en PHP et .NET, les Web services XML/HTTP ou SOAP, ou les plugins de CMS (Wordpress, Drupal,...).. . . . Les parsers extraient les données indexables des contenus et metadata des principaux formats de fichiers comme MS Office, OpenOffice, HTML/XHTML, Adobe PDF, RTF, TXT, MP3/4, WAV, torrents et autres,. Le module de monitoring notifie l'administrateur de l'état de l'index, en contrôlant notamment la disponibilité des ressources système et matériels (espace disque, mémoire,...),. Un ordonnanceur intégré permet de mettre en oeuvre des stratégies d'indexation simple ou complexe, et de les lancer automatiquement,. Une documentation en ligne fournit toute l'aide nécessaire pour apprendre à utiliser les fonctionnalités et créer vos applications,. Des fonctionnalités avancées: facettes, regroupements, filtres, snippets, synonymes, stopwords, catégorisation, documents similaires, captures d'écran,... . . . . Pré-requis minimum pour OpenSearchServer:. Linux, Solaris, MacOS, Windows 2000/XP/Vista/7 et/ou server editions, 32 or 64 bits. Java Virtual Machine version 5 or 6. 512Mo de mémoire. . . </value></field><field name="contentPhonetic"><value>OpenSearchServer est la solution idéale, pas seulement pour les spécialistes de la recherche full-text, mais aussi pour les intégrateurs et développeurs qui n'ont pas encore mis en oeuvre ces technologies, car elle permet d'y accéder facilement. Construit autour d'une interface intuitive basée sur des onglets, quelque soit la complexité de l'application que vous êtes en train de créer, il suffit de parcourir les composants de l'interface et de renseigner les paramètres, sans écrire une seule ligne de code. Concentrez vous sur la configuration de vos données, la politique d'indexation, le paramétrage des requêtes.. OpenSearchServer est un logiciel de moteur de recherche embarquant un serveur d'application et un environnement de développement. Vous pouvez utiliser OpenSearchServer pour créer tout type d'application basée sur des index (Search-based application). Les crawlers inclus vous permettent d'indexer tout type de contenus, site Internet, document, base de données.. Vous aurez un accès complet à l'ensemble des composants d'un moteur de recherche. Plutôt que de devoir accepter des paramètres et options fixés par nous, vous avez la liberté de modifier et personnaliser tous les paramètres pour répondre parfaitement aux besoins de votre application. OpenSearchServer n'est pas une boite noire.... OpenSearchServer vous permet de créer n'importe quelle application basée sur des index: Recherche Web (internet, intranet, extranet),  recherche de documents (locaux ou sur système de fichiers distant), recherche embarquée. OpenSearchServer a été développé de telle manière que vous pourrez faire cela le plus facilement possible.. Disponible pour les développeurs en tant que logiciel Open Source sur Sourceforge depuis avril 2009, OpenSearchServer est le premier de sa catégorie à offrir une palette de fonctions aussi complète, apte à fournir des résultats de niveau professionnel.. . . . .  . Les crawlers vous permettent d'indexer des pages Web, des fichiers locaux ou sur des systèmes de fichier distants, des contenus de base de données JDBC, comme PostgreSQL, Oracle, MySql, Microsoft SQL Server et d'autres,. Le schéma et ses analyseurs full-text permettent d'optimiser l'indexation et les recherches dans plus de 16 langues,. Le moteur créé et met à jour les documents dans l'index, il répond aux requêtes des utilisateurs en utilisant les meilleurs algorithmes pour un maximum de performance et des temps de réponse rapides,. L'intégration est aisée quelque soit l'environnement, Iframe, Javascript, en utilisant les librairies clientes en PHP et .NET, les Web services XML/HTTP ou SOAP, ou les plugins de CMS (Wordpress, Drupal,...).. . . . Les parsers extraient les données indexables des contenus et metadata des principaux formats de fichiers comme MS Office, OpenOffice, HTML/XHTML, Adobe PDF, RTF, TXT, MP3/4, WAV, torrents et autres,. Le module de monitoring notifie l'administrateur de l'état de l'index, en contrôlant notamment la disponibilité des ressources système et matériels (espace disque, mémoire,...),. Un ordonnanceur intégré permet de mettre en oeuvre des stratégies d'indexation simple ou complexe, et de les lancer automatiquement,. Une documentation en ligne fournit toute l'aide nécessaire pour apprendre à utiliser les fonctionnalités et créer vos applications,. Des fonctionnalités avancées: facettes, regroupements, filtres, snippets, synonymes, stopwords, catégorisation, documents similaires, captures d'écran,... . . . . Pré-requis minimum pour OpenSearchServer:. Linux, Solaris, MacOS, Windows 2000/XP/Vista/7 et/ou server editions, 32 or 64 bits. Java Virtual Machine version 5 or 6. 512Mo de mémoire. . . </value></field><field name="timestamp"><value>20120304100918</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/communaute</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/communaute</value></field><field name="autocomplete"><value>Contribuer</value></field><field name="title"><value>Contribuer</value></field><field name="titleExact"><value>Contribuer</value></field><field name="titlePhonetic"><value>Contribuer</value></field><field name="content"><value>OpenSearchServer est disponible en tant que projet indépendant sur la plateforme Sourceforge depuis avril 2009, proposé sous licence GNU/GPL.. Nous avons à coeur de satisfaire les demandes et besoins, de fournir les dernières informations relatives au projet OpenSearchServer. Nous sommes très fiers de voir la communauté grandir jour après jour. Vos retours sont les bienvenus, ceux-ci sont très régulièrement à l'origine d'amélioration de notre produit ou de nouvelles fonctions. Cela fait parti des atouts des projets Open Source, nous vous remercions pour la qualité de votre participation.. Nous continuons à produire tous nos efforts pour rendre toujours plus accessible l'accès à notre technologie, nous avons pour cela développé une nouvelle documentation en ligne. Nous proposons également une newsletter intégrant toujours plus d'informations et comment tirer le maximum des fonctions avancées de notre solution.. Si vous êtes intégrateur, développeur, chercheur, étudiant, décisionnaire, rejoignez-nous aujourd'hui et devenez acteur d'une communauté en plein essor.. Exprimez vos besoins, partageons nos expériences.. Documentation. Dans la documentation vous trouverez des tutoriels, des guides d'installation et des manuels de référence.. Le wiki est la source principale d'information. Il contient des contributions de la communauté d'utilisateur et des développeurs.. . Nos forums. Sollicitez l'aide de la communauté dans le forum d'aide. La réponse que vous attendez y est peut-être déjà.. Participez au bouillonnement d'Open Search Server en ouvrant de nouveaux sujets de discussion.. Voir l'ensemble de nos forums. . . . Evolutions et bugs. Le système de suivi vous permet de signaler tout dysfonctionnement, de proposer de nouvelles fonctionnalités, et de suivre l'évolution de vos demandes.. Reporter un dysfonctionnement. Proposer une nouvelle fonctionnalité. . Code source. L'accès au code source se fait via Subversion. Suivez les instructions de SourceForge pour l'accès au code source. . </value></field><field name="contentExact"><value>OpenSearchServer est disponible en tant que projet indépendant sur la plateforme Sourceforge depuis avril 2009, proposé sous licence GNU/GPL.. Nous avons à coeur de satisfaire les demandes et besoins, de fournir les dernières informations relatives au projet OpenSearchServer. Nous sommes très fiers de voir la communauté grandir jour après jour. Vos retours sont les bienvenus, ceux-ci sont très régulièrement à l'origine d'amélioration de notre produit ou de nouvelles fonctions. Cela fait parti des atouts des projets Open Source, nous vous remercions pour la qualité de votre participation.. Nous continuons à produire tous nos efforts pour rendre toujours plus accessible l'accès à notre technologie, nous avons pour cela développé une nouvelle documentation en ligne. Nous proposons également une newsletter intégrant toujours plus d'informations et comment tirer le maximum des fonctions avancées de notre solution.. Si vous êtes intégrateur, développeur, chercheur, étudiant, décisionnaire, rejoignez-nous aujourd'hui et devenez acteur d'une communauté en plein essor.. Exprimez vos besoins, partageons nos expériences.. Documentation. Dans la documentation vous trouverez des tutoriels, des guides d'installation et des manuels de référence.. Le wiki est la source principale d'information. Il contient des contributions de la communauté d'utilisateur et des développeurs.. . Nos forums. Sollicitez l'aide de la communauté dans le forum d'aide. La réponse que vous attendez y est peut-être déjà.. Participez au bouillonnement d'Open Search Server en ouvrant de nouveaux sujets de discussion.. Voir l'ensemble de nos forums. . . . Evolutions et bugs. Le système de suivi vous permet de signaler tout dysfonctionnement, de proposer de nouvelles fonctionnalités, et de suivre l'évolution de vos demandes.. Reporter un dysfonctionnement. Proposer une nouvelle fonctionnalité. . Code source. L'accès au code source se fait via Subversion. Suivez les instructions de SourceForge pour l'accès au code source. . </value></field><field name="contentPhonetic"><value>OpenSearchServer est disponible en tant que projet indépendant sur la plateforme Sourceforge depuis avril 2009, proposé sous licence GNU/GPL.. Nous avons à coeur de satisfaire les demandes et besoins, de fournir les dernières informations relatives au projet OpenSearchServer. Nous sommes très fiers de voir la communauté grandir jour après jour. Vos retours sont les bienvenus, ceux-ci sont très régulièrement à l'origine d'amélioration de notre produit ou de nouvelles fonctions. Cela fait parti des atouts des projets Open Source, nous vous remercions pour la qualité de votre participation.. Nous continuons à produire tous nos efforts pour rendre toujours plus accessible l'accès à notre technologie, nous avons pour cela développé une nouvelle documentation en ligne. Nous proposons également une newsletter intégrant toujours plus d'informations et comment tirer le maximum des fonctions avancées de notre solution.. Si vous êtes intégrateur, développeur, chercheur, étudiant, décisionnaire, rejoignez-nous aujourd'hui et devenez acteur d'une communauté en plein essor.. Exprimez vos besoins, partageons nos expériences.. Documentation. Dans la documentation vous trouverez des tutoriels, des guides d'installation et des manuels de référence.. Le wiki est la source principale d'information. Il contient des contributions de la communauté d'utilisateur et des développeurs.. . Nos forums. Sollicitez l'aide de la communauté dans le forum d'aide. La réponse que vous attendez y est peut-être déjà.. Participez au bouillonnement d'Open Search Server en ouvrant de nouveaux sujets de discussion.. Voir l'ensemble de nos forums. . . . Evolutions et bugs. Le système de suivi vous permet de signaler tout dysfonctionnement, de proposer de nouvelles fonctionnalités, et de suivre l'évolution de vos demandes.. Reporter un dysfonctionnement. Proposer une nouvelle fonctionnalité. . Code source. L'accès au code source se fait via Subversion. Suivez les instructions de SourceForge pour l'accès au code source. . </value></field><field name="timestamp"><value>20120303221620</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/saas_services</value></field><field name="urlExact"><value>http://dev.open-search-server.com/saas_services</value></field><field name="autocomplete"><value>SaaS services</value></field><field name="title"><value>SaaS services</value></field><field name="titleExact"><value>SaaS services</value></field><field name="titlePhonetic"><value>SaaS services</value></field><field name="content"><value>Our Saas offer is an OpenSearchServer instance rental based on our own Cloud infrastructure.. With this offer, you get access in several minutes to a fully and operational OpenSearchServer solution with its user interface and its APIs. OpenSearchServer Cloud infrastructure is monitored on 24X7, 365 days per year, in order to guarantee you with high optimized availability.. Plans. DISCOVER. . EVOLUTION. . ADVANCED. . PROFESSIONAL. . ENTERPRISE. . . Total number. of documents . 1,000. 10,000. . 100,000. . 1 million. . 10 millions. . . Index number . 5. 10. . 100. . Unlimited. . Unlimited. . . Storage. 500 MB. . 2 GB. . 5 GB. . 20 GB. . 50 GB. . . API requests. per month. 10,000. . 50,000. . 250,000. . 500,000. . Unlimited. . . API performance. requests per second. 100. . 500. . 1,000. . Unlimited. . Unlimited. . .  . 14 days free trial. . Price per month . (ex. VAT). No commitment (1) . € 9.90 (2). per month . . . € 19.90 (2). per month . . . € 39.90 (2). per month . . . € 79.90 (2). per month . . . € 149.00 (2). per month . . . . . . (1) No commitment: You pay on a monthly basis. Quit whenever you like, no advance notice.. (2) Every order implies the acceptance without reserve of the General terms and conditions.. Our team remains available to answer your questions. Use our contact form or send us an email at contact@open-search-server.com.. </value></field><field name="contentExact"><value>Our Saas offer is an OpenSearchServer instance rental based on our own Cloud infrastructure.. With this offer, you get access in several minutes to a fully and operational OpenSearchServer solution with its user interface and its APIs. OpenSearchServer Cloud infrastructure is monitored on 24X7, 365 days per year, in order to guarantee you with high optimized availability.. Plans. DISCOVER. . EVOLUTION. . ADVANCED. . PROFESSIONAL. . ENTERPRISE. . . Total number. of documents . 1,000. 10,000. . 100,000. . 1 million. . 10 millions. . . Index number . 5. 10. . 100. . Unlimited. . Unlimited. . . Storage. 500 MB. . 2 GB. . 5 GB. . 20 GB. . 50 GB. . . API requests. per month. 10,000. . 50,000. . 250,000. . 500,000. . Unlimited. . . API performance. requests per second. 100. . 500. . 1,000. . Unlimited. . Unlimited. . .  . 14 days free trial. . Price per month . (ex. VAT). No commitment (1) . € 9.90 (2). per month . . . € 19.90 (2). per month . . . € 39.90 (2). per month . . . € 79.90 (2). per month . . . € 149.00 (2). per month . . . . . . (1) No commitment: You pay on a monthly basis. Quit whenever you like, no advance notice.. (2) Every order implies the acceptance without reserve of the General terms and conditions.. Our team remains available to answer your questions. Use our contact form or send us an email at contact@open-search-server.com.. </value></field><field name="contentPhonetic"><value>Our Saas offer is an OpenSearchServer instance rental based on our own Cloud infrastructure.. With this offer, you get access in several minutes to a fully and operational OpenSearchServer solution with its user interface and its APIs. OpenSearchServer Cloud infrastructure is monitored on 24X7, 365 days per year, in order to guarantee you with high optimized availability.. Plans. DISCOVER. . EVOLUTION. . ADVANCED. . PROFESSIONAL. . ENTERPRISE. . . Total number. of documents . 1,000. 10,000. . 100,000. . 1 million. . 10 millions. . . Index number . 5. 10. . 100. . Unlimited. . Unlimited. . . Storage. 500 MB. . 2 GB. . 5 GB. . 20 GB. . 50 GB. . . API requests. per month. 10,000. . 50,000. . 250,000. . 500,000. . Unlimited. . . API performance. requests per second. 100. . 500. . 1,000. . Unlimited. . Unlimited. . .  . 14 days free trial. . Price per month . (ex. VAT). No commitment (1) . € 9.90 (2). per month . . . € 19.90 (2). per month . . . € 39.90 (2). per month . . . € 79.90 (2). per month . . . € 149.00 (2). per month . . . . . . (1) No commitment: You pay on a monthly basis. Quit whenever you like, no advance notice.. (2) Every order implies the acceptance without reserve of the General terms and conditions.. Our team remains available to answer your questions. Use our contact form or send us an email at contact@open-search-server.com.. </value></field><field name="timestamp"><value>20120102141122</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/services/services_de_support</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/services/services_de_support</value></field><field name="autocomplete"><value>Programmes de support</value></field><field name="title"><value>Programmes de support</value></field><field name="titleExact"><value>Programmes de support</value></field><field name="titlePhonetic"><value>Programmes de support</value></field><field name="content"><value>La communauté des utilisateurs d'OpenSearchServer est très importante à nos yeux car elle nous aide à mieux comprendre les besoins et attentes. Pour cette raison, nos programmes de support ont des niveaux de services en commun et sont également accessibles aux utilisateurs de la version open source.. Nos prestations de support. . Community Edition. Support Plan . . Enterprise Edition. Support Plan . . . Ouverture d'incident. (par email ou . par l'interface web) . Illimité. Illimité. . Temps de réponse . maximal . 1 jour ouvré . 4 heures . . Correction de bug. Priorité. Haute priorité. . Monitoring actif &amp; alertes. Oui. Oui. . Intervention à distance. Non. Oui. . Par mois . . 99 € . . 369 € . . . Par an . . 790 € . . 2990 € . . . . . . . Caractéristiques communes à toutes les offres de support:. Accès aux outils open source,. Accès illimité à la documentation,. Accès à l'interface web de gestion des incidents,. Soumission de tickets 24 x 7 x 365,. Accès aux mises à jour,. . . . </value></field><field name="contentExact"><value>La communauté des utilisateurs d'OpenSearchServer est très importante à nos yeux car elle nous aide à mieux comprendre les besoins et attentes. Pour cette raison, nos programmes de support ont des niveaux de services en commun et sont également accessibles aux utilisateurs de la version open source.. Nos prestations de support. . Community Edition. Support Plan . . Enterprise Edition. Support Plan . . . Ouverture d'incident. (par email ou . par l'interface web) . Illimité. Illimité. . Temps de réponse . maximal . 1 jour ouvré . 4 heures . . Correction de bug. Priorité. Haute priorité. . Monitoring actif &amp; alertes. Oui. Oui. . Intervention à distance. Non. Oui. . Par mois . . 99 € . . 369 € . . . Par an . . 790 € . . 2990 € . . . . . . . Caractéristiques communes à toutes les offres de support:. Accès aux outils open source,. Accès illimité à la documentation,. Accès à l'interface web de gestion des incidents,. Soumission de tickets 24 x 7 x 365,. Accès aux mises à jour,. . . . </value></field><field name="contentPhonetic"><value>La communauté des utilisateurs d'OpenSearchServer est très importante à nos yeux car elle nous aide à mieux comprendre les besoins et attentes. Pour cette raison, nos programmes de support ont des niveaux de services en commun et sont également accessibles aux utilisateurs de la version open source.. Nos prestations de support. . Community Edition. Support Plan . . Enterprise Edition. Support Plan . . . Ouverture d'incident. (par email ou . par l'interface web) . Illimité. Illimité. . Temps de réponse . maximal . 1 jour ouvré . 4 heures . . Correction de bug. Priorité. Haute priorité. . Monitoring actif &amp; alertes. Oui. Oui. . Intervention à distance. Non. Oui. . Par mois . . 99 € . . 369 € . . . Par an . . 790 € . . 2990 € . . . . . . . Caractéristiques communes à toutes les offres de support:. Accès aux outils open source,. Accès illimité à la documentation,. Accès à l'interface web de gestion des incidents,. Soumission de tickets 24 x 7 x 365,. Accès aux mises à jour,. . . . </value></field><field name="timestamp"><value>20120318200522</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/1771</value></field><field name="urlExact"><value>http://dev.open-search-server.com/1771</value></field><field name="autocomplete"><value>Service Plans</value></field><field name="title"><value>Service Plans</value></field><field name="titleExact"><value>Service Plans</value></field><field name="titlePhonetic"><value>Service Plans</value></field><field name="content"><value>All OpenSearchServer developpers are important to us and they all help us to understand needs and expectations better. For that reason, our support programs have some common levels of service that are listed below and available to everybody even to free users.. Our Support plans. . Community. Support Plan. Enterprise. Support Plan. . E-mail support. Web tickets. Unlimited. Unlimited. . Maximum response time. 1 working day. 4 hours. . Active Monitoring &amp; Alerting tool. Yes. Yes. . Remote maintenance. No. Yes. . Price (ex. VAT). per year,per server . 790 € . Buy now . Get 30 days free . . 2 990 € . Buy now .   . . . . . . . Common features to all support plans. Access to Community tools,. Unlimited access to online documentation,. Access to web-based ticket management tool,. Web Ticket submission 24 x 7 x 365,. Full Upgrade Provisions,. Upgrade Information and directions,. . . . </value></field><field name="contentExact"><value>All OpenSearchServer developpers are important to us and they all help us to understand needs and expectations better. For that reason, our support programs have some common levels of service that are listed below and available to everybody even to free users.. Our Support plans. . Community. Support Plan. Enterprise. Support Plan. . E-mail support. Web tickets. Unlimited. Unlimited. . Maximum response time. 1 working day. 4 hours. . Active Monitoring &amp; Alerting tool. Yes. Yes. . Remote maintenance. No. Yes. . Price (ex. VAT). per year,per server . 790 € . Buy now . Get 30 days free . . 2 990 € . Buy now .   . . . . . . . Common features to all support plans. Access to Community tools,. Unlimited access to online documentation,. Access to web-based ticket management tool,. Web Ticket submission 24 x 7 x 365,. Full Upgrade Provisions,. Upgrade Information and directions,. . . . </value></field><field name="contentPhonetic"><value>All OpenSearchServer developpers are important to us and they all help us to understand needs and expectations better. For that reason, our support programs have some common levels of service that are listed below and available to everybody even to free users.. Our Support plans. . Community. Support Plan. Enterprise. Support Plan. . E-mail support. Web tickets. Unlimited. Unlimited. . Maximum response time. 1 working day. 4 hours. . Active Monitoring &amp; Alerting tool. Yes. Yes. . Remote maintenance. No. Yes. . Price (ex. VAT). per year,per server . 790 € . Buy now . Get 30 days free . . 2 990 € . Buy now .   . . . . . . . Common features to all support plans. Access to Community tools,. Unlimited access to online documentation,. Access to web-based ticket management tool,. Web Ticket submission 24 x 7 x 365,. Full Upgrade Provisions,. Upgrade Information and directions,. . . . </value></field><field name="timestamp"><value>20111208175539</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/conditions_generales_de_ventes</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/conditions_generales_de_ventes</value></field><field name="autocomplete"><value>Conditions générales de ventes</value></field><field name="title"><value>Conditions générales de ventes</value></field><field name="titleExact"><value>Conditions générales de ventes</value></field><field name="titlePhonetic"><value>Conditions générales de ventes</value></field><field name="content"><value>Conditions Générales de Ventes. Programmes de Service OpenSearchServer . Community Edition. Version 2, du 1er Décembre 2011.  . Jaeksoft SàRL, une société française au capital de 200 000 € dont le siège social est situé 89 Rue de Meaux, 93410, Vaujours, France, immatriculée au registre de commerce et des sociétés de Bobigny  sous le numéro 520 295 551, TVA n° FR10520295551, (ci après appelée “JaekSoft”, “nous”, "nos" ou “notre”).. JaekSoft fournit des Services aux Clients comme défini ci-dessous, dans les conditions définies dans ces Conditions Générales  et comme présenté à l'adresse http://www.open-search-server.com/services. .  . Le Client de nos services, (ci-après appelé "le Client"), reconnait que la souscription ou l'usage des Services de JaekSoft implique l'acceptation complète, sans réserve ni restriction  de ces Conditions Générales et les conditions spéciales qui s'appliqueraient pour l'usage de services ou ressources accessoires, dans les limites techniques de nos Services et Logiciels comme décrit sur notre site http://www.open‐search‐server.com..  .  . 1.  Définitions . A. "OpenSearchServer" ou "le Logiciel" est OpenSearchServer Community Edition, un logiciel dont les caractéristiques et fonctionnalités principales sont décrites dans les différentes sections du site http://www.open-search-server.com. Différentes versions d'OpenSearchServer sont disponibles au téléchargement à l'adresse : http://www.open-search-server.com/download.. OpenSearchServer est un logiciel Open Source sous licence s GPL v3.. B. 'Visiteur Enregistré' est un visiteur de notre site internet http://www.open-search-server.com qui a fournit des informations d'identification permettant à JaekSoft de le contacter et lui donnant accès à certaines parties réservées sur ce site internet. L'ensemble des informations fournies par le Visiteur Enregistré est appelé 'Profil' et peut être modifié et peut être modifié par le Visiteur Enregistré.. C. "Version Supportée d'OpenSearchServer" or "Version Supportée" est la version d'OpenSearchServer pour laquelle le Service sera proposé par JaekSoft au Client.  Les Versions Supportées sont listée et peuvent être téléchargées à l'adresse : http://www.open-search-server.com/download. Il peut exister plusieurs Versions Supportées à un même moment mais aucune autre version que celles-ci ne peuvent bénéficier du Service.. D. 'Support Technique' est la fourniture d'une assistance par JaekSoft au Client pour l'installation, l'utilisation, le paramétrage de la Version Supportée du Logiciel ou pour l'analyse d'erreurs, suivant le Niveau de Support dont bénéficie le Client.. E. "Date d'Effet" est le premier jour pour lequel le Service est fourni au Client par JaekSoft.. F. "Durée du Service" représente la période pendant laquelle le Client a acquis le Service auprès de JaekSoft et les éventuelles prolongations.. G. "Erreur" est une impossibilité matérielle du Logiciel à se comporter comme expliqué dans la documentation écrite par JaekSoft.. H. "Coût du Service" représente le montant financier que le Client doit payer à JaekSoft.. I. "Code Modifié' représente tout modification, addition soustraction et/ou développement de scripts ou programmes réalisés par JaekSoft, le Client ou toute tierce partie qui modifie la Version Supportée.. J. "Instance" représente  un exemplaire d'une version d'OpenSearchServer utilisé sur un ordinateur. Une Instance inclut aussi, si elle existe, une version de sécurité d'OpenSearchServer exécutée sur le même ordinateur ou pas mais utilisant le(s) même(s) index au même moment et les mêmes données.. K. 'Maintenance Active et Alerte' est un  logiciel fournit par JaekSoft et permettant la fourniture du Service.. Ce logiciel analyse le(s) ordinateur(s) sur lequel (lesquels) est (sont) installé (s) une (des) instance (s) d'OpenSearchServer. Ce logiciel envoie une série d'alertes lorsque nécessaire et permet d'atteindre la qualité de Service attendue.. 2.  Conditions de Service. 2.1 Nature des Services. La principale nature des Services est la fourniture au Client d'informations et de Support Technique relatifs à l'utilisation d'OpenSearchServer ainsi que l'aide pour le paramétrage et la création d'applications personnalisée. Le Service est fourni en Anglais ou en Français.. 2.2 Fourniture du Service. JaekSoft fournira le Service au niveau de Service acquis par le Client durant la Période de Service, sous les conditions énoncées à l'article 2.5 ci-dessous. Les informations détaillées relatives à la Version Supportée, Niveau de Service, Temps de réponses, Horaires d'ouverture et mode de contact sont affichés à http://www.open-search-server.com/services.. 2.3 Fin de disponibilité. JaekSoft peut à sa discrétion décider d'interrompre la commercialisation d'un Logiciel ou du Service à tout moment après avoir en donné notice écrite aux Clients par courrier électronique ou à http://www.open-search-server.com/services en y indiquant toutes les modalités pratiques.. 2.4 Code Modifiée et Version Supportée. Pendant la fourniture du Service ou du Support Technique, JaekSoft peut avoir besoin d'analyser si une Erreur reportée est due à un Code Modifié. Lorsque JaekSoft suspecte qu'une Erreur qui lui est reportée peut être une conséquence d'un Code Modifié, JaekSoft peut, à sa seule discrétion, exiger du Client qu'il rétablisse le code d'origine de la Version Supportée, préalablement à la fourniture du Service.. Si JaekSoft n'identifie pas directement la cause de l'Erreur reportée ou soupçonne raisonnablement que le problème est lié à un Code Modifié, le Client sera informé qu'une aide supplémentaire pourra être obtenue directement à partir de différents forums de discussion en ligne ou par un accord commercial avec JaekSoft moyennant une facturation supplémentaire.. 2.5 Eligibilité. L'ensemble des conditions suivantes doivent être remplies pour qu'un Client prétende acquérir le Service  auprès de JaekSoft et en bénéficier:. (a) Le Client doit être un Visiteur Enregistré sur http://www.open-search-server.com, en produisant des informations vraies et sincères.. (b) OpenSearchServer doit être installé sur un ordinateur utilisant un système d'exploitation déclare compatible dans la documentation du Logiciel. L'ordinateur doit être équipé de la configuration matérielle minimale décrite dans la documentation.. (c) Le Logiciel doit avoir été installé correctement par le Client et comme il est indiqué dans la documentation et l'usage fait par le Client doit être conforme à celui décrit par JaekSoft dans la documentation. (d) Le Client respecte les  limites de la licence du Logiciel,. (e) Le Client doit être en conformité avec toute autre condition apparaissant à la page http://www.open-search-server.com/services ou durant le processus de commande en ligne ou dans les courriers électroniques de confirmations de commande ou dans la facture.. 2.6 Obligations du Client. Les obligations du Clients pour l'obtention du Service sont:. (a) Le Client déclare expressément être en capacité légale et avoir les autorisations pour remplir entièrement les conditions et obligations décrites dans ces Conditions Générales, pour s'engager auprès de JaekSoft et souscrire au Service JaekSoft.. Le Client informera JaekSoft de tout changement d'adresses ou d'information de contact pendant la Durée du Service.. (b) Le Client accepte de recevoir de la part de JaekSoft, par courrier électronique et ou téléphone toute information jugée nécessaire par JaekSoft et relative à la fourniture du Service, son renouvellement, la fourniture de proposition d'amélioration ou commerciale ou des informations techniques et d'avertissement à respecter. Le Client collaborera afin de permettre à JaekSoft de fournir le Service,. (c) Le Client est seul responsable de l'utilisation du Logiciel par son personnel qui devra être correctement formé et préparé à l'usage du Logiciel,. (d)  Le Client devra transmettre à JaekSoft dans les meilleurs délais la description de toute Erreur rencontrée dans les Logiciels de JaekSoft, tout comme il devra mettre en place dans les meilleurs délais toute procédure corrective transmises par JaekSoft à la suite du signalement d'une telle Erreur.. (e) Le Client devra fournir à JaekSoft toute information appropriée pour la résolution de chaque demande de Support Technique. Les informations appropriées seront, de manière non limitative, journalisation d'usage, copie de base de données, listage des programmes et scripts, descriptions des environnements matériel, logiciel et réseau, exemple de données en entrée, résultats obtenus et résultats attendus.. (f) Bon usage des Services: Le Client devra utiliser les Services de manière professionnelle et raisonnée ainsi que toutes les données, informations, messages ou autres éléments qui seront échangés ou transmis par le Service.. (g) Le Client est seul responsable de la protection et la sauvegarde de ses données et informations stockées dans l'ordinateur servant à l'utilisation du Logiciel et devra vérifier que ses information sont protégées et sauvegardées avant de contacter JaekSoft pout obtenir un Support Technique.. (h) Si le Client bénéficie de la maintenance à distance proposée par JaekSoft, il est seul responsable de la protection et sauvegarde des données se trouvant sur les ordinateurs auxquels JaekSoft devra avoir accès. JaekSoft ne sera en aucun cas responsable de toute perte d'information ou de données se trouvant sur un ordinateur auquel JaekSoft devra accéder afin de réaliser une intervention à distance dans le cadre de la fourniture du Service.. (i) Le Client devra installer et exécuter le module Maintenance Active et Alerte fourni par JaekSoft (Active Monitoring and Alerting Tool), de manière a être informé par avance de tout problème et de ce fait faciliter la fourniture du Service.. (j) Si le Client bénéficie des interventions à distance de JaekSoft, il devra donner un accès à (aux) l'instance(s) d'OpenSearchServer couverte(s) par le Service ainsi qu'à l'ordinateur (aux ordinateurs) utilisé (s), à JaekSoft.. (k) Le Client devra avoir procédé au règlement de la facture JaekSoft correspondant à la souscription au Service avant de prétendre en bénéficier.. 3.  Conditions financières. 3.1 Prix du Service. Sauf indication expresse contraire le prix du Service est exprimé en coût annuel hors taxes et est valable pour une Instance du Logiciel.. 3.2 Paiement du Prix du Service. (a) Sauf indication expresse contraire, le prix du Service est payable, au plus tard, à la Date d'Effet et dans le cas de renouvellement, avant le début de la nouvelle période de Service.. (b)Le Prix du Service, ainsi que ses renouvellements se font au prix affiché à la date de la transaction. JaekSoft se réserve le droit de modifier les prix du Service même en cas de renouvellement.. 3.3 Taxes. Le Prix du Service est sujet à toute taxe, tout impôt, local ou régional, qui s'appliquerait à son achat par le Client suivant son lieu de résidence et les lois en vigueur. Le Client remboursera JaekSoft de toute dépense que JaekSoft aurait eu à engager au titre de la souscription du Service par le Client.. 3.4 Facturation et délai de paiement. Sans mention expresse contraire, toutes les factures émises par JaekSoft sont dues à la date d'Effet, pour un règlement effectué sur son site internet ouvert au Client et permettant le paiement en ligne. Chaque paiement sera confirmé par l'envoi d'un courrier électronique à l'adresse utilisé par le client pour la transaction en ligne qui comportera la facture liée à la transaction et à son paiement.. Si une fourniture de prestations doit être réalisée, la facture correspondante devra être payée avant que la prestation ne soit réalisée. Aucune prestation ne sera réalisée avant paiement complet des factures émises. 3.5 Service gratuit 30 jours ("Thirty Days Free” Service). De manière à assister les nouveaux utilisateurs du Logiciel et leur permettre de débuter de la meilleure manière, JaekSoft offre un Service gratuit, pendant trente (30) jours.. Ce programme de Service gratuit est réservé aux nouveaux Client et ne peut être souscrit qu'une fois, sa vocation est d'aider les nouveaux utilisateurs d'OpenSearchServer et ne peut inclure du Support Technique pour des index OpenSearchServer existants avant la Date d'Effet du Service gratuit.. 4. Niveaux de Service. Les Services fournis par JaekSoft aux Clients existent sous différents niveaux comme il est indiqué dans la facture et sur le site de commerce en ligne accessible à http://www.open-search-server.com/services.. Pour une meilleure compréhension du niveau de Service, les définitions suivantes sont utilisées:. Accès au Service (Access to Service): L'accès au Service est permis au Client par l'utilisation d'un logiciel accessible via Internet et un navigateur web ou par courrier électronique.. Temps de réponse maximum (Maximum Response time): C'est le délai maximum entre la réception d'une demande de Support Technique d'un Client et la fourniture de la première réponse ou la première question de JaekSoft relative à cette demande.. Niveau d'importance (Severity Level): Les Services peuvent inclure différents niveaux d'importance des situations rencontrées par la Client qui peuvent donner lieu à des temps de réponse différents. Seul JaekSoft peut définir et fixer le niveau d'importance.. Correction d'Erreur (Error Fixing or Bug Fixing): Le Logiciel OpenSearchServer suit un cycle permanent de développement et d'amélioration, ces évolutions sont réalisées en partie par JaekSoft et en partie par la communauté des développeurs. De temps à autre et à sa seule appréciation, JaekSoft pourra décider de travailler à la correction d'une Erreur qui lui est transmises par un Client du Service, ceci ne préjugera ni de son niveau de priorité, ni de sa bonne fin, ni de quelque autre engagement de JaekSoft vis-à-vis du Client qui a reporté cette Erreur au sujet de cette Erreur.. 5.  Limitation de Garantie. JaekSoft fera de son mieux pour rendre le Service objet de ces Conditions Générales mais ne peut donner de garantie de résolution de problème ni des délais nécessaires, quel que soit le type de problème considéré.. JaekSoft s'engage à prendre en charge toute question provenant d'un Client du Service et de revenir vers lui en respectant le temps de réponse maximum.. 6. Limitation de responsabilité. EN AUCUN CAS JAEKSOFT NE POURRA ÊTRE TENU RESPONSABLE PAR TOUT CLIENT OU par TOUT TIERS DES DOMMAGES INDIRECTS, ACCESSOIRES, SPÉCIAUX OU AUTRES Y COMPRIS LA PERTE DE PROFITS, PERTES DE VENTES OU D'AFFAIRES, PERTE DE DONNEES OU DE L'INTERRUPTION DES AFFAIRES. DE PLUS, JAEKSOFT NE SERA PAS RESPONSABLE DES DOMMAGES DIRECTS, coûts, pertes ou des engagements qui dépassent les frais mensuels du service payés ou payables par le Client POUR LE MOIS précédant TOUTE DEMANDE DE DOMMAGES ET INTERETS. SI service est payé sur une base annuelle, ALORS le prix mensuel du service sera considérée comme la base annuelle divisée par douze.. 7. Transfert. JaekSoft pourra céder ou transférer ces Conditions Générales, entièrement ou en partie vers tout tiers qui en respectera les termes et sans restriction.. Cependant, le Client ne pourra pas transférer le Service à un tiers sans accord écrit express de JaekSoft.. 8. Propriété intellectuelle. Toutes les marques, droits, copyright, signes distinctifs, en particulier ceux qui apparaissent sur le site internet de Jaeksoft, ses logiciels, ses documentation restent l'entière propriété de JaekSoft, sans que le client puisse prétendre à un transfert du bénéfice des droits. Le Logiciel proposé par JaekSoft ainsi que celui utilisé pour rendre le Service sont sa propriété. Aucune copie, reproduction, addition ou modification dans le logiciel ou sa documentation n'est autorisé sauf permission explicite par leur licence.. 9. Information et données personnelles. Toute les données et informations personnelles fournies par le Client durant la souscription au Service et /ou utilisées par le Service et collectées par JaekSoft ne le sont que pour le cours normal des affaires ou pour offrir une meilleure qualité de prestation aux Clients.. Le site internet de JaekSoft est déclaré à la CNIL sous le numéro 1517220 en date du 29 juillet 2011. Tout Visiteur Enregistré a le droit d'accès à ses données personnelles. Pour en bénéficier, il suffira d'envoyer un courrier électronique à webmaster@open-search-server.com. Les informations seront retournées sous cinq (5) jours ouvrés.. 10. Interruption du Service. En cas d'inexécution par le Client de l'une de ses Obligations listées à l'article 1.6 ou suite au non respect des conditions d'éligibilité listées à l'article 1.5, JaekSoft se réserve le droit d'interrompre la fourniture du Service.. JaekSoft pourra arrêter définitivement la fourniture du Service si le Client n'a pris les mesures nécessaires pour respecter ses obligations au maximum quinze (15) jours après avoir reçu une demande de JaekSoft par courrier électronique de se conformer à ces obligations.. JaekSoft pourra mettre fin à la fourniture du Service en cas d'inexécution de l'article 2.6 de ces Conditions Générales ou en cas de fourniture de fausses informations lors de la souscription au Service. Une telle rupture ne donnera lieu à aucun remboursement d'éventuelles sommes payées par avance.. 11.- Force majeure. JaekSoft ne pourra pas être tenu pour responsable de l'inexécution partielle ou totale de ses obligations ou de tout retard dans l'exécution de celles-ci, si cette inexécution ou ce retard ont été provoqués par la survenance d'événements imprévisibles, irrésistibles et extérieurs.. Seront notamment considérés comme éléments imprévisibles, irrésistibles et extérieurs, une décision gouvernementale, une guerre, une guerre civile, un sabotage, une catastrophe naturelle, une perturbation dans les sources d'approvisionnement (tels que les communications téléphoniques ou les réseaux de télécommunications, l'électricité ou l'essence), une épidémie, une grève, un incendie, une explosion ou tout autre événement indépendant du contrôle de JaekSoft.. 12. Tolérance. La tolérance de JaekSoft de ne pas se prévaloir, à un moment donné, d’une des stipulations des présentes Conditions Générales concernant les obligations du Client, ne pourra être interprété comme une renonciation à faire valoir ultérieurement cette stipulation ou tout autre disposition de ces Conditions Générales.. 13. Clause de sauvegarde. Si une disposition de ces Conditions Générales est caduque, ou le devient, ou si les Conditions Générales sont entachées d'une lacune, la validité de ses autres dispositions ne s'en trouve pas affectée.. 14. Correspondance. Toutes informations envoyées par une Partie à l'autre seront faites par courrier électronique ci-dessous:. Le Client enverra ses demandes à JaekSoft à l'adresse suivante : contact@open-search-server.com.. JaekSoft enverra ses informations au Client à l'adresse que le disponible dans le Profil du Client.. 15. Droit applicable. Tout litige découlant de l'application des présentes Conditions Générales ou de la fourniture du Service sont  soumis au droit français.. Pour tout litige relatif à la formation, l’interprétation, l’exécution des présentes Conditions Générales, attribution expresse de juridiction est faite aux tribunaux compétents dans le ressort de la Cour d’appel de Paris.. </value></field><field name="contentExact"><value>Conditions Générales de Ventes. Programmes de Service OpenSearchServer . Community Edition. Version 2, du 1er Décembre 2011.  . Jaeksoft SàRL, une société française au capital de 200 000 € dont le siège social est situé 89 Rue de Meaux, 93410, Vaujours, France, immatriculée au registre de commerce et des sociétés de Bobigny  sous le numéro 520 295 551, TVA n° FR10520295551, (ci après appelée “JaekSoft”, “nous”, "nos" ou “notre”).. JaekSoft fournit des Services aux Clients comme défini ci-dessous, dans les conditions définies dans ces Conditions Générales  et comme présenté à l'adresse http://www.open-search-server.com/services. .  . Le Client de nos services, (ci-après appelé "le Client"), reconnait que la souscription ou l'usage des Services de JaekSoft implique l'acceptation complète, sans réserve ni restriction  de ces Conditions Générales et les conditions spéciales qui s'appliqueraient pour l'usage de services ou ressources accessoires, dans les limites techniques de nos Services et Logiciels comme décrit sur notre site http://www.open‐search‐server.com..  .  . 1.  Définitions . A. "OpenSearchServer" ou "le Logiciel" est OpenSearchServer Community Edition, un logiciel dont les caractéristiques et fonctionnalités principales sont décrites dans les différentes sections du site http://www.open-search-server.com. Différentes versions d'OpenSearchServer sont disponibles au téléchargement à l'adresse : http://www.open-search-server.com/download.. OpenSearchServer est un logiciel Open Source sous licence s GPL v3.. B. 'Visiteur Enregistré' est un visiteur de notre site internet http://www.open-search-server.com qui a fournit des informations d'identification permettant à JaekSoft de le contacter et lui donnant accès à certaines parties réservées sur ce site internet. L'ensemble des informations fournies par le Visiteur Enregistré est appelé 'Profil' et peut être modifié et peut être modifié par le Visiteur Enregistré.. C. "Version Supportée d'OpenSearchServer" or "Version Supportée" est la version d'OpenSearchServer pour laquelle le Service sera proposé par JaekSoft au Client.  Les Versions Supportées sont listée et peuvent être téléchargées à l'adresse : http://www.open-search-server.com/download. Il peut exister plusieurs Versions Supportées à un même moment mais aucune autre version que celles-ci ne peuvent bénéficier du Service.. D. 'Support Technique' est la fourniture d'une assistance par JaekSoft au Client pour l'installation, l'utilisation, le paramétrage de la Version Supportée du Logiciel ou pour l'analyse d'erreurs, suivant le Niveau de Support dont bénéficie le Client.. E. "Date d'Effet" est le premier jour pour lequel le Service est fourni au Client par JaekSoft.. F. "Durée du Service" représente la période pendant laquelle le Client a acquis le Service auprès de JaekSoft et les éventuelles prolongations.. G. "Erreur" est une impossibilité matérielle du Logiciel à se comporter comme expliqué dans la documentation écrite par JaekSoft.. H. "Coût du Service" représente le montant financier que le Client doit payer à JaekSoft.. I. "Code Modifié' représente tout modification, addition soustraction et/ou développement de scripts ou programmes réalisés par JaekSoft, le Client ou toute tierce partie qui modifie la Version Supportée.. J. "Instance" représente  un exemplaire d'une version d'OpenSearchServer utilisé sur un ordinateur. Une Instance inclut aussi, si elle existe, une version de sécurité d'OpenSearchServer exécutée sur le même ordinateur ou pas mais utilisant le(s) même(s) index au même moment et les mêmes données.. K. 'Maintenance Active et Alerte' est un  logiciel fournit par JaekSoft et permettant la fourniture du Service.. Ce logiciel analyse le(s) ordinateur(s) sur lequel (lesquels) est (sont) installé (s) une (des) instance (s) d'OpenSearchServer. Ce logiciel envoie une série d'alertes lorsque nécessaire et permet d'atteindre la qualité de Service attendue.. 2.  Conditions de Service. 2.1 Nature des Services. La principale nature des Services est la fourniture au Client d'informations et de Support Technique relatifs à l'utilisation d'OpenSearchServer ainsi que l'aide pour le paramétrage et la création d'applications personnalisée. Le Service est fourni en Anglais ou en Français.. 2.2 Fourniture du Service. JaekSoft fournira le Service au niveau de Service acquis par le Client durant la Période de Service, sous les conditions énoncées à l'article 2.5 ci-dessous. Les informations détaillées relatives à la Version Supportée, Niveau de Service, Temps de réponses, Horaires d'ouverture et mode de contact sont affichés à http://www.open-search-server.com/services.. 2.3 Fin de disponibilité. JaekSoft peut à sa discrétion décider d'interrompre la commercialisation d'un Logiciel ou du Service à tout moment après avoir en donné notice écrite aux Clients par courrier électronique ou à http://www.open-search-server.com/services en y indiquant toutes les modalités pratiques.. 2.4 Code Modifiée et Version Supportée. Pendant la fourniture du Service ou du Support Technique, JaekSoft peut avoir besoin d'analyser si une Erreur reportée est due à un Code Modifié. Lorsque JaekSoft suspecte qu'une Erreur qui lui est reportée peut être une conséquence d'un Code Modifié, JaekSoft peut, à sa seule discrétion, exiger du Client qu'il rétablisse le code d'origine de la Version Supportée, préalablement à la fourniture du Service.. Si JaekSoft n'identifie pas directement la cause de l'Erreur reportée ou soupçonne raisonnablement que le problème est lié à un Code Modifié, le Client sera informé qu'une aide supplémentaire pourra être obtenue directement à partir de différents forums de discussion en ligne ou par un accord commercial avec JaekSoft moyennant une facturation supplémentaire.. 2.5 Eligibilité. L'ensemble des conditions suivantes doivent être remplies pour qu'un Client prétende acquérir le Service  auprès de JaekSoft et en bénéficier:. (a) Le Client doit être un Visiteur Enregistré sur http://www.open-search-server.com, en produisant des informations vraies et sincères.. (b) OpenSearchServer doit être installé sur un ordinateur utilisant un système d'exploitation déclare compatible dans la documentation du Logiciel. L'ordinateur doit être équipé de la configuration matérielle minimale décrite dans la documentation.. (c) Le Logiciel doit avoir été installé correctement par le Client et comme il est indiqué dans la documentation et l'usage fait par le Client doit être conforme à celui décrit par JaekSoft dans la documentation. (d) Le Client respecte les  limites de la licence du Logiciel,. (e) Le Client doit être en conformité avec toute autre condition apparaissant à la page http://www.open-search-server.com/services ou durant le processus de commande en ligne ou dans les courriers électroniques de confirmations de commande ou dans la facture.. 2.6 Obligations du Client. Les obligations du Clients pour l'obtention du Service sont:. (a) Le Client déclare expressément être en capacité légale et avoir les autorisations pour remplir entièrement les conditions et obligations décrites dans ces Conditions Générales, pour s'engager auprès de JaekSoft et souscrire au Service JaekSoft.. Le Client informera JaekSoft de tout changement d'adresses ou d'information de contact pendant la Durée du Service.. (b) Le Client accepte de recevoir de la part de JaekSoft, par courrier électronique et ou téléphone toute information jugée nécessaire par JaekSoft et relative à la fourniture du Service, son renouvellement, la fourniture de proposition d'amélioration ou commerciale ou des informations techniques et d'avertissement à respecter. Le Client collaborera afin de permettre à JaekSoft de fournir le Service,. (c) Le Client est seul responsable de l'utilisation du Logiciel par son personnel qui devra être correctement formé et préparé à l'usage du Logiciel,. (d)  Le Client devra transmettre à JaekSoft dans les meilleurs délais la description de toute Erreur rencontrée dans les Logiciels de JaekSoft, tout comme il devra mettre en place dans les meilleurs délais toute procédure corrective transmises par JaekSoft à la suite du signalement d'une telle Erreur.. (e) Le Client devra fournir à JaekSoft toute information appropriée pour la résolution de chaque demande de Support Technique. Les informations appropriées seront, de manière non limitative, journalisation d'usage, copie de base de données, listage des programmes et scripts, descriptions des environnements matériel, logiciel et réseau, exemple de données en entrée, résultats obtenus et résultats attendus.. (f) Bon usage des Services: Le Client devra utiliser les Services de manière professionnelle et raisonnée ainsi que toutes les données, informations, messages ou autres éléments qui seront échangés ou transmis par le Service.. (g) Le Client est seul responsable de la protection et la sauvegarde de ses données et informations stockées dans l'ordinateur servant à l'utilisation du Logiciel et devra vérifier que ses information sont protégées et sauvegardées avant de contacter JaekSoft pout obtenir un Support Technique.. (h) Si le Client bénéficie de la maintenance à distance proposée par JaekSoft, il est seul responsable de la protection et sauvegarde des données se trouvant sur les ordinateurs auxquels JaekSoft devra avoir accès. JaekSoft ne sera en aucun cas responsable de toute perte d'information ou de données se trouvant sur un ordinateur auquel JaekSoft devra accéder afin de réaliser une intervention à distance dans le cadre de la fourniture du Service.. (i) Le Client devra installer et exécuter le module Maintenance Active et Alerte fourni par JaekSoft (Active Monitoring and Alerting Tool), de manière a être informé par avance de tout problème et de ce fait faciliter la fourniture du Service.. (j) Si le Client bénéficie des interventions à distance de JaekSoft, il devra donner un accès à (aux) l'instance(s) d'OpenSearchServer couverte(s) par le Service ainsi qu'à l'ordinateur (aux ordinateurs) utilisé (s), à JaekSoft.. (k) Le Client devra avoir procédé au règlement de la facture JaekSoft correspondant à la souscription au Service avant de prétendre en bénéficier.. 3.  Conditions financières. 3.1 Prix du Service. Sauf indication expresse contraire le prix du Service est exprimé en coût annuel hors taxes et est valable pour une Instance du Logiciel.. 3.2 Paiement du Prix du Service. (a) Sauf indication expresse contraire, le prix du Service est payable, au plus tard, à la Date d'Effet et dans le cas de renouvellement, avant le début de la nouvelle période de Service.. (b)Le Prix du Service, ainsi que ses renouvellements se font au prix affiché à la date de la transaction. JaekSoft se réserve le droit de modifier les prix du Service même en cas de renouvellement.. 3.3 Taxes. Le Prix du Service est sujet à toute taxe, tout impôt, local ou régional, qui s'appliquerait à son achat par le Client suivant son lieu de résidence et les lois en vigueur. Le Client remboursera JaekSoft de toute dépense que JaekSoft aurait eu à engager au titre de la souscription du Service par le Client.. 3.4 Facturation et délai de paiement. Sans mention expresse contraire, toutes les factures émises par JaekSoft sont dues à la date d'Effet, pour un règlement effectué sur son site internet ouvert au Client et permettant le paiement en ligne. Chaque paiement sera confirmé par l'envoi d'un courrier électronique à l'adresse utilisé par le client pour la transaction en ligne qui comportera la facture liée à la transaction et à son paiement.. Si une fourniture de prestations doit être réalisée, la facture correspondante devra être payée avant que la prestation ne soit réalisée. Aucune prestation ne sera réalisée avant paiement complet des factures émises. 3.5 Service gratuit 30 jours ("Thirty Days Free” Service). De manière à assister les nouveaux utilisateurs du Logiciel et leur permettre de débuter de la meilleure manière, JaekSoft offre un Service gratuit, pendant trente (30) jours.. Ce programme de Service gratuit est réservé aux nouveaux Client et ne peut être souscrit qu'une fois, sa vocation est d'aider les nouveaux utilisateurs d'OpenSearchServer et ne peut inclure du Support Technique pour des index OpenSearchServer existants avant la Date d'Effet du Service gratuit.. 4. Niveaux de Service. Les Services fournis par JaekSoft aux Clients existent sous différents niveaux comme il est indiqué dans la facture et sur le site de commerce en ligne accessible à http://www.open-search-server.com/services.. Pour une meilleure compréhension du niveau de Service, les définitions suivantes sont utilisées:. Accès au Service (Access to Service): L'accès au Service est permis au Client par l'utilisation d'un logiciel accessible via Internet et un navigateur web ou par courrier électronique.. Temps de réponse maximum (Maximum Response time): C'est le délai maximum entre la réception d'une demande de Support Technique d'un Client et la fourniture de la première réponse ou la première question de JaekSoft relative à cette demande.. Niveau d'importance (Severity Level): Les Services peuvent inclure différents niveaux d'importance des situations rencontrées par la Client qui peuvent donner lieu à des temps de réponse différents. Seul JaekSoft peut définir et fixer le niveau d'importance.. Correction d'Erreur (Error Fixing or Bug Fixing): Le Logiciel OpenSearchServer suit un cycle permanent de développement et d'amélioration, ces évolutions sont réalisées en partie par JaekSoft et en partie par la communauté des développeurs. De temps à autre et à sa seule appréciation, JaekSoft pourra décider de travailler à la correction d'une Erreur qui lui est transmises par un Client du Service, ceci ne préjugera ni de son niveau de priorité, ni de sa bonne fin, ni de quelque autre engagement de JaekSoft vis-à-vis du Client qui a reporté cette Erreur au sujet de cette Erreur.. 5.  Limitation de Garantie. JaekSoft fera de son mieux pour rendre le Service objet de ces Conditions Générales mais ne peut donner de garantie de résolution de problème ni des délais nécessaires, quel que soit le type de problème considéré.. JaekSoft s'engage à prendre en charge toute question provenant d'un Client du Service et de revenir vers lui en respectant le temps de réponse maximum.. 6. Limitation de responsabilité. EN AUCUN CAS JAEKSOFT NE POURRA ÊTRE TENU RESPONSABLE PAR TOUT CLIENT OU par TOUT TIERS DES DOMMAGES INDIRECTS, ACCESSOIRES, SPÉCIAUX OU AUTRES Y COMPRIS LA PERTE DE PROFITS, PERTES DE VENTES OU D'AFFAIRES, PERTE DE DONNEES OU DE L'INTERRUPTION DES AFFAIRES. DE PLUS, JAEKSOFT NE SERA PAS RESPONSABLE DES DOMMAGES DIRECTS, coûts, pertes ou des engagements qui dépassent les frais mensuels du service payés ou payables par le Client POUR LE MOIS précédant TOUTE DEMANDE DE DOMMAGES ET INTERETS. SI service est payé sur une base annuelle, ALORS le prix mensuel du service sera considérée comme la base annuelle divisée par douze.. 7. Transfert. JaekSoft pourra céder ou transférer ces Conditions Générales, entièrement ou en partie vers tout tiers qui en respectera les termes et sans restriction.. Cependant, le Client ne pourra pas transférer le Service à un tiers sans accord écrit express de JaekSoft.. 8. Propriété intellectuelle. Toutes les marques, droits, copyright, signes distinctifs, en particulier ceux qui apparaissent sur le site internet de Jaeksoft, ses logiciels, ses documentation restent l'entière propriété de JaekSoft, sans que le client puisse prétendre à un transfert du bénéfice des droits. Le Logiciel proposé par JaekSoft ainsi que celui utilisé pour rendre le Service sont sa propriété. Aucune copie, reproduction, addition ou modification dans le logiciel ou sa documentation n'est autorisé sauf permission explicite par leur licence.. 9. Information et données personnelles. Toute les données et informations personnelles fournies par le Client durant la souscription au Service et /ou utilisées par le Service et collectées par JaekSoft ne le sont que pour le cours normal des affaires ou pour offrir une meilleure qualité de prestation aux Clients.. Le site internet de JaekSoft est déclaré à la CNIL sous le numéro 1517220 en date du 29 juillet 2011. Tout Visiteur Enregistré a le droit d'accès à ses données personnelles. Pour en bénéficier, il suffira d'envoyer un courrier électronique à webmaster@open-search-server.com. Les informations seront retournées sous cinq (5) jours ouvrés.. 10. Interruption du Service. En cas d'inexécution par le Client de l'une de ses Obligations listées à l'article 1.6 ou suite au non respect des conditions d'éligibilité listées à l'article 1.5, JaekSoft se réserve le droit d'interrompre la fourniture du Service.. JaekSoft pourra arrêter définitivement la fourniture du Service si le Client n'a pris les mesures nécessaires pour respecter ses obligations au maximum quinze (15) jours après avoir reçu une demande de JaekSoft par courrier électronique de se conformer à ces obligations.. JaekSoft pourra mettre fin à la fourniture du Service en cas d'inexécution de l'article 2.6 de ces Conditions Générales ou en cas de fourniture de fausses informations lors de la souscription au Service. Une telle rupture ne donnera lieu à aucun remboursement d'éventuelles sommes payées par avance.. 11.- Force majeure. JaekSoft ne pourra pas être tenu pour responsable de l'inexécution partielle ou totale de ses obligations ou de tout retard dans l'exécution de celles-ci, si cette inexécution ou ce retard ont été provoqués par la survenance d'événements imprévisibles, irrésistibles et extérieurs.. Seront notamment considérés comme éléments imprévisibles, irrésistibles et extérieurs, une décision gouvernementale, une guerre, une guerre civile, un sabotage, une catastrophe naturelle, une perturbation dans les sources d'approvisionnement (tels que les communications téléphoniques ou les réseaux de télécommunications, l'électricité ou l'essence), une épidémie, une grève, un incendie, une explosion ou tout autre événement indépendant du contrôle de JaekSoft.. 12. Tolérance. La tolérance de JaekSoft de ne pas se prévaloir, à un moment donné, d’une des stipulations des présentes Conditions Générales concernant les obligations du Client, ne pourra être interprété comme une renonciation à faire valoir ultérieurement cette stipulation ou tout autre disposition de ces Conditions Générales.. 13. Clause de sauvegarde. Si une disposition de ces Conditions Générales est caduque, ou le devient, ou si les Conditions Générales sont entachées d'une lacune, la validité de ses autres dispositions ne s'en trouve pas affectée.. 14. Correspondance. Toutes informations envoyées par une Partie à l'autre seront faites par courrier électronique ci-dessous:. Le Client enverra ses demandes à JaekSoft à l'adresse suivante : contact@open-search-server.com.. JaekSoft enverra ses informations au Client à l'adresse que le disponible dans le Profil du Client.. 15. Droit applicable. Tout litige découlant de l'application des présentes Conditions Générales ou de la fourniture du Service sont  soumis au droit français.. Pour tout litige relatif à la formation, l’interprétation, l’exécution des présentes Conditions Générales, attribution expresse de juridiction est faite aux tribunaux compétents dans le ressort de la Cour d’appel de Paris.. </value></field><field name="contentPhonetic"><value>Conditions Générales de Ventes. Programmes de Service OpenSearchServer . Community Edition. Version 2, du 1er Décembre 2011.  . Jaeksoft SàRL, une société française au capital de 200 000 € dont le siège social est situé 89 Rue de Meaux, 93410, Vaujours, France, immatriculée au registre de commerce et des sociétés de Bobigny  sous le numéro 520 295 551, TVA n° FR10520295551, (ci après appelée “JaekSoft”, “nous”, "nos" ou “notre”).. JaekSoft fournit des Services aux Clients comme défini ci-dessous, dans les conditions définies dans ces Conditions Générales  et comme présenté à l'adresse http://www.open-search-server.com/services. .  . Le Client de nos services, (ci-après appelé "le Client"), reconnait que la souscription ou l'usage des Services de JaekSoft implique l'acceptation complète, sans réserve ni restriction  de ces Conditions Générales et les conditions spéciales qui s'appliqueraient pour l'usage de services ou ressources accessoires, dans les limites techniques de nos Services et Logiciels comme décrit sur notre site http://www.open‐search‐server.com..  .  . 1.  Définitions . A. "OpenSearchServer" ou "le Logiciel" est OpenSearchServer Community Edition, un logiciel dont les caractéristiques et fonctionnalités principales sont décrites dans les différentes sections du site http://www.open-search-server.com. Différentes versions d'OpenSearchServer sont disponibles au téléchargement à l'adresse : http://www.open-search-server.com/download.. OpenSearchServer est un logiciel Open Source sous licence s GPL v3.. B. 'Visiteur Enregistré' est un visiteur de notre site internet http://www.open-search-server.com qui a fournit des informations d'identification permettant à JaekSoft de le contacter et lui donnant accès à certaines parties réservées sur ce site internet. L'ensemble des informations fournies par le Visiteur Enregistré est appelé 'Profil' et peut être modifié et peut être modifié par le Visiteur Enregistré.. C. "Version Supportée d'OpenSearchServer" or "Version Supportée" est la version d'OpenSearchServer pour laquelle le Service sera proposé par JaekSoft au Client.  Les Versions Supportées sont listée et peuvent être téléchargées à l'adresse : http://www.open-search-server.com/download. Il peut exister plusieurs Versions Supportées à un même moment mais aucune autre version que celles-ci ne peuvent bénéficier du Service.. D. 'Support Technique' est la fourniture d'une assistance par JaekSoft au Client pour l'installation, l'utilisation, le paramétrage de la Version Supportée du Logiciel ou pour l'analyse d'erreurs, suivant le Niveau de Support dont bénéficie le Client.. E. "Date d'Effet" est le premier jour pour lequel le Service est fourni au Client par JaekSoft.. F. "Durée du Service" représente la période pendant laquelle le Client a acquis le Service auprès de JaekSoft et les éventuelles prolongations.. G. "Erreur" est une impossibilité matérielle du Logiciel à se comporter comme expliqué dans la documentation écrite par JaekSoft.. H. "Coût du Service" représente le montant financier que le Client doit payer à JaekSoft.. I. "Code Modifié' représente tout modification, addition soustraction et/ou développement de scripts ou programmes réalisés par JaekSoft, le Client ou toute tierce partie qui modifie la Version Supportée.. J. "Instance" représente  un exemplaire d'une version d'OpenSearchServer utilisé sur un ordinateur. Une Instance inclut aussi, si elle existe, une version de sécurité d'OpenSearchServer exécutée sur le même ordinateur ou pas mais utilisant le(s) même(s) index au même moment et les mêmes données.. K. 'Maintenance Active et Alerte' est un  logiciel fournit par JaekSoft et permettant la fourniture du Service.. Ce logiciel analyse le(s) ordinateur(s) sur lequel (lesquels) est (sont) installé (s) une (des) instance (s) d'OpenSearchServer. Ce logiciel envoie une série d'alertes lorsque nécessaire et permet d'atteindre la qualité de Service attendue.. 2.  Conditions de Service. 2.1 Nature des Services. La principale nature des Services est la fourniture au Client d'informations et de Support Technique relatifs à l'utilisation d'OpenSearchServer ainsi que l'aide pour le paramétrage et la création d'applications personnalisée. Le Service est fourni en Anglais ou en Français.. 2.2 Fourniture du Service. JaekSoft fournira le Service au niveau de Service acquis par le Client durant la Période de Service, sous les conditions énoncées à l'article 2.5 ci-dessous. Les informations détaillées relatives à la Version Supportée, Niveau de Service, Temps de réponses, Horaires d'ouverture et mode de contact sont affichés à http://www.open-search-server.com/services.. 2.3 Fin de disponibilité. JaekSoft peut à sa discrétion décider d'interrompre la commercialisation d'un Logiciel ou du Service à tout moment après avoir en donné notice écrite aux Clients par courrier électronique ou à http://www.open-search-server.com/services en y indiquant toutes les modalités pratiques.. 2.4 Code Modifiée et Version Supportée. Pendant la fourniture du Service ou du Support Technique, JaekSoft peut avoir besoin d'analyser si une Erreur reportée est due à un Code Modifié. Lorsque JaekSoft suspecte qu'une Erreur qui lui est reportée peut être une conséquence d'un Code Modifié, JaekSoft peut, à sa seule discrétion, exiger du Client qu'il rétablisse le code d'origine de la Version Supportée, préalablement à la fourniture du Service.. Si JaekSoft n'identifie pas directement la cause de l'Erreur reportée ou soupçonne raisonnablement que le problème est lié à un Code Modifié, le Client sera informé qu'une aide supplémentaire pourra être obtenue directement à partir de différents forums de discussion en ligne ou par un accord commercial avec JaekSoft moyennant une facturation supplémentaire.. 2.5 Eligibilité. L'ensemble des conditions suivantes doivent être remplies pour qu'un Client prétende acquérir le Service  auprès de JaekSoft et en bénéficier:. (a) Le Client doit être un Visiteur Enregistré sur http://www.open-search-server.com, en produisant des informations vraies et sincères.. (b) OpenSearchServer doit être installé sur un ordinateur utilisant un système d'exploitation déclare compatible dans la documentation du Logiciel. L'ordinateur doit être équipé de la configuration matérielle minimale décrite dans la documentation.. (c) Le Logiciel doit avoir été installé correctement par le Client et comme il est indiqué dans la documentation et l'usage fait par le Client doit être conforme à celui décrit par JaekSoft dans la documentation. (d) Le Client respecte les  limites de la licence du Logiciel,. (e) Le Client doit être en conformité avec toute autre condition apparaissant à la page http://www.open-search-server.com/services ou durant le processus de commande en ligne ou dans les courriers électroniques de confirmations de commande ou dans la facture.. 2.6 Obligations du Client. Les obligations du Clients pour l'obtention du Service sont:. (a) Le Client déclare expressément être en capacité légale et avoir les autorisations pour remplir entièrement les conditions et obligations décrites dans ces Conditions Générales, pour s'engager auprès de JaekSoft et souscrire au Service JaekSoft.. Le Client informera JaekSoft de tout changement d'adresses ou d'information de contact pendant la Durée du Service.. (b) Le Client accepte de recevoir de la part de JaekSoft, par courrier électronique et ou téléphone toute information jugée nécessaire par JaekSoft et relative à la fourniture du Service, son renouvellement, la fourniture de proposition d'amélioration ou commerciale ou des informations techniques et d'avertissement à respecter. Le Client collaborera afin de permettre à JaekSoft de fournir le Service,. (c) Le Client est seul responsable de l'utilisation du Logiciel par son personnel qui devra être correctement formé et préparé à l'usage du Logiciel,. (d)  Le Client devra transmettre à JaekSoft dans les meilleurs délais la description de toute Erreur rencontrée dans les Logiciels de JaekSoft, tout comme il devra mettre en place dans les meilleurs délais toute procédure corrective transmises par JaekSoft à la suite du signalement d'une telle Erreur.. (e) Le Client devra fournir à JaekSoft toute information appropriée pour la résolution de chaque demande de Support Technique. Les informations appropriées seront, de manière non limitative, journalisation d'usage, copie de base de données, listage des programmes et scripts, descriptions des environnements matériel, logiciel et réseau, exemple de données en entrée, résultats obtenus et résultats attendus.. (f) Bon usage des Services: Le Client devra utiliser les Services de manière professionnelle et raisonnée ainsi que toutes les données, informations, messages ou autres éléments qui seront échangés ou transmis par le Service.. (g) Le Client est seul responsable de la protection et la sauvegarde de ses données et informations stockées dans l'ordinateur servant à l'utilisation du Logiciel et devra vérifier que ses information sont protégées et sauvegardées avant de contacter JaekSoft pout obtenir un Support Technique.. (h) Si le Client bénéficie de la maintenance à distance proposée par JaekSoft, il est seul responsable de la protection et sauvegarde des données se trouvant sur les ordinateurs auxquels JaekSoft devra avoir accès. JaekSoft ne sera en aucun cas responsable de toute perte d'information ou de données se trouvant sur un ordinateur auquel JaekSoft devra accéder afin de réaliser une intervention à distance dans le cadre de la fourniture du Service.. (i) Le Client devra installer et exécuter le module Maintenance Active et Alerte fourni par JaekSoft (Active Monitoring and Alerting Tool), de manière a être informé par avance de tout problème et de ce fait faciliter la fourniture du Service.. (j) Si le Client bénéficie des interventions à distance de JaekSoft, il devra donner un accès à (aux) l'instance(s) d'OpenSearchServer couverte(s) par le Service ainsi qu'à l'ordinateur (aux ordinateurs) utilisé (s), à JaekSoft.. (k) Le Client devra avoir procédé au règlement de la facture JaekSoft correspondant à la souscription au Service avant de prétendre en bénéficier.. 3.  Conditions financières. 3.1 Prix du Service. Sauf indication expresse contraire le prix du Service est exprimé en coût annuel hors taxes et est valable pour une Instance du Logiciel.. 3.2 Paiement du Prix du Service. (a) Sauf indication expresse contraire, le prix du Service est payable, au plus tard, à la Date d'Effet et dans le cas de renouvellement, avant le début de la nouvelle période de Service.. (b)Le Prix du Service, ainsi que ses renouvellements se font au prix affiché à la date de la transaction. JaekSoft se réserve le droit de modifier les prix du Service même en cas de renouvellement.. 3.3 Taxes. Le Prix du Service est sujet à toute taxe, tout impôt, local ou régional, qui s'appliquerait à son achat par le Client suivant son lieu de résidence et les lois en vigueur. Le Client remboursera JaekSoft de toute dépense que JaekSoft aurait eu à engager au titre de la souscription du Service par le Client.. 3.4 Facturation et délai de paiement. Sans mention expresse contraire, toutes les factures émises par JaekSoft sont dues à la date d'Effet, pour un règlement effectué sur son site internet ouvert au Client et permettant le paiement en ligne. Chaque paiement sera confirmé par l'envoi d'un courrier électronique à l'adresse utilisé par le client pour la transaction en ligne qui comportera la facture liée à la transaction et à son paiement.. Si une fourniture de prestations doit être réalisée, la facture correspondante devra être payée avant que la prestation ne soit réalisée. Aucune prestation ne sera réalisée avant paiement complet des factures émises. 3.5 Service gratuit 30 jours ("Thirty Days Free” Service). De manière à assister les nouveaux utilisateurs du Logiciel et leur permettre de débuter de la meilleure manière, JaekSoft offre un Service gratuit, pendant trente (30) jours.. Ce programme de Service gratuit est réservé aux nouveaux Client et ne peut être souscrit qu'une fois, sa vocation est d'aider les nouveaux utilisateurs d'OpenSearchServer et ne peut inclure du Support Technique pour des index OpenSearchServer existants avant la Date d'Effet du Service gratuit.. 4. Niveaux de Service. Les Services fournis par JaekSoft aux Clients existent sous différents niveaux comme il est indiqué dans la facture et sur le site de commerce en ligne accessible à http://www.open-search-server.com/services.. Pour une meilleure compréhension du niveau de Service, les définitions suivantes sont utilisées:. Accès au Service (Access to Service): L'accès au Service est permis au Client par l'utilisation d'un logiciel accessible via Internet et un navigateur web ou par courrier électronique.. Temps de réponse maximum (Maximum Response time): C'est le délai maximum entre la réception d'une demande de Support Technique d'un Client et la fourniture de la première réponse ou la première question de JaekSoft relative à cette demande.. Niveau d'importance (Severity Level): Les Services peuvent inclure différents niveaux d'importance des situations rencontrées par la Client qui peuvent donner lieu à des temps de réponse différents. Seul JaekSoft peut définir et fixer le niveau d'importance.. Correction d'Erreur (Error Fixing or Bug Fixing): Le Logiciel OpenSearchServer suit un cycle permanent de développement et d'amélioration, ces évolutions sont réalisées en partie par JaekSoft et en partie par la communauté des développeurs. De temps à autre et à sa seule appréciation, JaekSoft pourra décider de travailler à la correction d'une Erreur qui lui est transmises par un Client du Service, ceci ne préjugera ni de son niveau de priorité, ni de sa bonne fin, ni de quelque autre engagement de JaekSoft vis-à-vis du Client qui a reporté cette Erreur au sujet de cette Erreur.. 5.  Limitation de Garantie. JaekSoft fera de son mieux pour rendre le Service objet de ces Conditions Générales mais ne peut donner de garantie de résolution de problème ni des délais nécessaires, quel que soit le type de problème considéré.. JaekSoft s'engage à prendre en charge toute question provenant d'un Client du Service et de revenir vers lui en respectant le temps de réponse maximum.. 6. Limitation de responsabilité. EN AUCUN CAS JAEKSOFT NE POURRA ÊTRE TENU RESPONSABLE PAR TOUT CLIENT OU par TOUT TIERS DES DOMMAGES INDIRECTS, ACCESSOIRES, SPÉCIAUX OU AUTRES Y COMPRIS LA PERTE DE PROFITS, PERTES DE VENTES OU D'AFFAIRES, PERTE DE DONNEES OU DE L'INTERRUPTION DES AFFAIRES. DE PLUS, JAEKSOFT NE SERA PAS RESPONSABLE DES DOMMAGES DIRECTS, coûts, pertes ou des engagements qui dépassent les frais mensuels du service payés ou payables par le Client POUR LE MOIS précédant TOUTE DEMANDE DE DOMMAGES ET INTERETS. SI service est payé sur une base annuelle, ALORS le prix mensuel du service sera considérée comme la base annuelle divisée par douze.. 7. Transfert. JaekSoft pourra céder ou transférer ces Conditions Générales, entièrement ou en partie vers tout tiers qui en respectera les termes et sans restriction.. Cependant, le Client ne pourra pas transférer le Service à un tiers sans accord écrit express de JaekSoft.. 8. Propriété intellectuelle. Toutes les marques, droits, copyright, signes distinctifs, en particulier ceux qui apparaissent sur le site internet de Jaeksoft, ses logiciels, ses documentation restent l'entière propriété de JaekSoft, sans que le client puisse prétendre à un transfert du bénéfice des droits. Le Logiciel proposé par JaekSoft ainsi que celui utilisé pour rendre le Service sont sa propriété. Aucune copie, reproduction, addition ou modification dans le logiciel ou sa documentation n'est autorisé sauf permission explicite par leur licence.. 9. Information et données personnelles. Toute les données et informations personnelles fournies par le Client durant la souscription au Service et /ou utilisées par le Service et collectées par JaekSoft ne le sont que pour le cours normal des affaires ou pour offrir une meilleure qualité de prestation aux Clients.. Le site internet de JaekSoft est déclaré à la CNIL sous le numéro 1517220 en date du 29 juillet 2011. Tout Visiteur Enregistré a le droit d'accès à ses données personnelles. Pour en bénéficier, il suffira d'envoyer un courrier électronique à webmaster@open-search-server.com. Les informations seront retournées sous cinq (5) jours ouvrés.. 10. Interruption du Service. En cas d'inexécution par le Client de l'une de ses Obligations listées à l'article 1.6 ou suite au non respect des conditions d'éligibilité listées à l'article 1.5, JaekSoft se réserve le droit d'interrompre la fourniture du Service.. JaekSoft pourra arrêter définitivement la fourniture du Service si le Client n'a pris les mesures nécessaires pour respecter ses obligations au maximum quinze (15) jours après avoir reçu une demande de JaekSoft par courrier électronique de se conformer à ces obligations.. JaekSoft pourra mettre fin à la fourniture du Service en cas d'inexécution de l'article 2.6 de ces Conditions Générales ou en cas de fourniture de fausses informations lors de la souscription au Service. Une telle rupture ne donnera lieu à aucun remboursement d'éventuelles sommes payées par avance.. 11.- Force majeure. JaekSoft ne pourra pas être tenu pour responsable de l'inexécution partielle ou totale de ses obligations ou de tout retard dans l'exécution de celles-ci, si cette inexécution ou ce retard ont été provoqués par la survenance d'événements imprévisibles, irrésistibles et extérieurs.. Seront notamment considérés comme éléments imprévisibles, irrésistibles et extérieurs, une décision gouvernementale, une guerre, une guerre civile, un sabotage, une catastrophe naturelle, une perturbation dans les sources d'approvisionnement (tels que les communications téléphoniques ou les réseaux de télécommunications, l'électricité ou l'essence), une épidémie, une grève, un incendie, une explosion ou tout autre événement indépendant du contrôle de JaekSoft.. 12. Tolérance. La tolérance de JaekSoft de ne pas se prévaloir, à un moment donné, d’une des stipulations des présentes Conditions Générales concernant les obligations du Client, ne pourra être interprété comme une renonciation à faire valoir ultérieurement cette stipulation ou tout autre disposition de ces Conditions Générales.. 13. Clause de sauvegarde. Si une disposition de ces Conditions Générales est caduque, ou le devient, ou si les Conditions Générales sont entachées d'une lacune, la validité de ses autres dispositions ne s'en trouve pas affectée.. 14. Correspondance. Toutes informations envoyées par une Partie à l'autre seront faites par courrier électronique ci-dessous:. Le Client enverra ses demandes à JaekSoft à l'adresse suivante : contact@open-search-server.com.. JaekSoft enverra ses informations au Client à l'adresse que le disponible dans le Profil du Client.. 15. Droit applicable. Tout litige découlant de l'application des présentes Conditions Générales ou de la fourniture du Service sont  soumis au droit français.. Pour tout litige relatif à la formation, l’interprétation, l’exécution des présentes Conditions Générales, attribution expresse de juridiction est faite aux tribunaux compétents dans le ressort de la Cour d’appel de Paris.. </value></field><field name="timestamp"><value>20111201200239</value></field><field name="type"><value>page</value></field><field name="lang"><value/></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/support_center/not_logged</value></field><field name="urlExact"><value>http://dev.open-search-server.com/support_center/not_logged</value></field><field name="autocomplete"><value>Support Center</value></field><field name="title"><value>Support Center</value></field><field name="titleExact"><value>Support Center</value></field><field name="titlePhonetic"><value>Support Center</value></field><field name="content"><value>Ooops, we are sorry but you can't access the OpenSearchServer Support Center as you have not yet subscribed to this service. You can discover our services and even register to our free offer.. For any question you can send us an email or use on online chat below. We would be glad to help you. </value></field><field name="contentExact"><value>Ooops, we are sorry but you can't access the OpenSearchServer Support Center as you have not yet subscribed to this service. You can discover our services and even register to our free offer.. For any question you can send us an email or use on online chat below. We would be glad to help you. </value></field><field name="contentPhonetic"><value>Ooops, we are sorry but you can't access the OpenSearchServer Support Center as you have not yet subscribed to this service. You can discover our services and even register to our free offer.. For any question you can send us an email or use on online chat below. We would be glad to help you. </value></field><field name="timestamp"><value>20111130141414</value></field><field name="type"><value>page</value></field><field name="lang"><value/></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/monitoring/not_logged</value></field><field name="urlExact"><value>http://dev.open-search-server.com/monitoring/not_logged</value></field><field name="autocomplete"><value>Monitoring Center</value></field><field name="title"><value>Monitoring Center</value></field><field name="titleExact"><value>Monitoring Center</value></field><field name="titlePhonetic"><value>Monitoring Center</value></field><field name="content"><value>Ooops, we are sorry but you can't access the OpenSearchServer Monitoring Center. This feature is reserved to our members who subscribed to one of our Services program and you can test it for free.. For any question you can send us an email or use on online chat below. We would be glad to help you soon.. </value></field><field name="contentExact"><value>Ooops, we are sorry but you can't access the OpenSearchServer Monitoring Center. This feature is reserved to our members who subscribed to one of our Services program and you can test it for free.. For any question you can send us an email or use on online chat below. We would be glad to help you soon.. </value></field><field name="contentPhonetic"><value>Ooops, we are sorry but you can't access the OpenSearchServer Monitoring Center. This feature is reserved to our members who subscribed to one of our Services program and you can test it for free.. For any question you can send us an email or use on online chat below. We would be glad to help you soon.. </value></field><field name="timestamp"><value>20111130141010</value></field><field name="type"><value>page</value></field><field name="lang"><value/></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/services/specific_services</value></field><field name="urlExact"><value>http://dev.open-search-server.com/services/specific_services</value></field><field name="autocomplete"><value>Specific Services</value></field><field name="title"><value>Specific Services</value></field><field name="titleExact"><value>Specific Services</value></field><field name="titlePhonetic"><value>Specific Services</value></field><field name="content"><value>If you wish to know more about our specific services, please contact us.. If you want to describe us your project, please send us your description and we will give you our feedback: describe your project. . Designing new applications / implementations. Defining indexation strategy (crawling),. Model Definition (Fields, Analyzers, Parsers),. Creation of queries,. Relevance analysis. . . Performance / optimization. Remote audit of the customer's platform,. Recommendations, best practices,. Hosting guidelines. Hardware / OS configuration and recommendations.  . . Possible extended SLAs. E-mail or Phone,. Response time: 4 working hours, 1 working day or other,. Yearly contract, or contract by time spent (daily cost). . . . Remote management by our team. Installation, upgrades,. Analysis and editing of parameters,. Diagnostics for better performance,. Periodic monitoring,. Trouble-shooting. . . Programming. Customer application review,. Best practices,. Help on debugging,. Alternative implementation,. Creation of additional functionality.. . . . </value></field><field name="contentExact"><value>If you wish to know more about our specific services, please contact us.. If you want to describe us your project, please send us your description and we will give you our feedback: describe your project. . Designing new applications / implementations. Defining indexation strategy (crawling),. Model Definition (Fields, Analyzers, Parsers),. Creation of queries,. Relevance analysis. . . Performance / optimization. Remote audit of the customer's platform,. Recommendations, best practices,. Hosting guidelines. Hardware / OS configuration and recommendations.  . . Possible extended SLAs. E-mail or Phone,. Response time: 4 working hours, 1 working day or other,. Yearly contract, or contract by time spent (daily cost). . . . Remote management by our team. Installation, upgrades,. Analysis and editing of parameters,. Diagnostics for better performance,. Periodic monitoring,. Trouble-shooting. . . Programming. Customer application review,. Best practices,. Help on debugging,. Alternative implementation,. Creation of additional functionality.. . . . </value></field><field name="contentPhonetic"><value>If you wish to know more about our specific services, please contact us.. If you want to describe us your project, please send us your description and we will give you our feedback: describe your project. . Designing new applications / implementations. Defining indexation strategy (crawling),. Model Definition (Fields, Analyzers, Parsers),. Creation of queries,. Relevance analysis. . . Performance / optimization. Remote audit of the customer's platform,. Recommendations, best practices,. Hosting guidelines. Hardware / OS configuration and recommendations.  . . Possible extended SLAs. E-mail or Phone,. Response time: 4 working hours, 1 working day or other,. Yearly contract, or contract by time spent (daily cost). . . . Remote management by our team. Installation, upgrades,. Analysis and editing of parameters,. Diagnostics for better performance,. Periodic monitoring,. Trouble-shooting. . . Programming. Customer application review,. Best practices,. Help on debugging,. Alternative implementation,. Creation of additional functionality.. . . . </value></field><field name="timestamp"><value>20111208180118</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/community_edition</value></field><field name="urlExact"><value>http://dev.open-search-server.com/community_edition</value></field><field name="autocomplete"><value>Community Edition</value></field><field name="title"><value>Community Edition</value></field><field name="titleExact"><value>Community Edition</value></field><field name="titlePhonetic"><value>Community Edition</value></field><field name="content"><value>OpenSearchServer is a comprehensive solution which we built to help you to create powerful Search Applications and which offers you a full list of advanced features. Even with its high versatility, our solution is always easy to use.. General. English user interface can be easily translated into any other language,. Web-based application with a user-friendly html/Ajax based interface,. Access control list to application and APIs,. Optimized for large data volumes,. Configuration via graphical  interface or via XML configuration files,. Scheduler for management of periodic tasks.. . Search functions. Web interface with search templates. Advanced full-text search features. Advanced boolean search with query language. Clustered results with faceting and collapsing. Filter search using sub-requests (including negative filters). Relevance customization using algebraic functions. Activation and sequencing of user-defined filters. Search suggestion facility (auto-completion). Performance optimization using multi-level caches. Hot changes consideration   . Full WebServices API (XML over HTTP). . Parsers. Parsers recognize and analyze the MIME type of crawled documents or file extensions and then automatically extract information necessary for indexing (Title, Text, Author, hypertext links, etc.).. Supported formats are:. HTML / XHTML,. MS Office documents (Word, Excel, Powerpoint),. OpenOffice documents,. Adobe pdf,. RTF, Plaintext,. Audio files metadata (wav, mp3, AIFF, Ogg). Torrent files. . . . Crawlers. This is the module which creates the index that will process the queries and return answers.. OpenSearchServer is equipped with several crawlers that each allow you to browse and index different categories of content:. The web crawler for internet, extranet and intranet,. The file systems crawler for Windows, Macintosh and Linux / Unix,. The database crawler for all JDBC databases.. . Each crawler offers a list of parameters allowing developers to customize its behavior.. Filter inclusion or exclusion with wildcards ,. Session parameters  removal, SQL join and linked files support. Screenshot capture,. Sitemap import, etc…. . Indexation. Supports16 languages,. Define scheme with document fields,. Parameters are not dependent on analyzers in each language,. Several available filters: n-gram, lemmatization, shingle, stripping diacritic from words, …. Automatic language recognition,. Word synonyms and expression synonyms,. Possibility to add/remove documents using tab interface or APIs,. Index replication,. Indexed terms expert with frequencies.. . Monitoring module. This external module monitors working OpenSearchServer instances and produces a daily activity report, performance analysis, memory and hard drive recommendations when reaching limits.. . . </value></field><field name="contentExact"><value>OpenSearchServer is a comprehensive solution which we built to help you to create powerful Search Applications and which offers you a full list of advanced features. Even with its high versatility, our solution is always easy to use.. General. English user interface can be easily translated into any other language,. Web-based application with a user-friendly html/Ajax based interface,. Access control list to application and APIs,. Optimized for large data volumes,. Configuration via graphical  interface or via XML configuration files,. Scheduler for management of periodic tasks.. . Search functions. Web interface with search templates. Advanced full-text search features. Advanced boolean search with query language. Clustered results with faceting and collapsing. Filter search using sub-requests (including negative filters). Relevance customization using algebraic functions. Activation and sequencing of user-defined filters. Search suggestion facility (auto-completion). Performance optimization using multi-level caches. Hot changes consideration   . Full WebServices API (XML over HTTP). . Parsers. Parsers recognize and analyze the MIME type of crawled documents or file extensions and then automatically extract information necessary for indexing (Title, Text, Author, hypertext links, etc.).. Supported formats are:. HTML / XHTML,. MS Office documents (Word, Excel, Powerpoint),. OpenOffice documents,. Adobe pdf,. RTF, Plaintext,. Audio files metadata (wav, mp3, AIFF, Ogg). Torrent files. . . . Crawlers. This is the module which creates the index that will process the queries and return answers.. OpenSearchServer is equipped with several crawlers that each allow you to browse and index different categories of content:. The web crawler for internet, extranet and intranet,. The file systems crawler for Windows, Macintosh and Linux / Unix,. The database crawler for all JDBC databases.. . Each crawler offers a list of parameters allowing developers to customize its behavior.. Filter inclusion or exclusion with wildcards ,. Session parameters  removal, SQL join and linked files support. Screenshot capture,. Sitemap import, etc…. . Indexation. Supports16 languages,. Define scheme with document fields,. Parameters are not dependent on analyzers in each language,. Several available filters: n-gram, lemmatization, shingle, stripping diacritic from words, …. Automatic language recognition,. Word synonyms and expression synonyms,. Possibility to add/remove documents using tab interface or APIs,. Index replication,. Indexed terms expert with frequencies.. . Monitoring module. This external module monitors working OpenSearchServer instances and produces a daily activity report, performance analysis, memory and hard drive recommendations when reaching limits.. . . </value></field><field name="contentPhonetic"><value>OpenSearchServer is a comprehensive solution which we built to help you to create powerful Search Applications and which offers you a full list of advanced features. Even with its high versatility, our solution is always easy to use.. General. English user interface can be easily translated into any other language,. Web-based application with a user-friendly html/Ajax based interface,. Access control list to application and APIs,. Optimized for large data volumes,. Configuration via graphical  interface or via XML configuration files,. Scheduler for management of periodic tasks.. . Search functions. Web interface with search templates. Advanced full-text search features. Advanced boolean search with query language. Clustered results with faceting and collapsing. Filter search using sub-requests (including negative filters). Relevance customization using algebraic functions. Activation and sequencing of user-defined filters. Search suggestion facility (auto-completion). Performance optimization using multi-level caches. Hot changes consideration   . Full WebServices API (XML over HTTP). . Parsers. Parsers recognize and analyze the MIME type of crawled documents or file extensions and then automatically extract information necessary for indexing (Title, Text, Author, hypertext links, etc.).. Supported formats are:. HTML / XHTML,. MS Office documents (Word, Excel, Powerpoint),. OpenOffice documents,. Adobe pdf,. RTF, Plaintext,. Audio files metadata (wav, mp3, AIFF, Ogg). Torrent files. . . . Crawlers. This is the module which creates the index that will process the queries and return answers.. OpenSearchServer is equipped with several crawlers that each allow you to browse and index different categories of content:. The web crawler for internet, extranet and intranet,. The file systems crawler for Windows, Macintosh and Linux / Unix,. The database crawler for all JDBC databases.. . Each crawler offers a list of parameters allowing developers to customize its behavior.. Filter inclusion or exclusion with wildcards ,. Session parameters  removal, SQL join and linked files support. Screenshot capture,. Sitemap import, etc…. . Indexation. Supports16 languages,. Define scheme with document fields,. Parameters are not dependent on analyzers in each language,. Several available filters: n-gram, lemmatization, shingle, stripping diacritic from words, …. Automatic language recognition,. Word synonyms and expression synonyms,. Possibility to add/remove documents using tab interface or APIs,. Index replication,. Indexed terms expert with frequencies.. . Monitoring module. This external module monitors working OpenSearchServer instances and produces a daily activity report, performance analysis, memory and hard drive recommendations when reaching limits.. . . </value></field><field name="timestamp"><value>20110612145426</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/58</value></field><field name="urlExact"><value>http://dev.open-search-server.com/58</value></field><field name="autocomplete"><value>Customers</value></field><field name="title"><value>Customers</value></field><field name="titleExact"><value>Customers</value></field><field name="titlePhonetic"><value>Customers</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110610221901</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/57</value></field><field name="urlExact"><value>http://dev.open-search-server.com/57</value></field><field name="autocomplete"><value>Business Case</value></field><field name="title"><value>Business Case</value></field><field name="titleExact"><value>Business Case</value></field><field name="titlePhonetic"><value>Business Case</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110610221534</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/56</value></field><field name="urlExact"><value>http://dev.open-search-server.com/56</value></field><field name="autocomplete"><value>Products</value></field><field name="title"><value>Products</value></field><field name="titleExact"><value>Products</value></field><field name="titlePhonetic"><value>Products</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110610221127</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/55</value></field><field name="urlExact"><value>http://dev.open-search-server.com/55</value></field><field name="autocomplete"><value>One Feature</value></field><field name="title"><value>One Feature</value></field><field name="titleExact"><value>One Feature</value></field><field name="titlePhonetic"><value>One Feature</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110610220744</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/54</value></field><field name="urlExact"><value>http://dev.open-search-server.com/54</value></field><field name="autocomplete"><value>White paper</value></field><field name="title"><value>White paper</value></field><field name="titleExact"><value>White paper</value></field><field name="titlePhonetic"><value>White paper</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110610220210</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/81</value></field><field name="urlExact"><value>http://dev.open-search-server.com/81</value></field><field name="autocomplete"><value>Customers</value></field><field name="title"><value>Customers</value></field><field name="titleExact"><value>Customers</value></field><field name="titlePhonetic"><value>Customers</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110612174007</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/43</value></field><field name="urlExact"><value>http://dev.open-search-server.com/43</value></field><field name="autocomplete"><value>Webcasts</value></field><field name="title"><value>Webcasts</value></field><field name="titleExact"><value>Webcasts</value></field><field name="titlePhonetic"><value>Webcasts</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110605171856</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/41</value></field><field name="urlExact"><value>http://dev.open-search-server.com/41</value></field><field name="autocomplete"><value>Submit a project</value></field><field name="title"><value>Submit a project</value></field><field name="titleExact"><value>Submit a project</value></field><field name="titlePhonetic"><value>Submit a project</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110605171709</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/jobs</value></field><field name="urlExact"><value>http://dev.open-search-server.com/jobs</value></field><field name="autocomplete"><value>Jobs</value></field><field name="title"><value>Jobs</value></field><field name="titleExact"><value>Jobs</value></field><field name="titlePhonetic"><value>Jobs</value></field><field name="content"><value> At OpenSearchServer, we place a lot of importance on people and we need your talents to expand our team.. If you’re the kind of person who loves a challenge, does what it takes to get the job done and has a passion for working in fast-paced entrepreneurial environments – we want to hear from you!. You will find our current opportunities below and if you don't see the role you’ve been dreaming of, come and visit us soon again or send your resume to us at jobs@open-search-server.com explaining why you think we should consider having a meeting with you.. For all our positions we have the same requirements:. Appropriate professional experience,. First-class educational background,. Autonomy (ability to work in a virtual team) and accountability,. Positive thinking, honesty, openness and a strong desire to be part of a challenging project,. Working language is English so we need fluency in English and a second language,. Very good experience of computer and communication tools.. . </value></field><field name="contentExact"><value> At OpenSearchServer, we place a lot of importance on people and we need your talents to expand our team.. If you’re the kind of person who loves a challenge, does what it takes to get the job done and has a passion for working in fast-paced entrepreneurial environments – we want to hear from you!. You will find our current opportunities below and if you don't see the role you’ve been dreaming of, come and visit us soon again or send your resume to us at jobs@open-search-server.com explaining why you think we should consider having a meeting with you.. For all our positions we have the same requirements:. Appropriate professional experience,. First-class educational background,. Autonomy (ability to work in a virtual team) and accountability,. Positive thinking, honesty, openness and a strong desire to be part of a challenging project,. Working language is English so we need fluency in English and a second language,. Very good experience of computer and communication tools.. . </value></field><field name="contentPhonetic"><value> At OpenSearchServer, we place a lot of importance on people and we need your talents to expand our team.. If you’re the kind of person who loves a challenge, does what it takes to get the job done and has a passion for working in fast-paced entrepreneurial environments – we want to hear from you!. You will find our current opportunities below and if you don't see the role you’ve been dreaming of, come and visit us soon again or send your resume to us at jobs@open-search-server.com explaining why you think we should consider having a meeting with you.. For all our positions we have the same requirements:. Appropriate professional experience,. First-class educational background,. Autonomy (ability to work in a virtual team) and accountability,. Positive thinking, honesty, openness and a strong desire to be part of a challenging project,. Working language is English so we need fluency in English and a second language,. Very good experience of computer and communication tools.. . </value></field><field name="timestamp"><value>20110605171445</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/news</value></field><field name="urlExact"><value>http://dev.open-search-server.com/news</value></field><field name="autocomplete"><value>News</value></field><field name="title"><value>News</value></field><field name="titleExact"><value>News</value></field><field name="titlePhonetic"><value>News</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110605171415</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/company/management</value></field><field name="urlExact"><value>http://dev.open-search-server.com/company/management</value></field><field name="autocomplete"><value>Management</value></field><field name="title"><value>Management</value></field><field name="titleExact"><value>Management</value></field><field name="titlePhonetic"><value>Management</value></field><field name="content"><value>Raphael Perez, CEO, founder. . Raphael’s previous job was at Steek, a French online storage startup. As VP Sales at Steek, Raphael was instrumental in the growth of the company. As the leader of the Sales and Business development teams, he succeeded in bringing the company to a position of international leadership, which led to its purchase by F-Secure, the worldwide leader in VAS security solutions for ISPs.. With close to 22 years of experience in the software industry and 16 years of experience in the Internet business, Raphael has held senior roles in Sales, Marketing and international expansion for well-established companies and start-ups (e.g. Steek, CheckPoint, L&amp;A, Lotus and Borland). Raphael has also been an entrepreneur and he has sold 2 companies to NASDAQ-listed companies.. Raphael’s experience is in creating and executing strategic plans and building multi-cultural teams to meet ambitious objectives without borders and through international partnerships.. In OpenSearchServer, Raphael will set up and execute the growth plan and will help to ensure that solution roadmap meets expectations.. Raphael Perez has a Master’s in MIS (MIAGE) and a Management degree (DEA) from Paris Dauphine University..  . Emmanuel Keller, CTO, founder. . In his last job, Emmanuel was the GISI Interactive CIO. GISI is the IT division of Infopro Group a French B2B media group with online and offline activities.. Emmanuel initiated and led a project at GISI to provide a better quality of online activities. In 2008, he and his team succeeded in developing advanced software which allows Infopro Group to run many strategic applications that represent several tens of millions of dollars in yearly revenues for them. Emmanuel left this position in December 2009, made a deal to acquire the software, and started a new company to launch OpenSearchServer. In his 15 years career, Emmanuel has held every position in programming teams, including managing a team of 25 engineers.. Since a very young age, Emmanuel has been fond of programming and for him creating software always brings advantages and adds more value for users.. His past jobs with technology leaders such as Lagardère, Club Internet and EBP taught him to manage a team under pressure and meet delivery goals while maintaining high quality standards.. In the OpenSearchServer project, Emmanuel is in charge of all technical and programming activities (Product development, R&amp;D, Support, SaaS and hosting, Professional services).. Emmanuel has a degree in Computer Engineering.. </value></field><field name="contentExact"><value>Raphael Perez, CEO, founder. . Raphael’s previous job was at Steek, a French online storage startup. As VP Sales at Steek, Raphael was instrumental in the growth of the company. As the leader of the Sales and Business development teams, he succeeded in bringing the company to a position of international leadership, which led to its purchase by F-Secure, the worldwide leader in VAS security solutions for ISPs.. With close to 22 years of experience in the software industry and 16 years of experience in the Internet business, Raphael has held senior roles in Sales, Marketing and international expansion for well-established companies and start-ups (e.g. Steek, CheckPoint, L&amp;A, Lotus and Borland). Raphael has also been an entrepreneur and he has sold 2 companies to NASDAQ-listed companies.. Raphael’s experience is in creating and executing strategic plans and building multi-cultural teams to meet ambitious objectives without borders and through international partnerships.. In OpenSearchServer, Raphael will set up and execute the growth plan and will help to ensure that solution roadmap meets expectations.. Raphael Perez has a Master’s in MIS (MIAGE) and a Management degree (DEA) from Paris Dauphine University..  . Emmanuel Keller, CTO, founder. . In his last job, Emmanuel was the GISI Interactive CIO. GISI is the IT division of Infopro Group a French B2B media group with online and offline activities.. Emmanuel initiated and led a project at GISI to provide a better quality of online activities. In 2008, he and his team succeeded in developing advanced software which allows Infopro Group to run many strategic applications that represent several tens of millions of dollars in yearly revenues for them. Emmanuel left this position in December 2009, made a deal to acquire the software, and started a new company to launch OpenSearchServer. In his 15 years career, Emmanuel has held every position in programming teams, including managing a team of 25 engineers.. Since a very young age, Emmanuel has been fond of programming and for him creating software always brings advantages and adds more value for users.. His past jobs with technology leaders such as Lagardère, Club Internet and EBP taught him to manage a team under pressure and meet delivery goals while maintaining high quality standards.. In the OpenSearchServer project, Emmanuel is in charge of all technical and programming activities (Product development, R&amp;D, Support, SaaS and hosting, Professional services).. Emmanuel has a degree in Computer Engineering.. </value></field><field name="contentPhonetic"><value>Raphael Perez, CEO, founder. . Raphael’s previous job was at Steek, a French online storage startup. As VP Sales at Steek, Raphael was instrumental in the growth of the company. As the leader of the Sales and Business development teams, he succeeded in bringing the company to a position of international leadership, which led to its purchase by F-Secure, the worldwide leader in VAS security solutions for ISPs.. With close to 22 years of experience in the software industry and 16 years of experience in the Internet business, Raphael has held senior roles in Sales, Marketing and international expansion for well-established companies and start-ups (e.g. Steek, CheckPoint, L&amp;A, Lotus and Borland). Raphael has also been an entrepreneur and he has sold 2 companies to NASDAQ-listed companies.. Raphael’s experience is in creating and executing strategic plans and building multi-cultural teams to meet ambitious objectives without borders and through international partnerships.. In OpenSearchServer, Raphael will set up and execute the growth plan and will help to ensure that solution roadmap meets expectations.. Raphael Perez has a Master’s in MIS (MIAGE) and a Management degree (DEA) from Paris Dauphine University..  . Emmanuel Keller, CTO, founder. . In his last job, Emmanuel was the GISI Interactive CIO. GISI is the IT division of Infopro Group a French B2B media group with online and offline activities.. Emmanuel initiated and led a project at GISI to provide a better quality of online activities. In 2008, he and his team succeeded in developing advanced software which allows Infopro Group to run many strategic applications that represent several tens of millions of dollars in yearly revenues for them. Emmanuel left this position in December 2009, made a deal to acquire the software, and started a new company to launch OpenSearchServer. In his 15 years career, Emmanuel has held every position in programming teams, including managing a team of 25 engineers.. Since a very young age, Emmanuel has been fond of programming and for him creating software always brings advantages and adds more value for users.. His past jobs with technology leaders such as Lagardère, Club Internet and EBP taught him to manage a team under pressure and meet delivery goals while maintaining high quality standards.. In the OpenSearchServer project, Emmanuel is in charge of all technical and programming activities (Product development, R&amp;D, Support, SaaS and hosting, Professional services).. Emmanuel has a degree in Computer Engineering.. </value></field><field name="timestamp"><value>20110605171338</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/company/about_us</value></field><field name="urlExact"><value>http://dev.open-search-server.com/company/about_us</value></field><field name="autocomplete"><value>About us</value></field><field name="title"><value>About us</value></field><field name="titleExact"><value>About us</value></field><field name="titlePhonetic"><value>About us</value></field><field name="content"><value>OpenSearchServer began in 2007 in Infopro Communications, a French B2B media group with online and offline activities in news and information brokerage for 5 vertical segments.. Because there wasn’t any existing Search solution which offered an appropriate mix of features, price and ease of use, it was decided to create some software internally which would use the most advanced Open source components available and provide unsurpassed functionality. The new software would offer all the necessary modules for professional Enterprise Search applications and would become a comprehensive solution that could be used in many different internal applications. The new software would be called OpenSearchServer.. Right from the start, this project was led by Emmanuel Keller, CIO of the group, who had a team of 20 engineers, of whom 3 were dedicated to the project.. In 2008, the first application was created with OpenSearchServer. Results were so positive that a year later, OpenSearchServer was in use in 10 more applications.. The quality of the software, and the efficiency of the applications which were produced with it, convinced Emmanuel that a larger group of customers would be happy to use it. After some meetings with the CEO of the Infopro group, they reached an agreement. He resigned from his position and acquired all rights to OpenSearchServer in December 2009. Infopro Communications became his first customer and Emmanuel launched the new company in February 2010.. After thorough analysis of the market, the design of an ambitious roadmap and the signing of the first contracts, a group of investors led by Kima Ventures provided the first round of financing in February 2011.. Since then, the company has redoubled its efforts to grow the team, attract more customers and write the history of the young company.. Address :. Paris Incubateurs - Technologies Numeriques. 15 Rue Jean-Baptiste Berlier. 75013 Paris. France. contact@open-search-server.com. </value></field><field name="contentExact"><value>OpenSearchServer began in 2007 in Infopro Communications, a French B2B media group with online and offline activities in news and information brokerage for 5 vertical segments.. Because there wasn’t any existing Search solution which offered an appropriate mix of features, price and ease of use, it was decided to create some software internally which would use the most advanced Open source components available and provide unsurpassed functionality. The new software would offer all the necessary modules for professional Enterprise Search applications and would become a comprehensive solution that could be used in many different internal applications. The new software would be called OpenSearchServer.. Right from the start, this project was led by Emmanuel Keller, CIO of the group, who had a team of 20 engineers, of whom 3 were dedicated to the project.. In 2008, the first application was created with OpenSearchServer. Results were so positive that a year later, OpenSearchServer was in use in 10 more applications.. The quality of the software, and the efficiency of the applications which were produced with it, convinced Emmanuel that a larger group of customers would be happy to use it. After some meetings with the CEO of the Infopro group, they reached an agreement. He resigned from his position and acquired all rights to OpenSearchServer in December 2009. Infopro Communications became his first customer and Emmanuel launched the new company in February 2010.. After thorough analysis of the market, the design of an ambitious roadmap and the signing of the first contracts, a group of investors led by Kima Ventures provided the first round of financing in February 2011.. Since then, the company has redoubled its efforts to grow the team, attract more customers and write the history of the young company.. Address :. Paris Incubateurs - Technologies Numeriques. 15 Rue Jean-Baptiste Berlier. 75013 Paris. France. contact@open-search-server.com. </value></field><field name="contentPhonetic"><value>OpenSearchServer began in 2007 in Infopro Communications, a French B2B media group with online and offline activities in news and information brokerage for 5 vertical segments.. Because there wasn’t any existing Search solution which offered an appropriate mix of features, price and ease of use, it was decided to create some software internally which would use the most advanced Open source components available and provide unsurpassed functionality. The new software would offer all the necessary modules for professional Enterprise Search applications and would become a comprehensive solution that could be used in many different internal applications. The new software would be called OpenSearchServer.. Right from the start, this project was led by Emmanuel Keller, CIO of the group, who had a team of 20 engineers, of whom 3 were dedicated to the project.. In 2008, the first application was created with OpenSearchServer. Results were so positive that a year later, OpenSearchServer was in use in 10 more applications.. The quality of the software, and the efficiency of the applications which were produced with it, convinced Emmanuel that a larger group of customers would be happy to use it. After some meetings with the CEO of the Infopro group, they reached an agreement. He resigned from his position and acquired all rights to OpenSearchServer in December 2009. Infopro Communications became his first customer and Emmanuel launched the new company in February 2010.. After thorough analysis of the market, the design of an ambitious roadmap and the signing of the first contracts, a group of investors led by Kima Ventures provided the first round of financing in February 2011.. Since then, the company has redoubled its efforts to grow the team, attract more customers and write the history of the young company.. Address :. Paris Incubateurs - Technologies Numeriques. 15 Rue Jean-Baptiste Berlier. 75013 Paris. France. contact@open-search-server.com. </value></field><field name="timestamp"><value>20110605171214</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/download</value></field><field name="urlExact"><value>http://dev.open-search-server.com/download</value></field><field name="autocomplete"><value>Download</value></field><field name="title"><value>Download</value></field><field name="titleExact"><value>Download</value></field><field name="titlePhonetic"><value>Download</value></field><field name="content"><value> Community Edition. New release candidate available: v1.2.4-rc3. For Windows, Mac OS X: open-search-server-1.2.4-rc3.zip. For Linux, Solaris, BSD, Unix: open-search-server-1.2.4-rc3.tar.gz. CHANGELOG.txt. All files: JAVA, PHP and ASP.NET libraries. . Current stable and certified release: v1.2.3. For Windows, Mac OS X: open-search-server-1.2.3.zip. For Linux, Solaris, BSD, Unix: open-search-server-1.2.3.tar.gz. CHANGELOG.txt. All files: JAVA, PHP and ASP.NET libraries. . Older stable release: v1.2.1. open-search-server-1.2.1.zip. open-search-server-1.2.1.tar.gz. CHANGELOG.txt . . . . Versioning principles. Release Candidate version. It is the latest available version that will be shortly certified. It is not intended to be corrected anymore.. Stable version. Stability is a subjective judgement and you should always read carrefully the change log txt for any version you intend to make use of. Stable releases may contain a small number of relatively minor bugs. Stable releases are intended for production use and are expected to run stably for extended periods of time.. Beta version. Releases may contain some untested functionality and / or a number of relatively minor bugs. Beta releases are not expected to run stably.. Alpha version. Releases may contain large amounts of untested / missing functionality required by  the specification and / or significant bugs and are not expected to run stably for any length of time.. . . </value></field><field name="contentExact"><value> Community Edition. New release candidate available: v1.2.4-rc3. For Windows, Mac OS X: open-search-server-1.2.4-rc3.zip. For Linux, Solaris, BSD, Unix: open-search-server-1.2.4-rc3.tar.gz. CHANGELOG.txt. All files: JAVA, PHP and ASP.NET libraries. . Current stable and certified release: v1.2.3. For Windows, Mac OS X: open-search-server-1.2.3.zip. For Linux, Solaris, BSD, Unix: open-search-server-1.2.3.tar.gz. CHANGELOG.txt. All files: JAVA, PHP and ASP.NET libraries. . Older stable release: v1.2.1. open-search-server-1.2.1.zip. open-search-server-1.2.1.tar.gz. CHANGELOG.txt . . . . Versioning principles. Release Candidate version. It is the latest available version that will be shortly certified. It is not intended to be corrected anymore.. Stable version. Stability is a subjective judgement and you should always read carrefully the change log txt for any version you intend to make use of. Stable releases may contain a small number of relatively minor bugs. Stable releases are intended for production use and are expected to run stably for extended periods of time.. Beta version. Releases may contain some untested functionality and / or a number of relatively minor bugs. Beta releases are not expected to run stably.. Alpha version. Releases may contain large amounts of untested / missing functionality required by  the specification and / or significant bugs and are not expected to run stably for any length of time.. . . </value></field><field name="contentPhonetic"><value> Community Edition. New release candidate available: v1.2.4-rc3. For Windows, Mac OS X: open-search-server-1.2.4-rc3.zip. For Linux, Solaris, BSD, Unix: open-search-server-1.2.4-rc3.tar.gz. CHANGELOG.txt. All files: JAVA, PHP and ASP.NET libraries. . Current stable and certified release: v1.2.3. For Windows, Mac OS X: open-search-server-1.2.3.zip. For Linux, Solaris, BSD, Unix: open-search-server-1.2.3.tar.gz. CHANGELOG.txt. All files: JAVA, PHP and ASP.NET libraries. . Older stable release: v1.2.1. open-search-server-1.2.1.zip. open-search-server-1.2.1.tar.gz. CHANGELOG.txt . . . . Versioning principles. Release Candidate version. It is the latest available version that will be shortly certified. It is not intended to be corrected anymore.. Stable version. Stability is a subjective judgement and you should always read carrefully the change log txt for any version you intend to make use of. Stable releases may contain a small number of relatively minor bugs. Stable releases are intended for production use and are expected to run stably for extended periods of time.. Beta version. Releases may contain some untested functionality and / or a number of relatively minor bugs. Beta releases are not expected to run stably.. Alpha version. Releases may contain large amounts of untested / missing functionality required by  the specification and / or significant bugs and are not expected to run stably for any length of time.. . . </value></field><field name="timestamp"><value>20110605164322</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/fr/home</value></field><field name="urlExact"><value>http://dev.open-search-server.com/fr/home</value></field><field name="autocomplete"><value> Intégrez un vrai moteur de recherche dans votre application</value></field><field name="title"><value> Intégrez un vrai moteur de recherche dans votre application</value></field><field name="titleExact"><value> Intégrez un vrai moteur de recherche dans votre application</value></field><field name="titlePhonetic"><value> Intégrez un vrai moteur de recherche dans votre application</value></field><field name="content"><value>OpenSearchServer est un logiciel de moteur de recherche construit autour des meilleurs outils open source.. Offrez une expérience de recherche probante à vos utilisateurs: Boite de suggestion (autocompletion), correction orthographique, recherche avec facettes et filtres, personnalisation de la pertinence.. Indexez l'ensemble de vos données: Sites Internet / Extranet, documents (Office, PDF, medias, ...), bases de données et/ou fichiers XML.. . Facilement et rapidement: Intégré à vos applications, sites internet editoriaux, sites e-commerce, quelque soit la technologie employée (PHP, .NET, Java, Drupal, Wordpress, ...).. </value></field><field name="contentExact"><value>OpenSearchServer est un logiciel de moteur de recherche construit autour des meilleurs outils open source.. Offrez une expérience de recherche probante à vos utilisateurs: Boite de suggestion (autocompletion), correction orthographique, recherche avec facettes et filtres, personnalisation de la pertinence.. Indexez l'ensemble de vos données: Sites Internet / Extranet, documents (Office, PDF, medias, ...), bases de données et/ou fichiers XML.. . Facilement et rapidement: Intégré à vos applications, sites internet editoriaux, sites e-commerce, quelque soit la technologie employée (PHP, .NET, Java, Drupal, Wordpress, ...).. </value></field><field name="contentPhonetic"><value>OpenSearchServer est un logiciel de moteur de recherche construit autour des meilleurs outils open source.. Offrez une expérience de recherche probante à vos utilisateurs: Boite de suggestion (autocompletion), correction orthographique, recherche avec facettes et filtres, personnalisation de la pertinence.. Indexez l'ensemble de vos données: Sites Internet / Extranet, documents (Office, PDF, medias, ...), bases de données et/ou fichiers XML.. . Facilement et rapidement: Intégré à vos applications, sites internet editoriaux, sites e-commerce, quelque soit la technologie employée (PHP, .NET, Java, Drupal, Wordpress, ...).. </value></field><field name="timestamp"><value>20120330114522</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/13</value></field><field name="urlExact"><value>http://dev.open-search-server.com/13</value></field><field name="autocomplete"><value>Society</value></field><field name="title"><value>Society</value></field><field name="titleExact"><value>Society</value></field><field name="titlePhonetic"><value>Society</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20110604135722</value></field><field name="type"><value>page</value></field><field name="lang"><value>fr</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/legal</value></field><field name="urlExact"><value>http://dev.open-search-server.com/legal</value></field><field name="autocomplete"><value>Legal information and privacy policy</value></field><field name="title"><value>Legal information and privacy policy</value></field><field name="titleExact"><value>Legal information and privacy policy</value></field><field name="titlePhonetic"><value>Legal information and privacy policy</value></field><field name="content"><value> Effective June 30th, 2011. The website www.open-search-server.com is created and published by Jaeksoft SaRL, company registered with the Bobigny Commerce Registry (RCS 520 295 551), with its headquarters located 89 Rue de Meaux, 93410 Vaujours (France),. Intellectual property. The contents of this website are property of Jaeksoft SaRL and are protected by copyright law and trademark law. Text, graphics, visual elements, design, concepts, databases, collections of links, hyper text markup language (HTML) code, scripts and all products sold and services offered may not be copied, published, reengineered, decompiled, translated, mirrored, hosted, or otherwise distributed by any means without explicit written permission of Jaeksoft or licensing possibilities.. Trademarks appearing on this site are protected by law and you cannot use any such trademarks in any fashion without the express written permission of the trademark owner.. Collection and use of collected personal data. Jaeksoft collects information from its website visitors in several areas of the site by two means:. Forms filled by the visitors of the website. Common tools used to collect navigational information. . This information collected is only used for normal business reasons and to offer a better service to our users. . Access to your personal information. In France, the website has been declared to CNIL on an application quoted 1517220 dated of June 29th, 2011. Any registered visitor of our website has a right to access personal information we recorded. In order to get this information returned to you within 5 working days, please send us a request at webmaster@open-search-server.com. . Security. We follow generally accepted industry standards to protect the personal information submitted to us, both during transmission and once we receive it. No method of transmission over the Internet, or method of electronic storage, is 100% secure, however. Therefore, while we strive to use commercially acceptable means to protect your personal information, we cannot guarantee its absolute security. If you have any questions about security on our website, you can send email to us at webmaster@open-search-server.com.. Sharing of collected information. Jaeksoft does not share, sell, rent or trade personally identifiable information with third parties for promotional purposes. Jaeksoft will not disclose personal information to third parties other than to its Group members, its partners for the purposes of fulfilling specific requests of a website visitor.. Liability. Jaeksoft does not warrant that any material, software or function presented on this site will be uninterrupted or error-free, that defects will be corrected, or that this site or the server that makes it available are free of viruses or other harmful elements. Jaeksoft does not offer a warranty or make any representations regarding the results of the use of the materials in this site in terms of their correctness, accuracy, reliability, risk of injury to your computer or commercial advantage to you. Under no circumstances, shall Jaeksoft be liable for any special or consequential damages that result from the use of, or the inability to use, the tools or services offered to you via this site, or by this website.. Hosting. www.open-search-server.com is hosted by Hetzner Online AG, a German company located, Stuttgarter St. 1, 91710 Gunzenhausen, Germany.. Contacts. You may contact Jaeksoft for any question about how using this website or any legal matter related to privacy by sending an e-mail to webmaster@open-search-server.com or by ordinary mail at our headquarters address.. </value></field><field name="contentExact"><value> Effective June 30th, 2011. The website www.open-search-server.com is created and published by Jaeksoft SaRL, company registered with the Bobigny Commerce Registry (RCS 520 295 551), with its headquarters located 89 Rue de Meaux, 93410 Vaujours (France),. Intellectual property. The contents of this website are property of Jaeksoft SaRL and are protected by copyright law and trademark law. Text, graphics, visual elements, design, concepts, databases, collections of links, hyper text markup language (HTML) code, scripts and all products sold and services offered may not be copied, published, reengineered, decompiled, translated, mirrored, hosted, or otherwise distributed by any means without explicit written permission of Jaeksoft or licensing possibilities.. Trademarks appearing on this site are protected by law and you cannot use any such trademarks in any fashion without the express written permission of the trademark owner.. Collection and use of collected personal data. Jaeksoft collects information from its website visitors in several areas of the site by two means:. Forms filled by the visitors of the website. Common tools used to collect navigational information. . This information collected is only used for normal business reasons and to offer a better service to our users. . Access to your personal information. In France, the website has been declared to CNIL on an application quoted 1517220 dated of June 29th, 2011. Any registered visitor of our website has a right to access personal information we recorded. In order to get this information returned to you within 5 working days, please send us a request at webmaster@open-search-server.com. . Security. We follow generally accepted industry standards to protect the personal information submitted to us, both during transmission and once we receive it. No method of transmission over the Internet, or method of electronic storage, is 100% secure, however. Therefore, while we strive to use commercially acceptable means to protect your personal information, we cannot guarantee its absolute security. If you have any questions about security on our website, you can send email to us at webmaster@open-search-server.com.. Sharing of collected information. Jaeksoft does not share, sell, rent or trade personally identifiable information with third parties for promotional purposes. Jaeksoft will not disclose personal information to third parties other than to its Group members, its partners for the purposes of fulfilling specific requests of a website visitor.. Liability. Jaeksoft does not warrant that any material, software or function presented on this site will be uninterrupted or error-free, that defects will be corrected, or that this site or the server that makes it available are free of viruses or other harmful elements. Jaeksoft does not offer a warranty or make any representations regarding the results of the use of the materials in this site in terms of their correctness, accuracy, reliability, risk of injury to your computer or commercial advantage to you. Under no circumstances, shall Jaeksoft be liable for any special or consequential damages that result from the use of, or the inability to use, the tools or services offered to you via this site, or by this website.. Hosting. www.open-search-server.com is hosted by Hetzner Online AG, a German company located, Stuttgarter St. 1, 91710 Gunzenhausen, Germany.. Contacts. You may contact Jaeksoft for any question about how using this website or any legal matter related to privacy by sending an e-mail to webmaster@open-search-server.com or by ordinary mail at our headquarters address.. </value></field><field name="contentPhonetic"><value> Effective June 30th, 2011. The website www.open-search-server.com is created and published by Jaeksoft SaRL, company registered with the Bobigny Commerce Registry (RCS 520 295 551), with its headquarters located 89 Rue de Meaux, 93410 Vaujours (France),. Intellectual property. The contents of this website are property of Jaeksoft SaRL and are protected by copyright law and trademark law. Text, graphics, visual elements, design, concepts, databases, collections of links, hyper text markup language (HTML) code, scripts and all products sold and services offered may not be copied, published, reengineered, decompiled, translated, mirrored, hosted, or otherwise distributed by any means without explicit written permission of Jaeksoft or licensing possibilities.. Trademarks appearing on this site are protected by law and you cannot use any such trademarks in any fashion without the express written permission of the trademark owner.. Collection and use of collected personal data. Jaeksoft collects information from its website visitors in several areas of the site by two means:. Forms filled by the visitors of the website. Common tools used to collect navigational information. . This information collected is only used for normal business reasons and to offer a better service to our users. . Access to your personal information. In France, the website has been declared to CNIL on an application quoted 1517220 dated of June 29th, 2011. Any registered visitor of our website has a right to access personal information we recorded. In order to get this information returned to you within 5 working days, please send us a request at webmaster@open-search-server.com. . Security. We follow generally accepted industry standards to protect the personal information submitted to us, both during transmission and once we receive it. No method of transmission over the Internet, or method of electronic storage, is 100% secure, however. Therefore, while we strive to use commercially acceptable means to protect your personal information, we cannot guarantee its absolute security. If you have any questions about security on our website, you can send email to us at webmaster@open-search-server.com.. Sharing of collected information. Jaeksoft does not share, sell, rent or trade personally identifiable information with third parties for promotional purposes. Jaeksoft will not disclose personal information to third parties other than to its Group members, its partners for the purposes of fulfilling specific requests of a website visitor.. Liability. Jaeksoft does not warrant that any material, software or function presented on this site will be uninterrupted or error-free, that defects will be corrected, or that this site or the server that makes it available are free of viruses or other harmful elements. Jaeksoft does not offer a warranty or make any representations regarding the results of the use of the materials in this site in terms of their correctness, accuracy, reliability, risk of injury to your computer or commercial advantage to you. Under no circumstances, shall Jaeksoft be liable for any special or consequential damages that result from the use of, or the inability to use, the tools or services offered to you via this site, or by this website.. Hosting. www.open-search-server.com is hosted by Hetzner Online AG, a German company located, Stuttgarter St. 1, 91710 Gunzenhausen, Germany.. Contacts. You may contact Jaeksoft for any question about how using this website or any legal matter related to privacy by sending an e-mail to webmaster@open-search-server.com or by ordinary mail at our headquarters address.. </value></field><field name="timestamp"><value>20110629144428</value></field><field name="type"><value>page</value></field><field name="lang"><value/></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/community</value></field><field name="urlExact"><value>http://dev.open-search-server.com/community</value></field><field name="autocomplete"><value>Contribute</value></field><field name="title"><value>Contribute</value></field><field name="titleExact"><value>Contribute</value></field><field name="titlePhonetic"><value>Contribute</value></field><field name="content"><value>OpenSearchServer has been available as an independent project in Sourceforge since April 2009 and proposed under the GNU/GPL 3 license.. We are very happy about the growth and strength of our developers' community. We took particular care to satisfy their requests and needs, and to keep them informed, and we are proud to see the community increasing in size every day.. All feedback is welcome and many people have originated product enhancements or new features delivery. This is the power of the Open Source and we are very grateful for the high level of participation.. We also put a lot of effort into making access to our technology easy for you and we are now proud to offer fully redesigned OpenSearchServer online documentation. We also offer a newsletter describing your best applications and information on how take advantages of the advanced features of our solution.. Because OpenSearchServer allows developers to have finely-tuned customized control of all algorithms, the possibilities are really endless.. If you are a developer, a researcher, a student, or a corporate IT executive, join us today and become part of a fast-growing community.. Download our software, test it and send us your feedback, you will be making valuable improvements.. Explain your needs to us, let’s share our experiences.. Documentation. The documentation includes tutorials, installation guides and manuals.. The Wiki is the primary source for the documentation. It contains contributions from both the community and our development team.. . Forums. Request help from the community, and check previous threads for relevant discussions. Help OpenSearchServer grow and thrive by launching new threads. Check all OpenSearchServer forums. . . . Bugs and evolutions. The tracking system allows you to report issues, suggest new functionalities, and to track the answers to your requests.. Report a bug. Suggest a new feature. . Source code. You can access the source code using Subversion. Please follow the instructions.. . . </value></field><field name="contentExact"><value>OpenSearchServer has been available as an independent project in Sourceforge since April 2009 and proposed under the GNU/GPL 3 license.. We are very happy about the growth and strength of our developers' community. We took particular care to satisfy their requests and needs, and to keep them informed, and we are proud to see the community increasing in size every day.. All feedback is welcome and many people have originated product enhancements or new features delivery. This is the power of the Open Source and we are very grateful for the high level of participation.. We also put a lot of effort into making access to our technology easy for you and we are now proud to offer fully redesigned OpenSearchServer online documentation. We also offer a newsletter describing your best applications and information on how take advantages of the advanced features of our solution.. Because OpenSearchServer allows developers to have finely-tuned customized control of all algorithms, the possibilities are really endless.. If you are a developer, a researcher, a student, or a corporate IT executive, join us today and become part of a fast-growing community.. Download our software, test it and send us your feedback, you will be making valuable improvements.. Explain your needs to us, let’s share our experiences.. Documentation. The documentation includes tutorials, installation guides and manuals.. The Wiki is the primary source for the documentation. It contains contributions from both the community and our development team.. . Forums. Request help from the community, and check previous threads for relevant discussions. Help OpenSearchServer grow and thrive by launching new threads. Check all OpenSearchServer forums. . . . Bugs and evolutions. The tracking system allows you to report issues, suggest new functionalities, and to track the answers to your requests.. Report a bug. Suggest a new feature. . Source code. You can access the source code using Subversion. Please follow the instructions.. . . </value></field><field name="contentPhonetic"><value>OpenSearchServer has been available as an independent project in Sourceforge since April 2009 and proposed under the GNU/GPL 3 license.. We are very happy about the growth and strength of our developers' community. We took particular care to satisfy their requests and needs, and to keep them informed, and we are proud to see the community increasing in size every day.. All feedback is welcome and many people have originated product enhancements or new features delivery. This is the power of the Open Source and we are very grateful for the high level of participation.. We also put a lot of effort into making access to our technology easy for you and we are now proud to offer fully redesigned OpenSearchServer online documentation. We also offer a newsletter describing your best applications and information on how take advantages of the advanced features of our solution.. Because OpenSearchServer allows developers to have finely-tuned customized control of all algorithms, the possibilities are really endless.. If you are a developer, a researcher, a student, or a corporate IT executive, join us today and become part of a fast-growing community.. Download our software, test it and send us your feedback, you will be making valuable improvements.. Explain your needs to us, let’s share our experiences.. Documentation. The documentation includes tutorials, installation guides and manuals.. The Wiki is the primary source for the documentation. It contains contributions from both the community and our development team.. . Forums. Request help from the community, and check previous threads for relevant discussions. Help OpenSearchServer grow and thrive by launching new threads. Check all OpenSearchServer forums. . . . Bugs and evolutions. The tracking system allows you to report issues, suggest new functionalities, and to track the answers to your requests.. Report a bug. Suggest a new feature. . Source code. You can access the source code using Subversion. Please follow the instructions.. . . </value></field><field name="timestamp"><value>20110602121010</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/terms_of_services</value></field><field name="urlExact"><value>http://dev.open-search-server.com/terms_of_services</value></field><field name="autocomplete"><value>Terms of services</value></field><field name="title"><value>Terms of services</value></field><field name="titleExact"><value>Terms of services</value></field><field name="titlePhonetic"><value>Terms of services</value></field><field name="content"><value>OpenSearchServer Support Plans . Terms of Service. Version 2, dated December 1, 2011.  . Jaeksoft SàRL is a French limited company with a capital of €200,000.00, whose main office is located at Paris Incubateurs - Technologies Numériques, 15, rue Jean-Baptiste Berlier, 75013 Paris, France, registered in the Bobigny Trade and Companies Register under the number 520 295 551, VAT n° FR10520295551, (hereinafter referred to as “JaekSoft” or “we”, or “our”).. JaekSoft shall provide Support Services to Customers as defined herein (collectively, the “Services”), per the terms of this Agreement and as presented at http://www.open-search-server.com/services, for the specific Service level purchased..  . You, a customer for our services (hereinafter referred to as “the Customer”), acknowledge that the subscription to, and use of, JaekSoft Services implies the acceptance of, and adherence to, without reserve or restriction, these Terms of Service, all applicable special conditions for the use of accessory services and resources, and within the technical limitations of our Service and Software as outlined in our website at http://www.open‐search‐server.com.  .  . 1.  Definitions . A. "OpenSearchServer" or "Software" is a piece of software called OpenSearchServer Community Edition whose main features and advantages are presented in different sections at http://www.open-search-server.com.. Different versions of OpenSearchServer are available for download at the following address:. http://www.open-search-server.com/download. OpenSearchServer is GPL v3 license Open Source software.. B. 'Registered Visitor' is a visitor to a website who supplied some identification information allowing the website operator to contact him and to have access to some websites areas. The set of information provided to become a Registered Visitor is called Profile and can be edited by the Registered Visitor.. C. 'OpenSearchServer Supported Release' or 'Supported Release of the Software' is the release of OpenSearchServer for which Technical Support will be provided by JaekSoft to Customers. Supported Releases are listed and can be downloaded at http://www.open-search-server.com/download.. Several Supported Releases can exist and be supported at the same time but no other version will be supported.. D. 'Technical Support' means the provision of technical assistance by JaekSoft to the Customer with respect to installation, analysis of problem reports, and Errors, at whichever support level the Customer purchased.. E. 'Effective Date' is the first day when the Service is provided by JaekSoft to the Customer.. F. 'Service Period' means the period for which the Customer has purchased the Services, plus renewal periods, if any.. G. 'Error' means a failure of the Software to materially conform to the specifications as described in the applicable Documentation.. H. 'Service Fees' means those fees that are applicable for the Services and that are payable by the Customer to JaekSoft.. I. 'Modified Code' means any modification, addition and/or development of code scripts (whether created by JaekSoft, the Customer or any third party) that deviates from the Supported Release.. J. 'Instance' means one operating copy of a version of OpenSearchServer running in one server. Instance also includes, if existing, one security version running in the same or another server but using the same index or indices at the same time with the same data.. K. 'Active Monitoring and Alerting' is software provided by JaekSoft to its Customers signing for Services.   It allows Service provision. It analyses the computer(s) on which one or more Instance of the Software is installed.. It shows different important technical measures and values and sends notification in the event of errors, updates, or security vulnerabilities whether they are related to OpenSearchServer or certain other part of the Customer's infrastructure that could impact OpenSearchServer performance and security.. 2.  Service Terms. 2.1 Nature of Services. The main nature of the Services is the provision of Technical Support information to Customers about how to use OpenSearchServer and help in creating a customized application with it. Services are provided in English or in French.. 2.2 Provision of Services. JaekSoft shall provide the Services at the Service level purchased during the Service Period, subject to Section 2.5 below. Detailed information on Supported Release, service level, response times, business hours and contact numbers is located at www.open-search-server.com/services.. 2.3 End of Availability. JaekSoft may, at its discretion, decide to retire Software and/or Services at any time after giving the Customer “End of Availability” notice.  Notice of End of Availability, the last date of general commercial availability and applicable support lifecycle policies and timelines for discontinuance shall be provided via the JaekSoft Support Services website at www.open-search-server.com/services.. 2.4 Modified Code and Supported Version. During the provision of Technical Support, JaekSoft may be required to analyze whether or not a reported Error is related to Modified Code. Where JaekSoft suspects that a reported Error may be related to Modified Code, JaekSoft has the sole discretion to request the Customer to revert to original code of Supported Version, prior Service provision.  If JaekSoft cannot directly identify the cause of an Error, or reasonably suspects that it is related to Modified Code, the Customer shall be informed that additional assistance may be obtained by the Customer directly from various product discussion forums or via engagement with JaekSoft for an additional fee.. 2.5 Eligibility. All following conditions apply, before Customers can be permitted to sign up for the Services and receive Technical Support from JaekSoft:.  . (a) The Customer must be a Registered Visitor of http://www.open-search-server.com who has provided genuine and sincere information.. (b) OpenSearchServer must be installed in a computer running an Operating system declared compatible by JaekSoft in its documentation and be equipped with the minimum recommended hardware configuration and Customer should use the Software as described in JaekSoft documentation,. (c) Proper installation by the Customer or use of the Software complying with JaekSoft documentation,. (d) The Customer shall respect the Software license,. (e) The Customer must comply with any specific conditions displayed on our website during purchase, published at http://www.open-search-server.com/services or included in any electronic mail sent by JaekSoft.. 2.6 The Customer’s responsibilities. The Customer's obligations regarding Services are:. (a) The Customer explicitly declares that he/she has the legal capacity and authorizations necessary to fully abide by the obligations described in these Terms of Service, and to subscribe to the JaekSoft Services. The Customer will also update contact information provided to JaekSoft when subscribing to the Services.. (b) The Customer agrees to receive from JaekSoft, via e-mail and/or telephone, all kinds of communication regarding renewals, quotes, and other topics relating to Services (such as communication concerning an Error or other technical issues and the availability of new releases). The Customer shall cooperate to enable JaekSoft to deliver the Services,. (c) The Customer is solely responsible for the use of the Software by his/her personnel and shall properly train the personnel in the use and application of the Software,. (d)  The Customer shall promptly report any Errors  in the Software to JaekSoft and after reporting an Error, shall implement any corrective procedures provided by JaekSoft reasonably promptly after receipt of the corrective procedures,. (e) The Customer must provide JaekSoft with all data that is relevant for resolving each technical support request. Relevant data may include, but is not limited to, log files, database dumps, program scripts, descriptions of the hardware and software environments, examples of inputs, and expected and actual outputs.. (f) Fair use of Services: Customers shall make a reasonable and professional use of the Services and of all information, data, text, messages or other materials that will be posted or otherwise transmitted via the Services.. (g) The Customer is solely responsible for protecting and backing up the data and information stored on the computers on which the Software is used and should confirm that such data and information is protected and backed up before contacting JaekSoft for Technical Support,. (h) The Customer is solely responsible for protecting and backing up the data and information stored on the computers on which JaekSoft will have access to, if Service provisions include remote maintenance, JaekSoft will not be responsible for lost data or information in the event of Errors or other malfunction of the Software or computers on which the Software is used or when JaekSoft will have to provide remote maintenance to Customers,. (i) The Customer should install and run the Active Monitoring and Alerting Tool, in order to have advance notice of any problem and therefore facilitating Service provision,. (j) If the Customer signed for a Service with remote maintenance, an access to their OpenSearchServer instance and server used should be given to JaekSoft engineers,. (k) The Customer must have completed all payments before the Customer will be provided with any Services by JaekSoft.. 3.  Financial conditions. 3.1 Service Cost. Unless otherwise indicated explicitly, prices of Services are given on a yearly basis for one Instance and exclude VAT.. 3.2 Service Fee Schedule. (a) Unless otherwise indicated by Jaeksoft in the invoice,  Service  Fees are payable on the Effective Date or, in the case of a  renewal term, no later than the date of commencement of the applicable Service Period.. (b) The Service Fees, including renewals, are at the then-current list price. JaekSoft may increase applicable Service Fees even for renewals.. 3.3 Taxes. All Service Fees are subject to any taxes, duties, or similar charges imposed by any government. The Customer  shall pay or reimburse JaekSoft for all federal, state, dominion, provincial, or local sales, use, personal property, excise,  value added, withholding or other taxes, fees, or duties relating to the subscription to the Services by the Customer.. 3.4 Invoicing and Payments. All invoices issued hereunder by JaekSoft are due on the Effective Date by a payment made on an electronic shop provided by JaekSoft to Customers.. All payment will be confirmed by a detailed electronic mail including an invoice which will be sent to the electronic address used by the Customer when registering on the JaekSoft website.. If any additional service provision is made, the invoice will be paid before service execution. No delivery of Services will be provided before full payment occurs.. 3.5 “Thirty Days Free” Services. In order to assist the Customer to get off to a good start in using OpenSearchServer, JaekSoft offers a free Service, limited to thirty (30) days. The “Thirty Days Free” program is reserved for new Customers and can only be subscribed to once. It is created to help new Customers of OpenSearchServer and cannot be used on an existing OpenSearchServer index.. 4. Service Levels. Services provided by JaekSoft to Customers are made with different Service Level agreements, as detailed in the Order and at http://dev.open-search-server.com/services.. For a better understanding of Service Level, the following definitions are used:. Access to Service: Access to Service is granted to the Customer with the use of a web-based tool and electronic mails.. Maximum Response time: This represents the maximum time that can elapse before JaekSoft provides its first answer or asks a Customer additional questions about a reported Error.. Severity Level: When Services include different levels depending on Error severity, only JaekSoft can define these levels and only JaekSoft can classify a reported Error as critical or major.. Error Fixing or Bug Fixing: OpenSearchServer is in a continuous development process, this development is done partly by Jaeksoft and partly by the developers' community.. When possible, Jaeksoft will make reasonable efforts to prioritize work on reported Errors. No guaranty is given that such work will commence or about the completion date for a reported Error.. 5.  Limited Warranty. JaekSoft will do its best to provide the Services to be performed hereunder and cannot give any guaranty of Error resolution, for any kind of them.. JaekSoft commits to consider the reported Error and provide a first answer to the Customer within the Maximum Response time.. 6. LIMITATION OF LIABILITY. UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL BASIS (WHETHER IN CONTRACT, TORT, OR OTHERWISE) SHALL JAEKSOFT BE LIABLE TO ANY CUSTOMER OR ANY THIRD PARTY FOR ANY INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL OR PUNITIVE DAMAGES, INCLUDING LOST PROFITS, LOST SALES OR BUSINESS, LOST DATA OR BUSINESS INTERRUPTION. IN ADDITION, JAEKSOFT SHALL NOT BE LIABLE FOR ANY DIRECT DAMAGES, COSTS, LOSSES OR LIABILITIES IN EXCESS OF THE MONTHLY SERVICE FEE PAID OR PAYABLE BY THE CUSTOMER FOR THE ONE MONTH PRECEDING THE TIME OF ANY CLAIM FOR MONETARY DAMAGES. IF SERVICE IS PAID ON A YEARLY BASIS, THEN MONTHLY SERVICE WILL BE CONSIDERED AS THE YEARLY FEE DIVIDED BY TWELVE.. 7. Transfer. JaekSoft may assign or transfer this Contract, in whole or in part, without restriction. However, the Customer may not transfer the Service to a third party, without explicit written agreement from Jaeksoft.. 8. Intellectual property rights. All copyrights, trademarks, other distinctive signs and intellectual property rights, in particular those presented on JaekSoft website, software and documentation, shall remain the full property of Jaeksoft, without the Customer being entitled to claim the benefit of any transfer of a right. Jaeksoft software and software used for JaekSoft Services are our intellectual property. No copying, reproduction, translation, transcription, addition or modification of the software or the associated documentation is authorized, unless explicitly permitted by their license.. 9. Personal data and information. All personal data and information provided by Customers during the subscription and/or use of our services and collected by JaekSoft is only used for normal business reasons and to offer a better service to our users. In France, the website has been declared to CNIL in an application quoted 1517220 dated of June 29th, 2011. Any Registered Visitor has the right to access his/her recorded personal information. In order to get this information returned to you within 5 working days, please send us a request to webmaster@open-search-server.com.. 10. Termination. JaekSoft may suspend performance of Services if the Customer fails to meet his/her obligations as set forth in 2.6. JaekSoft may terminate the Services if such failure continues for fifteen (15) days after written notification from Jaeksoft and request to meet these obligations. JaekSoft may terminate the Agreement and all Services at any time if it is discovered that the Customer is currently in breach of article 2.5 of this Agreement. In the case of such termination, the Customer will not be refunded for any advance payments.. 11.  Force majeure. JaekSoft obligations resulting from this Term of Services are suspended in the event of force majeure.. These events or circumstances include, but are not limited to, war and similar situations, mobilization, riots or uprisings, fire, floods, natural disasters, actions or omissions by any administrative authority, including regulations concerning importing and/or exporting, strikes, lock outs, selective strike action or work-to-rule, labor conflicts, power cuts, or telecommunications network failures.. 12. Tolerance. Our tolerance, if any, of a breach of the Terms of Service on the part of the Customer cannot be considered as a waiver of our right to invoke such a breach.. 13. Partial invalidity. In the event of any clause of the Terms of Service being declared void or non-enforceable, it shall be treated as if it had never been written, and other stipulations shall remain in force to their full extent.. 14. Giving notice. Any notice given by one Party to the other shall be done by electronic mail as follows.. The Customer shall send notice to JaekSoft at contact@open-search-server.com.. JaekSoft shall send notice to the Customer at the email address available in the Customer's Profile.. 15. Governing Law. These Terms of Service shall be governed by French law for the purpose of resolving any dispute relating to the Terms of Service. The parties consent to the exclusive jurisdiction of the courts at the location of JaekSoft headquarters. The text of the French version of this Terms of Service shall govern in the event of a dispute of interpretation of the present Terms of Service. You may find the French version of this document at: http://www.open-search-server.com/fr/conditions_generales_de_ventes.. </value></field><field name="contentExact"><value>OpenSearchServer Support Plans . Terms of Service. Version 2, dated December 1, 2011.  . Jaeksoft SàRL is a French limited company with a capital of €200,000.00, whose main office is located at Paris Incubateurs - Technologies Numériques, 15, rue Jean-Baptiste Berlier, 75013 Paris, France, registered in the Bobigny Trade and Companies Register under the number 520 295 551, VAT n° FR10520295551, (hereinafter referred to as “JaekSoft” or “we”, or “our”).. JaekSoft shall provide Support Services to Customers as defined herein (collectively, the “Services”), per the terms of this Agreement and as presented at http://www.open-search-server.com/services, for the specific Service level purchased..  . You, a customer for our services (hereinafter referred to as “the Customer”), acknowledge that the subscription to, and use of, JaekSoft Services implies the acceptance of, and adherence to, without reserve or restriction, these Terms of Service, all applicable special conditions for the use of accessory services and resources, and within the technical limitations of our Service and Software as outlined in our website at http://www.open‐search‐server.com.  .  . 1.  Definitions . A. "OpenSearchServer" or "Software" is a piece of software called OpenSearchServer Community Edition whose main features and advantages are presented in different sections at http://www.open-search-server.com.. Different versions of OpenSearchServer are available for download at the following address:. http://www.open-search-server.com/download. OpenSearchServer is GPL v3 license Open Source software.. B. 'Registered Visitor' is a visitor to a website who supplied some identification information allowing the website operator to contact him and to have access to some websites areas. The set of information provided to become a Registered Visitor is called Profile and can be edited by the Registered Visitor.. C. 'OpenSearchServer Supported Release' or 'Supported Release of the Software' is the release of OpenSearchServer for which Technical Support will be provided by JaekSoft to Customers. Supported Releases are listed and can be downloaded at http://www.open-search-server.com/download.. Several Supported Releases can exist and be supported at the same time but no other version will be supported.. D. 'Technical Support' means the provision of technical assistance by JaekSoft to the Customer with respect to installation, analysis of problem reports, and Errors, at whichever support level the Customer purchased.. E. 'Effective Date' is the first day when the Service is provided by JaekSoft to the Customer.. F. 'Service Period' means the period for which the Customer has purchased the Services, plus renewal periods, if any.. G. 'Error' means a failure of the Software to materially conform to the specifications as described in the applicable Documentation.. H. 'Service Fees' means those fees that are applicable for the Services and that are payable by the Customer to JaekSoft.. I. 'Modified Code' means any modification, addition and/or development of code scripts (whether created by JaekSoft, the Customer or any third party) that deviates from the Supported Release.. J. 'Instance' means one operating copy of a version of OpenSearchServer running in one server. Instance also includes, if existing, one security version running in the same or another server but using the same index or indices at the same time with the same data.. K. 'Active Monitoring and Alerting' is software provided by JaekSoft to its Customers signing for Services.   It allows Service provision. It analyses the computer(s) on which one or more Instance of the Software is installed.. It shows different important technical measures and values and sends notification in the event of errors, updates, or security vulnerabilities whether they are related to OpenSearchServer or certain other part of the Customer's infrastructure that could impact OpenSearchServer performance and security.. 2.  Service Terms. 2.1 Nature of Services. The main nature of the Services is the provision of Technical Support information to Customers about how to use OpenSearchServer and help in creating a customized application with it. Services are provided in English or in French.. 2.2 Provision of Services. JaekSoft shall provide the Services at the Service level purchased during the Service Period, subject to Section 2.5 below. Detailed information on Supported Release, service level, response times, business hours and contact numbers is located at www.open-search-server.com/services.. 2.3 End of Availability. JaekSoft may, at its discretion, decide to retire Software and/or Services at any time after giving the Customer “End of Availability” notice.  Notice of End of Availability, the last date of general commercial availability and applicable support lifecycle policies and timelines for discontinuance shall be provided via the JaekSoft Support Services website at www.open-search-server.com/services.. 2.4 Modified Code and Supported Version. During the provision of Technical Support, JaekSoft may be required to analyze whether or not a reported Error is related to Modified Code. Where JaekSoft suspects that a reported Error may be related to Modified Code, JaekSoft has the sole discretion to request the Customer to revert to original code of Supported Version, prior Service provision.  If JaekSoft cannot directly identify the cause of an Error, or reasonably suspects that it is related to Modified Code, the Customer shall be informed that additional assistance may be obtained by the Customer directly from various product discussion forums or via engagement with JaekSoft for an additional fee.. 2.5 Eligibility. All following conditions apply, before Customers can be permitted to sign up for the Services and receive Technical Support from JaekSoft:.  . (a) The Customer must be a Registered Visitor of http://www.open-search-server.com who has provided genuine and sincere information.. (b) OpenSearchServer must be installed in a computer running an Operating system declared compatible by JaekSoft in its documentation and be equipped with the minimum recommended hardware configuration and Customer should use the Software as described in JaekSoft documentation,. (c) Proper installation by the Customer or use of the Software complying with JaekSoft documentation,. (d) The Customer shall respect the Software license,. (e) The Customer must comply with any specific conditions displayed on our website during purchase, published at http://www.open-search-server.com/services or included in any electronic mail sent by JaekSoft.. 2.6 The Customer’s responsibilities. The Customer's obligations regarding Services are:. (a) The Customer explicitly declares that he/she has the legal capacity and authorizations necessary to fully abide by the obligations described in these Terms of Service, and to subscribe to the JaekSoft Services. The Customer will also update contact information provided to JaekSoft when subscribing to the Services.. (b) The Customer agrees to receive from JaekSoft, via e-mail and/or telephone, all kinds of communication regarding renewals, quotes, and other topics relating to Services (such as communication concerning an Error or other technical issues and the availability of new releases). The Customer shall cooperate to enable JaekSoft to deliver the Services,. (c) The Customer is solely responsible for the use of the Software by his/her personnel and shall properly train the personnel in the use and application of the Software,. (d)  The Customer shall promptly report any Errors  in the Software to JaekSoft and after reporting an Error, shall implement any corrective procedures provided by JaekSoft reasonably promptly after receipt of the corrective procedures,. (e) The Customer must provide JaekSoft with all data that is relevant for resolving each technical support request. Relevant data may include, but is not limited to, log files, database dumps, program scripts, descriptions of the hardware and software environments, examples of inputs, and expected and actual outputs.. (f) Fair use of Services: Customers shall make a reasonable and professional use of the Services and of all information, data, text, messages or other materials that will be posted or otherwise transmitted via the Services.. (g) The Customer is solely responsible for protecting and backing up the data and information stored on the computers on which the Software is used and should confirm that such data and information is protected and backed up before contacting JaekSoft for Technical Support,. (h) The Customer is solely responsible for protecting and backing up the data and information stored on the computers on which JaekSoft will have access to, if Service provisions include remote maintenance, JaekSoft will not be responsible for lost data or information in the event of Errors or other malfunction of the Software or computers on which the Software is used or when JaekSoft will have to provide remote maintenance to Customers,. (i) The Customer should install and run the Active Monitoring and Alerting Tool, in order to have advance notice of any problem and therefore facilitating Service provision,. (j) If the Customer signed for a Service with remote maintenance, an access to their OpenSearchServer instance and server used should be given to JaekSoft engineers,. (k) The Customer must have completed all payments before the Customer will be provided with any Services by JaekSoft.. 3.  Financial conditions. 3.1 Service Cost. Unless otherwise indicated explicitly, prices of Services are given on a yearly basis for one Instance and exclude VAT.. 3.2 Service Fee Schedule. (a) Unless otherwise indicated by Jaeksoft in the invoice,  Service  Fees are payable on the Effective Date or, in the case of a  renewal term, no later than the date of commencement of the applicable Service Period.. (b) The Service Fees, including renewals, are at the then-current list price. JaekSoft may increase applicable Service Fees even for renewals.. 3.3 Taxes. All Service Fees are subject to any taxes, duties, or similar charges imposed by any government. The Customer  shall pay or reimburse JaekSoft for all federal, state, dominion, provincial, or local sales, use, personal property, excise,  value added, withholding or other taxes, fees, or duties relating to the subscription to the Services by the Customer.. 3.4 Invoicing and Payments. All invoices issued hereunder by JaekSoft are due on the Effective Date by a payment made on an electronic shop provided by JaekSoft to Customers.. All payment will be confirmed by a detailed electronic mail including an invoice which will be sent to the electronic address used by the Customer when registering on the JaekSoft website.. If any additional service provision is made, the invoice will be paid before service execution. No delivery of Services will be provided before full payment occurs.. 3.5 “Thirty Days Free” Services. In order to assist the Customer to get off to a good start in using OpenSearchServer, JaekSoft offers a free Service, limited to thirty (30) days. The “Thirty Days Free” program is reserved for new Customers and can only be subscribed to once. It is created to help new Customers of OpenSearchServer and cannot be used on an existing OpenSearchServer index.. 4. Service Levels. Services provided by JaekSoft to Customers are made with different Service Level agreements, as detailed in the Order and at http://dev.open-search-server.com/services.. For a better understanding of Service Level, the following definitions are used:. Access to Service: Access to Service is granted to the Customer with the use of a web-based tool and electronic mails.. Maximum Response time: This represents the maximum time that can elapse before JaekSoft provides its first answer or asks a Customer additional questions about a reported Error.. Severity Level: When Services include different levels depending on Error severity, only JaekSoft can define these levels and only JaekSoft can classify a reported Error as critical or major.. Error Fixing or Bug Fixing: OpenSearchServer is in a continuous development process, this development is done partly by Jaeksoft and partly by the developers' community.. When possible, Jaeksoft will make reasonable efforts to prioritize work on reported Errors. No guaranty is given that such work will commence or about the completion date for a reported Error.. 5.  Limited Warranty. JaekSoft will do its best to provide the Services to be performed hereunder and cannot give any guaranty of Error resolution, for any kind of them.. JaekSoft commits to consider the reported Error and provide a first answer to the Customer within the Maximum Response time.. 6. LIMITATION OF LIABILITY. UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL BASIS (WHETHER IN CONTRACT, TORT, OR OTHERWISE) SHALL JAEKSOFT BE LIABLE TO ANY CUSTOMER OR ANY THIRD PARTY FOR ANY INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL OR PUNITIVE DAMAGES, INCLUDING LOST PROFITS, LOST SALES OR BUSINESS, LOST DATA OR BUSINESS INTERRUPTION. IN ADDITION, JAEKSOFT SHALL NOT BE LIABLE FOR ANY DIRECT DAMAGES, COSTS, LOSSES OR LIABILITIES IN EXCESS OF THE MONTHLY SERVICE FEE PAID OR PAYABLE BY THE CUSTOMER FOR THE ONE MONTH PRECEDING THE TIME OF ANY CLAIM FOR MONETARY DAMAGES. IF SERVICE IS PAID ON A YEARLY BASIS, THEN MONTHLY SERVICE WILL BE CONSIDERED AS THE YEARLY FEE DIVIDED BY TWELVE.. 7. Transfer. JaekSoft may assign or transfer this Contract, in whole or in part, without restriction. However, the Customer may not transfer the Service to a third party, without explicit written agreement from Jaeksoft.. 8. Intellectual property rights. All copyrights, trademarks, other distinctive signs and intellectual property rights, in particular those presented on JaekSoft website, software and documentation, shall remain the full property of Jaeksoft, without the Customer being entitled to claim the benefit of any transfer of a right. Jaeksoft software and software used for JaekSoft Services are our intellectual property. No copying, reproduction, translation, transcription, addition or modification of the software or the associated documentation is authorized, unless explicitly permitted by their license.. 9. Personal data and information. All personal data and information provided by Customers during the subscription and/or use of our services and collected by JaekSoft is only used for normal business reasons and to offer a better service to our users. In France, the website has been declared to CNIL in an application quoted 1517220 dated of June 29th, 2011. Any Registered Visitor has the right to access his/her recorded personal information. In order to get this information returned to you within 5 working days, please send us a request to webmaster@open-search-server.com.. 10. Termination. JaekSoft may suspend performance of Services if the Customer fails to meet his/her obligations as set forth in 2.6. JaekSoft may terminate the Services if such failure continues for fifteen (15) days after written notification from Jaeksoft and request to meet these obligations. JaekSoft may terminate the Agreement and all Services at any time if it is discovered that the Customer is currently in breach of article 2.5 of this Agreement. In the case of such termination, the Customer will not be refunded for any advance payments.. 11.  Force majeure. JaekSoft obligations resulting from this Term of Services are suspended in the event of force majeure.. These events or circumstances include, but are not limited to, war and similar situations, mobilization, riots or uprisings, fire, floods, natural disasters, actions or omissions by any administrative authority, including regulations concerning importing and/or exporting, strikes, lock outs, selective strike action or work-to-rule, labor conflicts, power cuts, or telecommunications network failures.. 12. Tolerance. Our tolerance, if any, of a breach of the Terms of Service on the part of the Customer cannot be considered as a waiver of our right to invoke such a breach.. 13. Partial invalidity. In the event of any clause of the Terms of Service being declared void or non-enforceable, it shall be treated as if it had never been written, and other stipulations shall remain in force to their full extent.. 14. Giving notice. Any notice given by one Party to the other shall be done by electronic mail as follows.. The Customer shall send notice to JaekSoft at contact@open-search-server.com.. JaekSoft shall send notice to the Customer at the email address available in the Customer's Profile.. 15. Governing Law. These Terms of Service shall be governed by French law for the purpose of resolving any dispute relating to the Terms of Service. The parties consent to the exclusive jurisdiction of the courts at the location of JaekSoft headquarters. The text of the French version of this Terms of Service shall govern in the event of a dispute of interpretation of the present Terms of Service. You may find the French version of this document at: http://www.open-search-server.com/fr/conditions_generales_de_ventes.. </value></field><field name="contentPhonetic"><value>OpenSearchServer Support Plans . Terms of Service. Version 2, dated December 1, 2011.  . Jaeksoft SàRL is a French limited company with a capital of €200,000.00, whose main office is located at Paris Incubateurs - Technologies Numériques, 15, rue Jean-Baptiste Berlier, 75013 Paris, France, registered in the Bobigny Trade and Companies Register under the number 520 295 551, VAT n° FR10520295551, (hereinafter referred to as “JaekSoft” or “we”, or “our”).. JaekSoft shall provide Support Services to Customers as defined herein (collectively, the “Services”), per the terms of this Agreement and as presented at http://www.open-search-server.com/services, for the specific Service level purchased..  . You, a customer for our services (hereinafter referred to as “the Customer”), acknowledge that the subscription to, and use of, JaekSoft Services implies the acceptance of, and adherence to, without reserve or restriction, these Terms of Service, all applicable special conditions for the use of accessory services and resources, and within the technical limitations of our Service and Software as outlined in our website at http://www.open‐search‐server.com.  .  . 1.  Definitions . A. "OpenSearchServer" or "Software" is a piece of software called OpenSearchServer Community Edition whose main features and advantages are presented in different sections at http://www.open-search-server.com.. Different versions of OpenSearchServer are available for download at the following address:. http://www.open-search-server.com/download. OpenSearchServer is GPL v3 license Open Source software.. B. 'Registered Visitor' is a visitor to a website who supplied some identification information allowing the website operator to contact him and to have access to some websites areas. The set of information provided to become a Registered Visitor is called Profile and can be edited by the Registered Visitor.. C. 'OpenSearchServer Supported Release' or 'Supported Release of the Software' is the release of OpenSearchServer for which Technical Support will be provided by JaekSoft to Customers. Supported Releases are listed and can be downloaded at http://www.open-search-server.com/download.. Several Supported Releases can exist and be supported at the same time but no other version will be supported.. D. 'Technical Support' means the provision of technical assistance by JaekSoft to the Customer with respect to installation, analysis of problem reports, and Errors, at whichever support level the Customer purchased.. E. 'Effective Date' is the first day when the Service is provided by JaekSoft to the Customer.. F. 'Service Period' means the period for which the Customer has purchased the Services, plus renewal periods, if any.. G. 'Error' means a failure of the Software to materially conform to the specifications as described in the applicable Documentation.. H. 'Service Fees' means those fees that are applicable for the Services and that are payable by the Customer to JaekSoft.. I. 'Modified Code' means any modification, addition and/or development of code scripts (whether created by JaekSoft, the Customer or any third party) that deviates from the Supported Release.. J. 'Instance' means one operating copy of a version of OpenSearchServer running in one server. Instance also includes, if existing, one security version running in the same or another server but using the same index or indices at the same time with the same data.. K. 'Active Monitoring and Alerting' is software provided by JaekSoft to its Customers signing for Services.   It allows Service provision. It analyses the computer(s) on which one or more Instance of the Software is installed.. It shows different important technical measures and values and sends notification in the event of errors, updates, or security vulnerabilities whether they are related to OpenSearchServer or certain other part of the Customer's infrastructure that could impact OpenSearchServer performance and security.. 2.  Service Terms. 2.1 Nature of Services. The main nature of the Services is the provision of Technical Support information to Customers about how to use OpenSearchServer and help in creating a customized application with it. Services are provided in English or in French.. 2.2 Provision of Services. JaekSoft shall provide the Services at the Service level purchased during the Service Period, subject to Section 2.5 below. Detailed information on Supported Release, service level, response times, business hours and contact numbers is located at www.open-search-server.com/services.. 2.3 End of Availability. JaekSoft may, at its discretion, decide to retire Software and/or Services at any time after giving the Customer “End of Availability” notice.  Notice of End of Availability, the last date of general commercial availability and applicable support lifecycle policies and timelines for discontinuance shall be provided via the JaekSoft Support Services website at www.open-search-server.com/services.. 2.4 Modified Code and Supported Version. During the provision of Technical Support, JaekSoft may be required to analyze whether or not a reported Error is related to Modified Code. Where JaekSoft suspects that a reported Error may be related to Modified Code, JaekSoft has the sole discretion to request the Customer to revert to original code of Supported Version, prior Service provision.  If JaekSoft cannot directly identify the cause of an Error, or reasonably suspects that it is related to Modified Code, the Customer shall be informed that additional assistance may be obtained by the Customer directly from various product discussion forums or via engagement with JaekSoft for an additional fee.. 2.5 Eligibility. All following conditions apply, before Customers can be permitted to sign up for the Services and receive Technical Support from JaekSoft:.  . (a) The Customer must be a Registered Visitor of http://www.open-search-server.com who has provided genuine and sincere information.. (b) OpenSearchServer must be installed in a computer running an Operating system declared compatible by JaekSoft in its documentation and be equipped with the minimum recommended hardware configuration and Customer should use the Software as described in JaekSoft documentation,. (c) Proper installation by the Customer or use of the Software complying with JaekSoft documentation,. (d) The Customer shall respect the Software license,. (e) The Customer must comply with any specific conditions displayed on our website during purchase, published at http://www.open-search-server.com/services or included in any electronic mail sent by JaekSoft.. 2.6 The Customer’s responsibilities. The Customer's obligations regarding Services are:. (a) The Customer explicitly declares that he/she has the legal capacity and authorizations necessary to fully abide by the obligations described in these Terms of Service, and to subscribe to the JaekSoft Services. The Customer will also update contact information provided to JaekSoft when subscribing to the Services.. (b) The Customer agrees to receive from JaekSoft, via e-mail and/or telephone, all kinds of communication regarding renewals, quotes, and other topics relating to Services (such as communication concerning an Error or other technical issues and the availability of new releases). The Customer shall cooperate to enable JaekSoft to deliver the Services,. (c) The Customer is solely responsible for the use of the Software by his/her personnel and shall properly train the personnel in the use and application of the Software,. (d)  The Customer shall promptly report any Errors  in the Software to JaekSoft and after reporting an Error, shall implement any corrective procedures provided by JaekSoft reasonably promptly after receipt of the corrective procedures,. (e) The Customer must provide JaekSoft with all data that is relevant for resolving each technical support request. Relevant data may include, but is not limited to, log files, database dumps, program scripts, descriptions of the hardware and software environments, examples of inputs, and expected and actual outputs.. (f) Fair use of Services: Customers shall make a reasonable and professional use of the Services and of all information, data, text, messages or other materials that will be posted or otherwise transmitted via the Services.. (g) The Customer is solely responsible for protecting and backing up the data and information stored on the computers on which the Software is used and should confirm that such data and information is protected and backed up before contacting JaekSoft for Technical Support,. (h) The Customer is solely responsible for protecting and backing up the data and information stored on the computers on which JaekSoft will have access to, if Service provisions include remote maintenance, JaekSoft will not be responsible for lost data or information in the event of Errors or other malfunction of the Software or computers on which the Software is used or when JaekSoft will have to provide remote maintenance to Customers,. (i) The Customer should install and run the Active Monitoring and Alerting Tool, in order to have advance notice of any problem and therefore facilitating Service provision,. (j) If the Customer signed for a Service with remote maintenance, an access to their OpenSearchServer instance and server used should be given to JaekSoft engineers,. (k) The Customer must have completed all payments before the Customer will be provided with any Services by JaekSoft.. 3.  Financial conditions. 3.1 Service Cost. Unless otherwise indicated explicitly, prices of Services are given on a yearly basis for one Instance and exclude VAT.. 3.2 Service Fee Schedule. (a) Unless otherwise indicated by Jaeksoft in the invoice,  Service  Fees are payable on the Effective Date or, in the case of a  renewal term, no later than the date of commencement of the applicable Service Period.. (b) The Service Fees, including renewals, are at the then-current list price. JaekSoft may increase applicable Service Fees even for renewals.. 3.3 Taxes. All Service Fees are subject to any taxes, duties, or similar charges imposed by any government. The Customer  shall pay or reimburse JaekSoft for all federal, state, dominion, provincial, or local sales, use, personal property, excise,  value added, withholding or other taxes, fees, or duties relating to the subscription to the Services by the Customer.. 3.4 Invoicing and Payments. All invoices issued hereunder by JaekSoft are due on the Effective Date by a payment made on an electronic shop provided by JaekSoft to Customers.. All payment will be confirmed by a detailed electronic mail including an invoice which will be sent to the electronic address used by the Customer when registering on the JaekSoft website.. If any additional service provision is made, the invoice will be paid before service execution. No delivery of Services will be provided before full payment occurs.. 3.5 “Thirty Days Free” Services. In order to assist the Customer to get off to a good start in using OpenSearchServer, JaekSoft offers a free Service, limited to thirty (30) days. The “Thirty Days Free” program is reserved for new Customers and can only be subscribed to once. It is created to help new Customers of OpenSearchServer and cannot be used on an existing OpenSearchServer index.. 4. Service Levels. Services provided by JaekSoft to Customers are made with different Service Level agreements, as detailed in the Order and at http://dev.open-search-server.com/services.. For a better understanding of Service Level, the following definitions are used:. Access to Service: Access to Service is granted to the Customer with the use of a web-based tool and electronic mails.. Maximum Response time: This represents the maximum time that can elapse before JaekSoft provides its first answer or asks a Customer additional questions about a reported Error.. Severity Level: When Services include different levels depending on Error severity, only JaekSoft can define these levels and only JaekSoft can classify a reported Error as critical or major.. Error Fixing or Bug Fixing: OpenSearchServer is in a continuous development process, this development is done partly by Jaeksoft and partly by the developers' community.. When possible, Jaeksoft will make reasonable efforts to prioritize work on reported Errors. No guaranty is given that such work will commence or about the completion date for a reported Error.. 5.  Limited Warranty. JaekSoft will do its best to provide the Services to be performed hereunder and cannot give any guaranty of Error resolution, for any kind of them.. JaekSoft commits to consider the reported Error and provide a first answer to the Customer within the Maximum Response time.. 6. LIMITATION OF LIABILITY. UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL BASIS (WHETHER IN CONTRACT, TORT, OR OTHERWISE) SHALL JAEKSOFT BE LIABLE TO ANY CUSTOMER OR ANY THIRD PARTY FOR ANY INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL OR PUNITIVE DAMAGES, INCLUDING LOST PROFITS, LOST SALES OR BUSINESS, LOST DATA OR BUSINESS INTERRUPTION. IN ADDITION, JAEKSOFT SHALL NOT BE LIABLE FOR ANY DIRECT DAMAGES, COSTS, LOSSES OR LIABILITIES IN EXCESS OF THE MONTHLY SERVICE FEE PAID OR PAYABLE BY THE CUSTOMER FOR THE ONE MONTH PRECEDING THE TIME OF ANY CLAIM FOR MONETARY DAMAGES. IF SERVICE IS PAID ON A YEARLY BASIS, THEN MONTHLY SERVICE WILL BE CONSIDERED AS THE YEARLY FEE DIVIDED BY TWELVE.. 7. Transfer. JaekSoft may assign or transfer this Contract, in whole or in part, without restriction. However, the Customer may not transfer the Service to a third party, without explicit written agreement from Jaeksoft.. 8. Intellectual property rights. All copyrights, trademarks, other distinctive signs and intellectual property rights, in particular those presented on JaekSoft website, software and documentation, shall remain the full property of Jaeksoft, without the Customer being entitled to claim the benefit of any transfer of a right. Jaeksoft software and software used for JaekSoft Services are our intellectual property. No copying, reproduction, translation, transcription, addition or modification of the software or the associated documentation is authorized, unless explicitly permitted by their license.. 9. Personal data and information. All personal data and information provided by Customers during the subscription and/or use of our services and collected by JaekSoft is only used for normal business reasons and to offer a better service to our users. In France, the website has been declared to CNIL in an application quoted 1517220 dated of June 29th, 2011. Any Registered Visitor has the right to access his/her recorded personal information. In order to get this information returned to you within 5 working days, please send us a request to webmaster@open-search-server.com.. 10. Termination. JaekSoft may suspend performance of Services if the Customer fails to meet his/her obligations as set forth in 2.6. JaekSoft may terminate the Services if such failure continues for fifteen (15) days after written notification from Jaeksoft and request to meet these obligations. JaekSoft may terminate the Agreement and all Services at any time if it is discovered that the Customer is currently in breach of article 2.5 of this Agreement. In the case of such termination, the Customer will not be refunded for any advance payments.. 11.  Force majeure. JaekSoft obligations resulting from this Term of Services are suspended in the event of force majeure.. These events or circumstances include, but are not limited to, war and similar situations, mobilization, riots or uprisings, fire, floods, natural disasters, actions or omissions by any administrative authority, including regulations concerning importing and/or exporting, strikes, lock outs, selective strike action or work-to-rule, labor conflicts, power cuts, or telecommunications network failures.. 12. Tolerance. Our tolerance, if any, of a breach of the Terms of Service on the part of the Customer cannot be considered as a waiver of our right to invoke such a breach.. 13. Partial invalidity. In the event of any clause of the Terms of Service being declared void or non-enforceable, it shall be treated as if it had never been written, and other stipulations shall remain in force to their full extent.. 14. Giving notice. Any notice given by one Party to the other shall be done by electronic mail as follows.. The Customer shall send notice to JaekSoft at contact@open-search-server.com.. JaekSoft shall send notice to the Customer at the email address available in the Customer's Profile.. 15. Governing Law. These Terms of Service shall be governed by French law for the purpose of resolving any dispute relating to the Terms of Service. The parties consent to the exclusive jurisdiction of the courts at the location of JaekSoft headquarters. The text of the French version of this Terms of Service shall govern in the event of a dispute of interpretation of the present Terms of Service. You may find the French version of this document at: http://www.open-search-server.com/fr/conditions_generales_de_ventes.. </value></field><field name="timestamp"><value>20111116114320</value></field><field name="type"><value>page</value></field><field name="lang"><value/></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/services</value></field><field name="urlExact"><value>http://dev.open-search-server.com/services</value></field><field name="autocomplete"><value>Services</value></field><field name="title"><value>Services</value></field><field name="titleExact"><value>Services</value></field><field name="titlePhonetic"><value>Services</value></field><field name="content"><value>We provide support and services for OpenSearchServer developers. You will feel confident that our solution is the right choice because you will know that a top-quality team of experts will provide support and help you to deliver your project on time and with the highest level of quality. From the planning process through to completion of the project, we will assist you to deliver your project on time and meet all your objectives.. We know that no two projects are the same. Each project needs a specific approach, relates to a particular company environment and is led by a different project leader. This is why we offer a list of different services, all aiming at providing you with exactly what you need to successfully create your very own search applications that you will be proud of.. All OpenSearchServer users are important to us and they all help us to understand needs and expectations better. For that reason, our support programs have some common levels of service that are listed below and available to everybody.. Our Support plans. . Community. Support Plan. Enterprise. Support Plan. . E-mail support. Web tickets. Unlimited. Unlimited. . Maximum response time. 1 working day. 4 hours. . Active Monitoring &amp; Alerting tool. Yes. Yes. . Remote maintenance. No. Yes. . Price per month . (ex. VAT) - No commitment (1) . € 79 (2) . . . € 299 (2) . . . . Price for one year . (ex. VAT) . € 790 (2) . . . € 2 990 (2) . . . . . . . . Common features to all support plans. Access to Community tools,. Unlimited access to online documentation,. Access to web-based ticket management tool,. Web Ticket submission 24 x 7 x 365,. Full Upgrade Provisions,. Upgrade Information and directions,. . (2) Every order implies the acceptance without reserve of the General terms and conditions.. (1) No commitment: You pay on a monthly basis. Quit whenever you like, no advance notice.. . . </value></field><field name="contentExact"><value>We provide support and services for OpenSearchServer developers. You will feel confident that our solution is the right choice because you will know that a top-quality team of experts will provide support and help you to deliver your project on time and with the highest level of quality. From the planning process through to completion of the project, we will assist you to deliver your project on time and meet all your objectives.. We know that no two projects are the same. Each project needs a specific approach, relates to a particular company environment and is led by a different project leader. This is why we offer a list of different services, all aiming at providing you with exactly what you need to successfully create your very own search applications that you will be proud of.. All OpenSearchServer users are important to us and they all help us to understand needs and expectations better. For that reason, our support programs have some common levels of service that are listed below and available to everybody.. Our Support plans. . Community. Support Plan. Enterprise. Support Plan. . E-mail support. Web tickets. Unlimited. Unlimited. . Maximum response time. 1 working day. 4 hours. . Active Monitoring &amp; Alerting tool. Yes. Yes. . Remote maintenance. No. Yes. . Price per month . (ex. VAT) - No commitment (1) . € 79 (2) . . . € 299 (2) . . . . Price for one year . (ex. VAT) . € 790 (2) . . . € 2 990 (2) . . . . . . . . Common features to all support plans. Access to Community tools,. Unlimited access to online documentation,. Access to web-based ticket management tool,. Web Ticket submission 24 x 7 x 365,. Full Upgrade Provisions,. Upgrade Information and directions,. . (2) Every order implies the acceptance without reserve of the General terms and conditions.. (1) No commitment: You pay on a monthly basis. Quit whenever you like, no advance notice.. . . </value></field><field name="contentPhonetic"><value>We provide support and services for OpenSearchServer developers. You will feel confident that our solution is the right choice because you will know that a top-quality team of experts will provide support and help you to deliver your project on time and with the highest level of quality. From the planning process through to completion of the project, we will assist you to deliver your project on time and meet all your objectives.. We know that no two projects are the same. Each project needs a specific approach, relates to a particular company environment and is led by a different project leader. This is why we offer a list of different services, all aiming at providing you with exactly what you need to successfully create your very own search applications that you will be proud of.. All OpenSearchServer users are important to us and they all help us to understand needs and expectations better. For that reason, our support programs have some common levels of service that are listed below and available to everybody.. Our Support plans. . Community. Support Plan. Enterprise. Support Plan. . E-mail support. Web tickets. Unlimited. Unlimited. . Maximum response time. 1 working day. 4 hours. . Active Monitoring &amp; Alerting tool. Yes. Yes. . Remote maintenance. No. Yes. . Price per month . (ex. VAT) - No commitment (1) . € 79 (2) . . . € 299 (2) . . . . Price for one year . (ex. VAT) . € 790 (2) . . . € 2 990 (2) . . . . . . . . Common features to all support plans. Access to Community tools,. Unlimited access to online documentation,. Access to web-based ticket management tool,. Web Ticket submission 24 x 7 x 365,. Full Upgrade Provisions,. Upgrade Information and directions,. . (2) Every order implies the acceptance without reserve of the General terms and conditions.. (1) No commitment: You pay on a monthly basis. Quit whenever you like, no advance notice.. . . </value></field><field name="timestamp"><value>20110602120909</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://dev.open-search-server.com/open-search-server-oss</value></field><field name="urlExact"><value>http://dev.open-search-server.com/open-search-server-oss</value></field><field name="autocomplete"><value>OpenSearchServer</value></field><field name="title"><value>OpenSearchServer</value></field><field name="titleExact"><value>OpenSearchServer</value></field><field name="titlePhonetic"><value>OpenSearchServer</value></field><field name="content"><value>OpenSearchServer is the perfect solution, not only for specialists in full text search methods, but also for professional developers who have not yet tried these technologies, it allows them to enter this field easily. It is built as a series of tabs, so that even when you are creating the most sophisticated applications, you will just need to tick boxes and enter some information, there’s no need to write a single line of code. Simply concentrate on configuring your data and be ready to use analyzers to help you finish the job.. You can use OpenSearchServer, a comprehensive suite of software, to create any kind of Search-based application. The crawler in OpenSearchServer will allow you to include web pages, documents and database content.. You will have full access to all of the components of our search engine. This is the most important feature that we wanted to offer you. It means that, instead of having to accept fixed parameters and options set by us, you will have total freedom to customize any parameters to perfectly match the needs of your application. You will never face a black box…. OpenSearchServer will allow you to create any kind of Search applications: Web search (internet, intranet, extranet), desktop and networked search, portable search for distributing CD/DVD. OpenSearchServer was developed in such a way that you can do all of these things as simply as possible.. Available for developers as an Open Source application on Sourceforge since April 2009, OpenSearchServer is the first of its category to offer such a complete package, providing professional-grade results.. . . . . A crawler allows you to index web pages, documents from files on local and remote systems and contents from any JDBC Database, such as Oracle, MySql, and Microsoft SQL Server and more,. Full text analyzers and filters allow optimized and efficient searches in 16 languages and indexing performance,. An indexer creates, updates the index and presents the answers to queries using the most efficient algorithms for best performance and response times,. Html renderer allows an easy integration of the Search box in an html/xhtml page, working with php and .Net, client library and xml over http API.. Parsers allow you to get content and metadata from most documents and formats, such as MS Office, OpenOffice, html/xhtml, xml, Adobe pdf, rtf, txt, mp3/4, wav, torrents and more.. . . . A series of caches accelerate processes and deliver powerful search applications,. A monitoring and administration module offers an alerting service which checks that your index is always updated and working well and that the necessary hardware resources are available.. An integrated Scheduler service can be used to create simple or complex jobs and run them automatically.. Comprehensive online documentation provide you all the help you might need when learning to use features and creating your applications,. Advanced functionality: faceting, clustering, filters, snippets, synonyms, stopwords, categorization, “find similar”, automatic thumbnail screenshot inclusion.. . . . Minimum requirements for OpenSearchServer application:. Linux, Solaris, MacOS, Windows 2000/XP/Vista/7 or server editions, 32 or 64 bits. Java Virtual Machine version 5 or 6. 512MB of RAM. . . </value></field><field name="contentExact"><value>OpenSearchServer is the perfect solution, not only for specialists in full text search methods, but also for professional developers who have not yet tried these technologies, it allows them to enter this field easily. It is built as a series of tabs, so that even when you are creating the most sophisticated applications, you will just need to tick boxes and enter some information, there’s no need to write a single line of code. Simply concentrate on configuring your data and be ready to use analyzers to help you finish the job.. You can use OpenSearchServer, a comprehensive suite of software, to create any kind of Search-based application. The crawler in OpenSearchServer will allow you to include web pages, documents and database content.. You will have full access to all of the components of our search engine. This is the most important feature that we wanted to offer you. It means that, instead of having to accept fixed parameters and options set by us, you will have total freedom to customize any parameters to perfectly match the needs of your application. You will never face a black box…. OpenSearchServer will allow you to create any kind of Search applications: Web search (internet, intranet, extranet), desktop and networked search, portable search for distributing CD/DVD. OpenSearchServer was developed in such a way that you can do all of these things as simply as possible.. Available for developers as an Open Source application on Sourceforge since April 2009, OpenSearchServer is the first of its category to offer such a complete package, providing professional-grade results.. . . . . A crawler allows you to index web pages, documents from files on local and remote systems and contents from any JDBC Database, such as Oracle, MySql, and Microsoft SQL Server and more,. Full text analyzers and filters allow optimized and efficient searches in 16 languages and indexing performance,. An indexer creates, updates the index and presents the answers to queries using the most efficient algorithms for best performance and response times,. Html renderer allows an easy integration of the Search box in an html/xhtml page, working with php and .Net, client library and xml over http API.. Parsers allow you to get content and metadata from most documents and formats, such as MS Office, OpenOffice, html/xhtml, xml, Adobe pdf, rtf, txt, mp3/4, wav, torrents and more.. . . . A series of caches accelerate processes and deliver powerful search applications,. A monitoring and administration module offers an alerting service which checks that your index is always updated and working well and that the necessary hardware resources are available.. An integrated Scheduler service can be used to create simple or complex jobs and run them automatically.. Comprehensive online documentation provide you all the help you might need when learning to use features and creating your applications,. Advanced functionality: faceting, clustering, filters, snippets, synonyms, stopwords, categorization, “find similar”, automatic thumbnail screenshot inclusion.. . . . Minimum requirements for OpenSearchServer application:. Linux, Solaris, MacOS, Windows 2000/XP/Vista/7 or server editions, 32 or 64 bits. Java Virtual Machine version 5 or 6. 512MB of RAM. . . </value></field><field name="contentPhonetic"><value>OpenSearchServer is the perfect solution, not only for specialists in full text search methods, but also for professional developers who have not yet tried these technologies, it allows them to enter this field easily. It is built as a series of tabs, so that even when you are creating the most sophisticated applications, you will just need to tick boxes and enter some information, there’s no need to write a single line of code. Simply concentrate on configuring your data and be ready to use analyzers to help you finish the job.. You can use OpenSearchServer, a comprehensive suite of software, to create any kind of Search-based application. The crawler in OpenSearchServer will allow you to include web pages, documents and database content.. You will have full access to all of the components of our search engine. This is the most important feature that we wanted to offer you. It means that, instead of having to accept fixed parameters and options set by us, you will have total freedom to customize any parameters to perfectly match the needs of your application. You will never face a black box…. OpenSearchServer will allow you to create any kind of Search applications: Web search (internet, intranet, extranet), desktop and networked search, portable search for distributing CD/DVD. OpenSearchServer was developed in such a way that you can do all of these things as simply as possible.. Available for developers as an Open Source application on Sourceforge since April 2009, OpenSearchServer is the first of its category to offer such a complete package, providing professional-grade results.. . . . . A crawler allows you to index web pages, documents from files on local and remote systems and contents from any JDBC Database, such as Oracle, MySql, and Microsoft SQL Server and more,. Full text analyzers and filters allow optimized and efficient searches in 16 languages and indexing performance,. An indexer creates, updates the index and presents the answers to queries using the most efficient algorithms for best performance and response times,. Html renderer allows an easy integration of the Search box in an html/xhtml page, working with php and .Net, client library and xml over http API.. Parsers allow you to get content and metadata from most documents and formats, such as MS Office, OpenOffice, html/xhtml, xml, Adobe pdf, rtf, txt, mp3/4, wav, torrents and more.. . . . A series of caches accelerate processes and deliver powerful search applications,. A monitoring and administration module offers an alerting service which checks that your index is always updated and working well and that the necessary hardware resources are available.. An integrated Scheduler service can be used to create simple or complex jobs and run them automatically.. Comprehensive online documentation provide you all the help you might need when learning to use features and creating your applications,. Advanced functionality: faceting, clustering, filters, snippets, synonyms, stopwords, categorization, “find similar”, automatic thumbnail screenshot inclusion.. . . . Minimum requirements for OpenSearchServer application:. Linux, Solaris, MacOS, Windows 2000/XP/Vista/7 or server editions, 32 or 64 bits. Java Virtual Machine version 5 or 6. 512MB of RAM. . . </value></field><field name="timestamp"><value>20110602120814</value></field><field name="type"><value>page</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Out+of+memory+issue</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Out+of+memory+issue</value></field><field name="autocomplete"><value>Out of memory issue</value></field><field name="title"><value>Out of memory issue</value></field><field name="titleExact"><value>Out of memory issue</value></field><field name="titlePhonetic"><value>Out of memory issue</value></field><field name="content"><value>By default, OpenSearchServer uses only 256 megabytes of RAM. This value is not enough for advanced use. To allow OSS to use more memory, you have to add two lines in the start.sh file More RAM allowing OPENSEARCHSERVER_DATA=`pwd`/dataexport OPENSEARCHSERVER_DATAÂ CATALINA_OPTS="-Xms2G -Xmx2G -server"export CATALINA_OPTSexec "$EXECUTABLE" The memory allocated to OSS is defined by the CATALINA_OPTS options. â-Xms2G âXmx2Gâ means 2 GB of RAM. You may use â-Xms768m âXmx768mâ to allow 768 megabytes of RAM. More than 2GB of RAM You have to run OpenSearchServer in 64 bits mode to use more than 2 gigabytes. The first requirement is to run into a 64 bits operating system and to have installed a 64 bits Java runtime. Then you have to modify the start.sh file as is: OPENSEARCHSERVER_DATA=`pwd`/dataexport OPENSEARCHSERVER_DATACATALINA_OPTS="-d64 âXms6G âXmx6G -server"export CATALINA_OPTSexec "$EXECUTABLE" Usual Xms and Xmx parameters control the memory (6 gigabytes in our example). The -d64 parameter enables the 64 bits operations. What size of RAM is used/available? Look at the free memory rate value of the monitoring panel to know if OpenSearchServer is comfortably running. Go to the /Runtime/System/General panel. A value bigger than 20% is recommended.</value></field><field name="contentExact"><value>By default, OpenSearchServer uses only 256 megabytes of RAM. This value is not enough for advanced use. To allow OSS to use more memory, you have to add two lines in the start.sh file More RAM allowing OPENSEARCHSERVER_DATA=`pwd`/dataexport OPENSEARCHSERVER_DATAÂ CATALINA_OPTS="-Xms2G -Xmx2G -server"export CATALINA_OPTSexec "$EXECUTABLE" The memory allocated to OSS is defined by the CATALINA_OPTS options. â-Xms2G âXmx2Gâ means 2 GB of RAM. You may use â-Xms768m âXmx768mâ to allow 768 megabytes of RAM. More than 2GB of RAM You have to run OpenSearchServer in 64 bits mode to use more than 2 gigabytes. The first requirement is to run into a 64 bits operating system and to have installed a 64 bits Java runtime. Then you have to modify the start.sh file as is: OPENSEARCHSERVER_DATA=`pwd`/dataexport OPENSEARCHSERVER_DATACATALINA_OPTS="-d64 âXms6G âXmx6G -server"export CATALINA_OPTSexec "$EXECUTABLE" Usual Xms and Xmx parameters control the memory (6 gigabytes in our example). The -d64 parameter enables the 64 bits operations. What size of RAM is used/available? Look at the free memory rate value of the monitoring panel to know if OpenSearchServer is comfortably running. Go to the /Runtime/System/General panel. A value bigger than 20% is recommended.</value></field><field name="contentPhonetic"><value>By default, OpenSearchServer uses only 256 megabytes of RAM. This value is not enough for advanced use. To allow OSS to use more memory, you have to add two lines in the start.sh file More RAM allowing OPENSEARCHSERVER_DATA=`pwd`/dataexport OPENSEARCHSERVER_DATAÂ CATALINA_OPTS="-Xms2G -Xmx2G -server"export CATALINA_OPTSexec "$EXECUTABLE" The memory allocated to OSS is defined by the CATALINA_OPTS options. â-Xms2G âXmx2Gâ means 2 GB of RAM. You may use â-Xms768m âXmx768mâ to allow 768 megabytes of RAM. More than 2GB of RAM You have to run OpenSearchServer in 64 bits mode to use more than 2 gigabytes. The first requirement is to run into a 64 bits operating system and to have installed a 64 bits Java runtime. Then you have to modify the start.sh file as is: OPENSEARCHSERVER_DATA=`pwd`/dataexport OPENSEARCHSERVER_DATACATALINA_OPTS="-d64 âXms6G âXmx6G -server"export CATALINA_OPTSexec "$EXECUTABLE" Usual Xms and Xmx parameters control the memory (6 gigabytes in our example). The -d64 parameter enables the 64 bits operations. What size of RAM is used/available? Look at the free memory rate value of the monitoring panel to know if OpenSearchServer is comfortably running. Go to the /Runtime/System/General panel. A value bigger than 20% is recommended.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/SaaS+instructions</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/SaaS+instructions</value></field><field name="autocomplete"><value>SaaS instructions</value></field><field name="title"><value>SaaS instructions</value></field><field name="titleExact"><value>SaaS instructions</value></field><field name="titlePhonetic"><value>SaaS instructions</value></field><field name="content"><value>Find below the procedure to setup your OpenSearchServer instance on our Cloud infrastructure Choose the right offer on our Saas ServicesÂ web page and click on the "subscription" buttonÂ Â  You are redirected to Paypal website. Please, follow Paypal instructions to setup the subscription. Once the subscription is valid, you will receive an email from OpenSearchServer with: Your access login and password. The permanent link to access theÂ SaaS CenterÂ in order to manage your OpenSearchServer instance. The access link to Support CenterÂ to communicate with our technical support team. Connect to the SaaS CenterÂ to activate your OpenSearchServer instance. Click on "Configuration" button to choose your access login and passwordfor your newly OpenSearchServer instance. Click on "Start" button to start the instance. Congratulations! Your OpenSearchServer instance is now working. Click on "View" button to access to its web interface. OpenSearchServer SaaS Services</value></field><field name="contentExact"><value>Find below the procedure to setup your OpenSearchServer instance on our Cloud infrastructure Choose the right offer on our Saas ServicesÂ web page and click on the "subscription" buttonÂ Â  You are redirected to Paypal website. Please, follow Paypal instructions to setup the subscription. Once the subscription is valid, you will receive an email from OpenSearchServer with: Your access login and password. The permanent link to access theÂ SaaS CenterÂ in order to manage your OpenSearchServer instance. The access link to Support CenterÂ to communicate with our technical support team. Connect to the SaaS CenterÂ to activate your OpenSearchServer instance. Click on "Configuration" button to choose your access login and passwordfor your newly OpenSearchServer instance. Click on "Start" button to start the instance. Congratulations! Your OpenSearchServer instance is now working. Click on "View" button to access to its web interface. OpenSearchServer SaaS Services</value></field><field name="contentPhonetic"><value>Find below the procedure to setup your OpenSearchServer instance on our Cloud infrastructure Choose the right offer on our Saas ServicesÂ web page and click on the "subscription" buttonÂ Â  You are redirected to Paypal website. Please, follow Paypal instructions to setup the subscription. Once the subscription is valid, you will receive an email from OpenSearchServer with: Your access login and password. The permanent link to access theÂ SaaS CenterÂ in order to manage your OpenSearchServer instance. The access link to Support CenterÂ to communicate with our technical support team. Connect to the SaaS CenterÂ to activate your OpenSearchServer instance. Click on "Configuration" button to choose your access login and passwordfor your newly OpenSearchServer instance. Click on "Start" button to start the instance. Congratulations! Your OpenSearchServer instance is now working. Click on "View" button to access to its web interface. OpenSearchServer SaaS Services</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Running+OpenSearchServer+on+Linux</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Running+OpenSearchServer+on+Linux</value></field><field name="autocomplete"><value>Running OpenSearchServer on Linux</value></field><field name="title"><value>Running OpenSearchServer on Linux</value></field><field name="titleExact"><value>Running OpenSearchServer on Linux</value></field><field name="titlePhonetic"><value>Running OpenSearchServer on Linux</value></field><field name="content"><value>Prerequisites Install SUN Java (http://www.java.com/en/download/index.jsp) or IBM Java (https://www.ibm.com/developerworks/java/jdk/). Steps for running OpenSearchServer on Linux Open the Terminal application, which is in the Utilities folder within the Applications folder of the Linux machine. Check whether Java is installed or not by using the following command: ~$ java -version Â  Checking Java on Linux Using the Terminal, go to your newly-downloaded OpenSearchServer folder. OpenSearchServer Directory Once there, launch the Start application by typing in ./start.sh. Â  Starting OpenSearchServer Â  OpenSearchServer main window opens Â  Â  Â If you are new to the Linux environment, follow these simple steps to get started. We can use the following two basic Linux commands to start with lsÂ command (the letter L and the letter S, short for "list") lists all the files and sub-directories in the current directory. This lets you know the current directory and the sub-directories you can access. cdÂ command (short for "change directory"), allows you to change path to a specific sub-directory. For instance, if you type:cd downloads, the current path is changed to downloads sub-directory). So, if you type ls and see that the directory you are currently in has a sub-directory called Downloads, typing cd Downloads changes the current path to that sub-directory. Now type ls again to review the content of OpenSearchServer directory is indeed there. Typing cd OpenSearchServer changes the path to the OpenSearchServer directory, where the start.sh file is located.</value></field><field name="contentExact"><value>Prerequisites Install SUN Java (http://www.java.com/en/download/index.jsp) or IBM Java (https://www.ibm.com/developerworks/java/jdk/). Steps for running OpenSearchServer on Linux Open the Terminal application, which is in the Utilities folder within the Applications folder of the Linux machine. Check whether Java is installed or not by using the following command: ~$ java -version Â  Checking Java on Linux Using the Terminal, go to your newly-downloaded OpenSearchServer folder. OpenSearchServer Directory Once there, launch the Start application by typing in ./start.sh. Â  Starting OpenSearchServer Â  OpenSearchServer main window opens Â  Â  Â If you are new to the Linux environment, follow these simple steps to get started. We can use the following two basic Linux commands to start with lsÂ command (the letter L and the letter S, short for "list") lists all the files and sub-directories in the current directory. This lets you know the current directory and the sub-directories you can access. cdÂ command (short for "change directory"), allows you to change path to a specific sub-directory. For instance, if you type:cd downloads, the current path is changed to downloads sub-directory). So, if you type ls and see that the directory you are currently in has a sub-directory called Downloads, typing cd Downloads changes the current path to that sub-directory. Now type ls again to review the content of OpenSearchServer directory is indeed there. Typing cd OpenSearchServer changes the path to the OpenSearchServer directory, where the start.sh file is located.</value></field><field name="contentPhonetic"><value>Prerequisites Install SUN Java (http://www.java.com/en/download/index.jsp) or IBM Java (https://www.ibm.com/developerworks/java/jdk/). Steps for running OpenSearchServer on Linux Open the Terminal application, which is in the Utilities folder within the Applications folder of the Linux machine. Check whether Java is installed or not by using the following command: ~$ java -version Â  Checking Java on Linux Using the Terminal, go to your newly-downloaded OpenSearchServer folder. OpenSearchServer Directory Once there, launch the Start application by typing in ./start.sh. Â  Starting OpenSearchServer Â  OpenSearchServer main window opens Â  Â  Â If you are new to the Linux environment, follow these simple steps to get started. We can use the following two basic Linux commands to start with lsÂ command (the letter L and the letter S, short for "list") lists all the files and sub-directories in the current directory. This lets you know the current directory and the sub-directories you can access. cdÂ command (short for "change directory"), allows you to change path to a specific sub-directory. For instance, if you type:cd downloads, the current path is changed to downloads sub-directory). So, if you type ls and see that the directory you are currently in has a sub-directory called Downloads, typing cd Downloads changes the current path to that sub-directory. Now type ls again to review the content of OpenSearchServer directory is indeed there. Typing cd OpenSearchServer changes the path to the OpenSearchServer directory, where the start.sh file is located.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Monitoring+Center</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Monitoring+Center</value></field><field name="autocomplete"><value>Monitoring Center</value></field><field name="title"><value>Monitoring Center</value></field><field name="titleExact"><value>Monitoring Center</value></field><field name="titlePhonetic"><value>Monitoring Center</value></field><field name="content"><value>Â  Get your instance ID Each OpenSearchServer instance has its own ID. You can retrieve your ID in the Monitoring Center. Enter the Monitoring Center To enter the Monitoring Center you must be logged. Select the Monitoring Center in the Account menu: Get your instance ID Your instance(s) is (are) listed here. You can copy the ID using the usual copy/paste method. Select the ID and choose the "Copy" menu item of your Internet browser. Configure OpenSearchServer Go in the user interface of your running OpenSearchServer instance Enter the address of your OpenSearchServer instance http://[server_address]:8080/ in your Internet browser. Select any index The index you choose does not matter. The monitoring data are uploaded to the Monitoring Center by a scheduler task. You may create an empty index dedicated to this task. Go to the "Scheduler" tab panel Enter to the Scheduler module by clicking on the Scheduler tab panel. Configure a new scheduler job Create a new scheduler job with a "Monitoring Upload" task following the indication you see in this figure and these additional comments: The correct value for the period is 5 minutes. The monitoring data will be uploaded every 5 minutes. The Monitoring Center will ignore any additional upload attempt. In the instance ID field, enter your own instance ID. The monitoring upload does not require any authentication value. You can safely keep The Login and Password fields empty. Check the "Enable" button and click on the Create button. That's itÂ ! Setup your alert Go back the the Monitoring Center Go back to the Monitoring Center by using the Account menu. Configure your alert notifications Click on the "Config." button of the instance. You can setup your alert as you wish. The monitoring system generates alert notifications following three cases: The disk partition hosting the OpenSearchServer data has no more space left. The free memory available for OpenSearchServer is too low. OpenSearchServer did not upload any monitoring data. Enjoy! Check you have data Once everything is configured, you should have data uploaded to the Monitoring system. You can see all the data in the samples list by clicking in the "Samples" button of the instance. Check any notification Notifications are send to you by email if anything is detected. You can see all the history by clicking in the notification (Notif) button.</value></field><field name="contentExact"><value>Â  Get your instance ID Each OpenSearchServer instance has its own ID. You can retrieve your ID in the Monitoring Center. Enter the Monitoring Center To enter the Monitoring Center you must be logged. Select the Monitoring Center in the Account menu: Get your instance ID Your instance(s) is (are) listed here. You can copy the ID using the usual copy/paste method. Select the ID and choose the "Copy" menu item of your Internet browser. Configure OpenSearchServer Go in the user interface of your running OpenSearchServer instance Enter the address of your OpenSearchServer instance http://[server_address]:8080/ in your Internet browser. Select any index The index you choose does not matter. The monitoring data are uploaded to the Monitoring Center by a scheduler task. You may create an empty index dedicated to this task. Go to the "Scheduler" tab panel Enter to the Scheduler module by clicking on the Scheduler tab panel. Configure a new scheduler job Create a new scheduler job with a "Monitoring Upload" task following the indication you see in this figure and these additional comments: The correct value for the period is 5 minutes. The monitoring data will be uploaded every 5 minutes. The Monitoring Center will ignore any additional upload attempt. In the instance ID field, enter your own instance ID. The monitoring upload does not require any authentication value. You can safely keep The Login and Password fields empty. Check the "Enable" button and click on the Create button. That's itÂ ! Setup your alert Go back the the Monitoring Center Go back to the Monitoring Center by using the Account menu. Configure your alert notifications Click on the "Config." button of the instance. You can setup your alert as you wish. The monitoring system generates alert notifications following three cases: The disk partition hosting the OpenSearchServer data has no more space left. The free memory available for OpenSearchServer is too low. OpenSearchServer did not upload any monitoring data. Enjoy! Check you have data Once everything is configured, you should have data uploaded to the Monitoring system. You can see all the data in the samples list by clicking in the "Samples" button of the instance. Check any notification Notifications are send to you by email if anything is detected. You can see all the history by clicking in the notification (Notif) button.</value></field><field name="contentPhonetic"><value>Â  Get your instance ID Each OpenSearchServer instance has its own ID. You can retrieve your ID in the Monitoring Center. Enter the Monitoring Center To enter the Monitoring Center you must be logged. Select the Monitoring Center in the Account menu: Get your instance ID Your instance(s) is (are) listed here. You can copy the ID using the usual copy/paste method. Select the ID and choose the "Copy" menu item of your Internet browser. Configure OpenSearchServer Go in the user interface of your running OpenSearchServer instance Enter the address of your OpenSearchServer instance http://[server_address]:8080/ in your Internet browser. Select any index The index you choose does not matter. The monitoring data are uploaded to the Monitoring Center by a scheduler task. You may create an empty index dedicated to this task. Go to the "Scheduler" tab panel Enter to the Scheduler module by clicking on the Scheduler tab panel. Configure a new scheduler job Create a new scheduler job with a "Monitoring Upload" task following the indication you see in this figure and these additional comments: The correct value for the period is 5 minutes. The monitoring data will be uploaded every 5 minutes. The Monitoring Center will ignore any additional upload attempt. In the instance ID field, enter your own instance ID. The monitoring upload does not require any authentication value. You can safely keep The Login and Password fields empty. Check the "Enable" button and click on the Create button. That's itÂ ! Setup your alert Go back the the Monitoring Center Go back to the Monitoring Center by using the Account menu. Configure your alert notifications Click on the "Config." button of the instance. You can setup your alert as you wish. The monitoring system generates alert notifications following three cases: The disk partition hosting the OpenSearchServer data has no more space left. The free memory available for OpenSearchServer is too low. OpenSearchServer did not upload any monitoring data. Enjoy! Check you have data Once everything is configured, you should have data uploaded to the Monitoring system. You can see all the data in the samples list by clicking in the "Samples" button of the instance. Check any notification Notifications are send to you by email if anything is detected. You can see all the history by clicking in the notification (Notif) button.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/pages/viewpage.action?pageId=328042</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/pages/viewpage.action?pageId=328042</value></field><field name="autocomplete"><value>Known Exceptions / Messages</value></field><field name="title"><value>Known Exceptions / Messages</value></field><field name="titleExact"><value>Known Exceptions / Messages</value></field><field name="titlePhonetic"><value>Known Exceptions / Messages</value></field><field name="content"><value>Why i get this exception?Â Bad credential &lt;entry key="Exception"&gt;com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Bad credential&lt;/entry&gt; This exception occurs when privileges is created an not used while accessing through API .Please check the login and key value. while accessing though API Â http://localhost:8080/select?user=index1&amp;login=admin&amp;key=54a51ee4f27cbbcb7a771352b980567f Why exception saysÂ Expected to get a directory pathÂ ? &lt;entry key="Exception"&gt; com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Expected to get a directory path &lt;/entry&gt; This exception occurs when the index is not found.check the name of the index is present in the indexes list. Â  http://localhost:8080/select?user=index1Â .TheÂ index1Â should be present in the indexes list. Â  PHP library gives meÂ OSS_API won't work whitout curl extensionÂ whyÂ ? Â  Fatal error: OSS_API won't work whitout curl extension in OSS_API.class.php on line 23 Â  The OpenSearchServer PHP client needs the php-curl extension.Install php-curl extension and restart your web-server.</value></field><field name="contentExact"><value>Why i get this exception?Â Bad credential &lt;entry key="Exception"&gt;com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Bad credential&lt;/entry&gt; This exception occurs when privileges is created an not used while accessing through API .Please check the login and key value. while accessing though API Â http://localhost:8080/select?user=index1&amp;login=admin&amp;key=54a51ee4f27cbbcb7a771352b980567f Why exception saysÂ Expected to get a directory pathÂ ? &lt;entry key="Exception"&gt; com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Expected to get a directory path &lt;/entry&gt; This exception occurs when the index is not found.check the name of the index is present in the indexes list. Â  http://localhost:8080/select?user=index1Â .TheÂ index1Â should be present in the indexes list. Â  PHP library gives meÂ OSS_API won't work whitout curl extensionÂ whyÂ ? Â  Fatal error: OSS_API won't work whitout curl extension in OSS_API.class.php on line 23 Â  The OpenSearchServer PHP client needs the php-curl extension.Install php-curl extension and restart your web-server.</value></field><field name="contentPhonetic"><value>Why i get this exception?Â Bad credential &lt;entry key="Exception"&gt;com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Bad credential&lt;/entry&gt; This exception occurs when privileges is created an not used while accessing through API .Please check the login and key value. while accessing though API Â http://localhost:8080/select?user=index1&amp;login=admin&amp;key=54a51ee4f27cbbcb7a771352b980567f Why exception saysÂ Expected to get a directory pathÂ ? &lt;entry key="Exception"&gt; com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Expected to get a directory path &lt;/entry&gt; This exception occurs when the index is not found.check the name of the index is present in the indexes list. Â  http://localhost:8080/select?user=index1Â .TheÂ index1Â should be present in the indexes list. Â  PHP library gives meÂ OSS_API won't work whitout curl extensionÂ whyÂ ? Â  Fatal error: OSS_API won't work whitout curl extension in OSS_API.class.php on line 23 Â  The OpenSearchServer PHP client needs the php-curl extension.Install php-curl extension and restart your web-server.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/pages/viewpage.action?pageId=328040</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/pages/viewpage.action?pageId=328040</value></field><field name="autocomplete"><value>Forgot your user name and password ?</value></field><field name="title"><value>Forgot your user name and password ?</value></field><field name="titleExact"><value>Forgot your user name and password ?</value></field><field name="titlePhonetic"><value>Forgot your user name and password ?</value></field><field name="content"><value>If you forgot your user name or password or both, do the following: 1. Close the Tomcat server by closing the cmd prompt window. 2. Browse to the OpenSearchServer directory and locate the folder data. 3. Open the data folder; locate and deleteÂ users.xml. 4. Double-clickÂ start.batÂ to start the Tomcat server.</value></field><field name="contentExact"><value>If you forgot your user name or password or both, do the following: 1. Close the Tomcat server by closing the cmd prompt window. 2. Browse to the OpenSearchServer directory and locate the folder data. 3. Open the data folder; locate and deleteÂ users.xml. 4. Double-clickÂ start.batÂ to start the Tomcat server.</value></field><field name="contentPhonetic"><value>If you forgot your user name or password or both, do the following: 1. Close the Tomcat server by closing the cmd prompt window. 2. Browse to the OpenSearchServer directory and locate the folder data. 3. Open the data folder; locate and deleteÂ users.xml. 4. Double-clickÂ start.batÂ to start the Tomcat server.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Checking+the+environment+variables+on+Windows</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Checking+the+environment+variables+on+Windows</value></field><field name="autocomplete"><value>Checking the environment variables on Windows</value></field><field name="title"><value>Checking the environment variables on Windows</value></field><field name="titleExact"><value>Checking the environment variables on Windows</value></field><field name="titlePhonetic"><value>Checking the environment variables on Windows</value></field><field name="content"><value>Right clickÂ My Computer. SelectÂ Properties. SelectÂ Advanced tab SelectÂ Environment Variables. You will see a list of variables. What you need is either a JRE_HOME or JAVA_HOME variable, depending on the type of Java engine you are running. If the correct variable is present, please check that it targets the correct folder. If the desired variable is not present, create it like this: If you have a JRE, create or update the environment variable JRE_HOME. Set it to target the folder where your Java JRE is, for example C:\Program Files\Java\jre1.6.0_14. If you have a JDK, create or update the environment variable JAVA_HOME. Set it to target the folder where your Java JDK is, for example C:\Program Files\Java\jdk1.6.0_14. Once you have done that, try to launch OpenSearchServer again with start.bat. If you have Java but you do not see the variable and do you not remember whether you have a JDK or JRE, go to the Start menu, Click Run, type cmd to call up the command line interface, and type java -version to see what's installed. Checking whether your 8080 port is free If, by chance, you already have a server listening on the 8080 tcp port you'll have to change it in the Catalina config files. To check whether the 8080 port is already occupied use the following command line: Â  netstat -o -n -a Â  If you have a response resembling the one below, your port isn't free: Â  TCP 0.0.0.0:8080 0.0.0.0:0 LISTENING 676 Â  If port 8080 is already being used, we suggest that you simply use another port for ISS. To do so: In your OpenSearchServer folder, open the file apache-tomcat-6.0.20/conf/server.xmlÂ Locate the line starting with: &lt;Connector port="8080" ... and then change it to &lt;connector port="8081" ... Save your file and restart OpenSearchServer with start.bat. Your OpenSearchServer Back Office is now available at this address:Â http://localhost:8081</value></field><field name="contentExact"><value>Right clickÂ My Computer. SelectÂ Properties. SelectÂ Advanced tab SelectÂ Environment Variables. You will see a list of variables. What you need is either a JRE_HOME or JAVA_HOME variable, depending on the type of Java engine you are running. If the correct variable is present, please check that it targets the correct folder. If the desired variable is not present, create it like this: If you have a JRE, create or update the environment variable JRE_HOME. Set it to target the folder where your Java JRE is, for example C:\Program Files\Java\jre1.6.0_14. If you have a JDK, create or update the environment variable JAVA_HOME. Set it to target the folder where your Java JDK is, for example C:\Program Files\Java\jdk1.6.0_14. Once you have done that, try to launch OpenSearchServer again with start.bat. If you have Java but you do not see the variable and do you not remember whether you have a JDK or JRE, go to the Start menu, Click Run, type cmd to call up the command line interface, and type java -version to see what's installed. Checking whether your 8080 port is free If, by chance, you already have a server listening on the 8080 tcp port you'll have to change it in the Catalina config files. To check whether the 8080 port is already occupied use the following command line: Â  netstat -o -n -a Â  If you have a response resembling the one below, your port isn't free: Â  TCP 0.0.0.0:8080 0.0.0.0:0 LISTENING 676 Â  If port 8080 is already being used, we suggest that you simply use another port for ISS. To do so: In your OpenSearchServer folder, open the file apache-tomcat-6.0.20/conf/server.xmlÂ Locate the line starting with: &lt;Connector port="8080" ... and then change it to &lt;connector port="8081" ... Save your file and restart OpenSearchServer with start.bat. Your OpenSearchServer Back Office is now available at this address:Â http://localhost:8081</value></field><field name="contentPhonetic"><value>Right clickÂ My Computer. SelectÂ Properties. SelectÂ Advanced tab SelectÂ Environment Variables. You will see a list of variables. What you need is either a JRE_HOME or JAVA_HOME variable, depending on the type of Java engine you are running. If the correct variable is present, please check that it targets the correct folder. If the desired variable is not present, create it like this: If you have a JRE, create or update the environment variable JRE_HOME. Set it to target the folder where your Java JRE is, for example C:\Program Files\Java\jre1.6.0_14. If you have a JDK, create or update the environment variable JAVA_HOME. Set it to target the folder where your Java JDK is, for example C:\Program Files\Java\jdk1.6.0_14. Once you have done that, try to launch OpenSearchServer again with start.bat. If you have Java but you do not see the variable and do you not remember whether you have a JDK or JRE, go to the Start menu, Click Run, type cmd to call up the command line interface, and type java -version to see what's installed. Checking whether your 8080 port is free If, by chance, you already have a server listening on the 8080 tcp port you'll have to change it in the Catalina config files. To check whether the 8080 port is already occupied use the following command line: Â  netstat -o -n -a Â  If you have a response resembling the one below, your port isn't free: Â  TCP 0.0.0.0:8080 0.0.0.0:0 LISTENING 676 Â  If port 8080 is already being used, we suggest that you simply use another port for ISS. To do so: In your OpenSearchServer folder, open the file apache-tomcat-6.0.20/conf/server.xmlÂ Locate the line starting with: &lt;Connector port="8080" ... and then change it to &lt;connector port="8081" ... Save your file and restart OpenSearchServer with start.bat. Your OpenSearchServer Back Office is now available at this address:Â http://localhost:8081</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/FAQ</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/FAQ</value></field><field name="autocomplete"><value>FAQ</value></field><field name="title"><value>FAQ</value></field><field name="titleExact"><value>FAQ</value></field><field name="titlePhonetic"><value>FAQ</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/WebCrawler+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/WebCrawler+API</value></field><field name="autocomplete"><value>WebCrawler API</value></field><field name="title"><value>WebCrawler API</value></field><field name="titleExact"><value>WebCrawler API</value></field><field name="titlePhonetic"><value>WebCrawler API</value></field><field name="content"><value>API Name WebCrawler Description This API Starts or Stops the web Crawler. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. action The action parameter is an ENUM field consisting of the following fields: Examples HTTP Request http://localhost:8080/webcrawler?use=index1&amp;action=start http://localhost:8080/webcrawler?use=index1&amp;action=stop Â  Â  No PHP API for Action.</value></field><field name="contentExact"><value>API Name WebCrawler Description This API Starts or Stops the web Crawler. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. action The action parameter is an ENUM field consisting of the following fields: Examples HTTP Request http://localhost:8080/webcrawler?use=index1&amp;action=start http://localhost:8080/webcrawler?use=index1&amp;action=stop Â  Â  No PHP API for Action.</value></field><field name="contentPhonetic"><value>API Name WebCrawler Description This API Starts or Stops the web Crawler. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. action The action parameter is an ENUM field consisting of the following fields: Examples HTTP Request http://localhost:8080/webcrawler?use=index1&amp;action=start http://localhost:8080/webcrawler?use=index1&amp;action=stop Â  Â  No PHP API for Action.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/SearchTemplate+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/SearchTemplate+API</value></field><field name="autocomplete"><value>SearchTemplate API</value></field><field name="title"><value>SearchTemplate API</value></field><field name="titleExact"><value>SearchTemplate API</value></field><field name="titlePhonetic"><value>SearchTemplate API</value></field><field name="content"><value>API Name Search Template Description The Search Template API is used to create,delete,Search Template for querying the index. Parameters List Parameters Description use The use parameter denotes the index name which needs to be crawled or queried . login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. cmd The cmd Parameter denotes the Operations to be done. The Acceptable Operations are listed below.Create The create command creates the Search Template for given inputs. qt.name It denotes the name of the query Template or Search Template Search qt.query It denotes the Pattern Query of the search Template title:($$)^10 OR title:("$$")^10OR content:($$)^10 OR content:("$$")^10 qt.operator It denotes the Operator for search it can be AND or OR search qt.rows It denotes the number of rows to return . qt.slop It denotes tthe tolerance for words between the terms being searched. qt.lang It denotes the language to be searched. Delete The delete command deletes the Search Template for given inputs. qt.name It denotes the name of the query Template or Search Template setreturnedfield It sets the return field for specific Index qt.name It denotes the name of the query Template or Search Template returnfield It denotes name of the Field to be returned. setsnippetfield It sets the SnippetField of an index. qt.name It denotes the name of the query Template or Search Template qt. maxSnippetSize It denotes the maximum size of the snippet. qt.tag It denotes the tag to be highlighted on search keyword. Snippetfield The name of the field to be set as Snippet qt. fragmenter Fragmenter is one in which how the snippet is spitted into chunks .it is an enum value listed below. NoFragmenter Indiscriminately quotes the field from its beginning. SizeFragmenter It centres the snippet on the target terms, then extends the snippet rightward and leftward until it hits the maximum allowed size. SentenceFragmenter It centres the snippet on the target terms, then extends the snippet rightward and leftward in a way that strives to preserve the sentences in the text. Â  Â  Examples HTTP request http://localhost:8080/searchtemplate?use=index1&amp;cmd=delete&amp;qt.name=search http://localhost:8080/searchtemplate?use=index1&amp;cmd=create&amp;qt.name=search&amp;qt.query=title:($$)^10 OR title:("$$")^10 OR content:($$)^10 OR content:("$$")^10&amp;qt.operator=AND&amp;qt.rows=10&amp;qt.slop=2&amp;qt.lang=ENGLISH $searchTemplate=new OssSearchTemplate("http://localhost:8080", "index1"); $searchTemplate-&gt;createSearchTemplate("search1", 'title:($$)^10 OR title:("$$")^10 OR content:($$)^10 OR content:("$$")^10 OR', "AND", "10", "2", "ENGLISH"); $searchTemplate-&gt;setSnippetField("search1", "title", 150, "b", "1", "NoFragmenter");</value></field><field name="contentExact"><value>API Name Search Template Description The Search Template API is used to create,delete,Search Template for querying the index. Parameters List Parameters Description use The use parameter denotes the index name which needs to be crawled or queried . login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. cmd The cmd Parameter denotes the Operations to be done. The Acceptable Operations are listed below.Create The create command creates the Search Template for given inputs. qt.name It denotes the name of the query Template or Search Template Search qt.query It denotes the Pattern Query of the search Template title:($$)^10 OR title:("$$")^10OR content:($$)^10 OR content:("$$")^10 qt.operator It denotes the Operator for search it can be AND or OR search qt.rows It denotes the number of rows to return . qt.slop It denotes tthe tolerance for words between the terms being searched. qt.lang It denotes the language to be searched. Delete The delete command deletes the Search Template for given inputs. qt.name It denotes the name of the query Template or Search Template setreturnedfield It sets the return field for specific Index qt.name It denotes the name of the query Template or Search Template returnfield It denotes name of the Field to be returned. setsnippetfield It sets the SnippetField of an index. qt.name It denotes the name of the query Template or Search Template qt. maxSnippetSize It denotes the maximum size of the snippet. qt.tag It denotes the tag to be highlighted on search keyword. Snippetfield The name of the field to be set as Snippet qt. fragmenter Fragmenter is one in which how the snippet is spitted into chunks .it is an enum value listed below. NoFragmenter Indiscriminately quotes the field from its beginning. SizeFragmenter It centres the snippet on the target terms, then extends the snippet rightward and leftward until it hits the maximum allowed size. SentenceFragmenter It centres the snippet on the target terms, then extends the snippet rightward and leftward in a way that strives to preserve the sentences in the text. Â  Â  Examples HTTP request http://localhost:8080/searchtemplate?use=index1&amp;cmd=delete&amp;qt.name=search http://localhost:8080/searchtemplate?use=index1&amp;cmd=create&amp;qt.name=search&amp;qt.query=title:($$)^10 OR title:("$$")^10 OR content:($$)^10 OR content:("$$")^10&amp;qt.operator=AND&amp;qt.rows=10&amp;qt.slop=2&amp;qt.lang=ENGLISH $searchTemplate=new OssSearchTemplate("http://localhost:8080", "index1"); $searchTemplate-&gt;createSearchTemplate("search1", 'title:($$)^10 OR title:("$$")^10 OR content:($$)^10 OR content:("$$")^10 OR', "AND", "10", "2", "ENGLISH"); $searchTemplate-&gt;setSnippetField("search1", "title", 150, "b", "1", "NoFragmenter");</value></field><field name="contentPhonetic"><value>API Name Search Template Description The Search Template API is used to create,delete,Search Template for querying the index. Parameters List Parameters Description use The use parameter denotes the index name which needs to be crawled or queried . login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. cmd The cmd Parameter denotes the Operations to be done. The Acceptable Operations are listed below.Create The create command creates the Search Template for given inputs. qt.name It denotes the name of the query Template or Search Template Search qt.query It denotes the Pattern Query of the search Template title:($$)^10 OR title:("$$")^10OR content:($$)^10 OR content:("$$")^10 qt.operator It denotes the Operator for search it can be AND or OR search qt.rows It denotes the number of rows to return . qt.slop It denotes tthe tolerance for words between the terms being searched. qt.lang It denotes the language to be searched. Delete The delete command deletes the Search Template for given inputs. qt.name It denotes the name of the query Template or Search Template setreturnedfield It sets the return field for specific Index qt.name It denotes the name of the query Template or Search Template returnfield It denotes name of the Field to be returned. setsnippetfield It sets the SnippetField of an index. qt.name It denotes the name of the query Template or Search Template qt. maxSnippetSize It denotes the maximum size of the snippet. qt.tag It denotes the tag to be highlighted on search keyword. Snippetfield The name of the field to be set as Snippet qt. fragmenter Fragmenter is one in which how the snippet is spitted into chunks .it is an enum value listed below. NoFragmenter Indiscriminately quotes the field from its beginning. SizeFragmenter It centres the snippet on the target terms, then extends the snippet rightward and leftward until it hits the maximum allowed size. SentenceFragmenter It centres the snippet on the target terms, then extends the snippet rightward and leftward in a way that strives to preserve the sentences in the text. Â  Â  Examples HTTP request http://localhost:8080/searchtemplate?use=index1&amp;cmd=delete&amp;qt.name=search http://localhost:8080/searchtemplate?use=index1&amp;cmd=create&amp;qt.name=search&amp;qt.query=title:($$)^10 OR title:("$$")^10 OR content:($$)^10 OR content:("$$")^10&amp;qt.operator=AND&amp;qt.rows=10&amp;qt.slop=2&amp;qt.lang=ENGLISH $searchTemplate=new OssSearchTemplate("http://localhost:8080", "index1"); $searchTemplate-&gt;createSearchTemplate("search1", 'title:($$)^10 OR title:("$$")^10 OR content:($$)^10 OR content:("$$")^10 OR', "AND", "10", "2", "ENGLISH"); $searchTemplate-&gt;setSnippetField("search1", "title", 150, "b", "1", "NoFragmenter");</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Search+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Search+API</value></field><field name="autocomplete"><value>Search API</value></field><field name="title"><value>Search API</value></field><field name="titleExact"><value>Search API</value></field><field name="titlePhonetic"><value>Search API</value></field><field name="content"><value>API Name Search/Select Description API Search/Select is the interface to query the OpenSearchServer search engine. Parameters List Parameters Description use The name of the index you want to query. XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;query('a word') -&gt;execute(); q or query Searches for keywords. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;query('a word') -&gt;execute(); qt (query template) Allows you to pre-load a set query. Passes the template name. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;query('a word') -&gt;execute(); start Indicates the rank of the first document to be selected. This parameter, along with 'rows' (below), is useful if you need to paginate. 0 XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;start=10 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;start(1) -&gt;query('a word') -&gt;execute(); rows Indicates the number of records to be returned. Associated with the 'start' parameter, this parameter allows for paginating. 10 XML/HTTP Â  http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;start=10&amp;rows=5 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;start(1) -&gt;rows(5) -&gt;query('a word') -&gt;execute(); lang Indicates the language of the keywords passed to the query parameter. The engine will use the matching analyzer. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;lang=fr $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;query('a word') -&gt;lang('fr') -&gt;execute(); collapse.mode Specifies one of the following collapsing methods: offÂ : no collapsing optimized: the beginning of the document gets collapsed (from 0 to start + rows) full: all documents are collapsed (Warning - this can be very slow on a large document set). XML/HTTP Â  http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;query('a word') -&gt;execute(); collapse.field Activates collapsing on the field passed as a parameter. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized&amp;collapse.field=hostname $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;collapseField('hostname') -&gt;query('a word') -&gt;execute(); collapse.max Indicates the number of documents to send before collapsing activation. XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized&amp;collapse.field=hostname&amp;collapse.max=3 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;collapseField('hostname') -&gt;collapseMax(3) -&gt;query('a word') -&gt;execute(); delete If this parameter is passed, the documents returned by the query are deleted. No XML / HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;delete=yes $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;delete(true) -&gt;query('a word') -&gt;execute(); rf or fl (returned field) Adds one or more field to send. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;rf=date&amp;rf=color$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;field('date') -&gt;field('color') -&gt;query('a word') -&gt;execute(); Â  OR $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;field(array('date', 'color')) -&gt;query('a word') -&gt;execute(); Â  Â  fq (filter query) Adds a filter to the current call. The parameters can be used several times in the same call for successive filters. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;fq=date:20101201&amp;fq=color:red sort Controls the order of the results. Use the abbreviation + ou - to sort in ascending or descending order. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;sort=-date&amp;sort=color Â $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;sort('-date') -&gt;sort('color') -&gt;query('a word') -&gt;execute(); OR $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;sort(array('-date', 'color')) -&gt;query('a word') -&gt;execute(); facet Enables faceting for the field passed as a parameter. You can add a number in parentheses to specify the minimum count. XML / HTTP |http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;facet=color&amp;facet=date(2)$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;facet('color') -&gt;facet('date', 2) -&gt;query('a word') -&gt;execute(); facet.multi Same as with parameter facet, for use with fields containing multiple values (multi-valued fields). Â  XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;facet.multi=color(4)&amp;facet.multi=date(1) $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;facet('color', 5, true) -&gt;facet('date', 1, true) -&gt;query('a word') -&gt;execute(); Examples HTTP Request The call is sent through a HTTP request. POST OR GET are both available. The engine will answer with a XML result. Parameters have to be encoded in UTF-8. Â  http://localhost:8080/select?use=index1&amp;qt=search1&amp;q=a+word Â  PHP The request is done using a PHP5 class, OSS_Search (see the examples below). This class can be downloaded along with the OpenSearchServer source code, and found here: OSS_Search.class.php.</value></field><field name="contentExact"><value>API Name Search/Select Description API Search/Select is the interface to query the OpenSearchServer search engine. Parameters List Parameters Description use The name of the index you want to query. XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;query('a word') -&gt;execute(); q or query Searches for keywords. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;query('a word') -&gt;execute(); qt (query template) Allows you to pre-load a set query. Passes the template name. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;query('a word') -&gt;execute(); start Indicates the rank of the first document to be selected. This parameter, along with 'rows' (below), is useful if you need to paginate. 0 XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;start=10 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;start(1) -&gt;query('a word') -&gt;execute(); rows Indicates the number of records to be returned. Associated with the 'start' parameter, this parameter allows for paginating. 10 XML/HTTP Â  http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;start=10&amp;rows=5 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;start(1) -&gt;rows(5) -&gt;query('a word') -&gt;execute(); lang Indicates the language of the keywords passed to the query parameter. The engine will use the matching analyzer. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;lang=fr $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;query('a word') -&gt;lang('fr') -&gt;execute(); collapse.mode Specifies one of the following collapsing methods: offÂ : no collapsing optimized: the beginning of the document gets collapsed (from 0 to start + rows) full: all documents are collapsed (Warning - this can be very slow on a large document set). XML/HTTP Â  http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;query('a word') -&gt;execute(); collapse.field Activates collapsing on the field passed as a parameter. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized&amp;collapse.field=hostname $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;collapseField('hostname') -&gt;query('a word') -&gt;execute(); collapse.max Indicates the number of documents to send before collapsing activation. XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized&amp;collapse.field=hostname&amp;collapse.max=3 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;collapseField('hostname') -&gt;collapseMax(3) -&gt;query('a word') -&gt;execute(); delete If this parameter is passed, the documents returned by the query are deleted. No XML / HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;delete=yes $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;delete(true) -&gt;query('a word') -&gt;execute(); rf or fl (returned field) Adds one or more field to send. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;rf=date&amp;rf=color$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;field('date') -&gt;field('color') -&gt;query('a word') -&gt;execute(); Â  OR $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;field(array('date', 'color')) -&gt;query('a word') -&gt;execute(); Â  Â  fq (filter query) Adds a filter to the current call. The parameters can be used several times in the same call for successive filters. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;fq=date:20101201&amp;fq=color:red sort Controls the order of the results. Use the abbreviation + ou - to sort in ascending or descending order. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;sort=-date&amp;sort=color Â $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;sort('-date') -&gt;sort('color') -&gt;query('a word') -&gt;execute(); OR $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;sort(array('-date', 'color')) -&gt;query('a word') -&gt;execute(); facet Enables faceting for the field passed as a parameter. You can add a number in parentheses to specify the minimum count. XML / HTTP |http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;facet=color&amp;facet=date(2)$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;facet('color') -&gt;facet('date', 2) -&gt;query('a word') -&gt;execute(); facet.multi Same as with parameter facet, for use with fields containing multiple values (multi-valued fields). Â  XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;facet.multi=color(4)&amp;facet.multi=date(1) $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;facet('color', 5, true) -&gt;facet('date', 1, true) -&gt;query('a word') -&gt;execute(); Examples HTTP Request The call is sent through a HTTP request. POST OR GET are both available. The engine will answer with a XML result. Parameters have to be encoded in UTF-8. Â  http://localhost:8080/select?use=index1&amp;qt=search1&amp;q=a+word Â  PHP The request is done using a PHP5 class, OSS_Search (see the examples below). This class can be downloaded along with the OpenSearchServer source code, and found here: OSS_Search.class.php.</value></field><field name="contentPhonetic"><value>API Name Search/Select Description API Search/Select is the interface to query the OpenSearchServer search engine. Parameters List Parameters Description use The name of the index you want to query. XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;query('a word') -&gt;execute(); q or query Searches for keywords. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;query('a word') -&gt;execute(); qt (query template) Allows you to pre-load a set query. Passes the template name. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;query('a word') -&gt;execute(); start Indicates the rank of the first document to be selected. This parameter, along with 'rows' (below), is useful if you need to paginate. 0 XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;start=10 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;start(1) -&gt;query('a word') -&gt;execute(); rows Indicates the number of records to be returned. Associated with the 'start' parameter, this parameter allows for paginating. 10 XML/HTTP Â  http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;start=10&amp;rows=5 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;start(1) -&gt;rows(5) -&gt;query('a word') -&gt;execute(); lang Indicates the language of the keywords passed to the query parameter. The engine will use the matching analyzer. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;lang=fr $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;query('a word') -&gt;lang('fr') -&gt;execute(); collapse.mode Specifies one of the following collapsing methods: offÂ : no collapsing optimized: the beginning of the document gets collapsed (from 0 to start + rows) full: all documents are collapsed (Warning - this can be very slow on a large document set). XML/HTTP Â  http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;query('a word') -&gt;execute(); collapse.field Activates collapsing on the field passed as a parameter. XML/HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized&amp;collapse.field=hostname $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;collapseField('hostname') -&gt;query('a word') -&gt;execute(); collapse.max Indicates the number of documents to send before collapsing activation. XML/HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;collapse.mode=optimized&amp;collapse.field=hostname&amp;collapse.max=3 $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;collapseMode('optimized') -&gt;collapseField('hostname') -&gt;collapseMax(3) -&gt;query('a word') -&gt;execute(); delete If this parameter is passed, the documents returned by the query are deleted. No XML / HTTP Â http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;delete=yes $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;delete(true) -&gt;query('a word') -&gt;execute(); rf or fl (returned field) Adds one or more field to send. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;rf=date&amp;rf=color$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;field('date') -&gt;field('color') -&gt;query('a word') -&gt;execute(); Â  OR $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;field(array('date', 'color')) -&gt;query('a word') -&gt;execute(); Â  Â  fq (filter query) Adds a filter to the current call. The parameters can be used several times in the same call for successive filters. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;fq=date:20101201&amp;fq=color:red sort Controls the order of the results. Use the abbreviation + ou - to sort in ascending or descending order. XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;sort=-date&amp;sort=color Â $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;sort('-date') -&gt;sort('color') -&gt;query('a word') -&gt;execute(); OR $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;sort(array('-date', 'color')) -&gt;query('a word') -&gt;execute(); facet Enables faceting for the field passed as a parameter. You can add a number in parentheses to specify the minimum count. XML / HTTP |http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;facet=color&amp;facet=date(2)$search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;facet('color') -&gt;facet('date', 2) -&gt;query('a word') -&gt;execute(); facet.multi Same as with parameter facet, for use with fields containing multiple values (multi-valued fields). Â  XML / HTTP http://localhost:8080/select?use=index1&amp;query=a+word&amp;qt=template1&amp;facet.multi=color(4)&amp;facet.multi=date(1) $search = new OSS_Search('http://localhost:8080', 'index1'); $result = $search-&gt;template('template1') -&gt;facet('color', 5, true) -&gt;facet('date', 1, true) -&gt;query('a word') -&gt;execute(); Examples HTTP Request The call is sent through a HTTP request. POST OR GET are both available. The engine will answer with a XML result. Parameters have to be encoded in UTF-8. Â  http://localhost:8080/select?use=index1&amp;qt=search1&amp;q=a+word Â  PHP The request is done using a PHP5 class, OSS_Search (see the examples below). This class can be downloaded along with the OpenSearchServer source code, and found here: OSS_Search.class.php.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Screenshot+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Screenshot+API</value></field><field name="autocomplete"><value>Screenshot API</value></field><field name="title"><value>Screenshot API</value></field><field name="titleExact"><value>Screenshot API</value></field><field name="titlePhonetic"><value>Screenshot API</value></field><field name="content"><value>API Name Screenshot Description This API captures the screenshot of a web page. Parameters List Parameters Description use It is the index name which needs to be crawled or queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. url The url Parameter denotes the URL that need to be captured. action The action parameter is an ENUM field having the following fields. capture It captures the screenshot of the given URL. image It get the image of the given URL.If the URL was already captured. check It Checks the URL is already captured or not. Examples HTTP Request http://localhost:8080/screenshot?use=index1&amp;action=capture&amp;url=http://www.open-search-server.com http://localhost:8080/screenshot?use=index1&amp;action=check&amp;url=http://www.open-search-server.com PHP No PHP API for Action. Â  Â </value></field><field name="contentExact"><value>API Name Screenshot Description This API captures the screenshot of a web page. Parameters List Parameters Description use It is the index name which needs to be crawled or queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. url The url Parameter denotes the URL that need to be captured. action The action parameter is an ENUM field having the following fields. capture It captures the screenshot of the given URL. image It get the image of the given URL.If the URL was already captured. check It Checks the URL is already captured or not. Examples HTTP Request http://localhost:8080/screenshot?use=index1&amp;action=capture&amp;url=http://www.open-search-server.com http://localhost:8080/screenshot?use=index1&amp;action=check&amp;url=http://www.open-search-server.com PHP No PHP API for Action. Â  Â </value></field><field name="contentPhonetic"><value>API Name Screenshot Description This API captures the screenshot of a web page. Parameters List Parameters Description use It is the index name which needs to be crawled or queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. url The url Parameter denotes the URL that need to be captured. action The action parameter is an ENUM field having the following fields. capture It captures the screenshot of the given URL. image It get the image of the given URL.If the URL was already captured. check It Checks the URL is already captured or not. Examples HTTP Request http://localhost:8080/screenshot?use=index1&amp;action=capture&amp;url=http://www.open-search-server.com http://localhost:8080/screenshot?use=index1&amp;action=check&amp;url=http://www.open-search-server.com PHP No PHP API for Action. Â  Â </value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Schema+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Schema+API</value></field><field name="autocomplete"><value>Schema API</value></field><field name="title"><value>Schema API</value></field><field name="titleExact"><value>Schema API</value></field><field name="titlePhonetic"><value>Schema API</value></field><field name="content"><value>API Name Schema Description This API is used for creating, listing, and deleting an Index. Parameters List Parameters Description use It is the index name which needs to be crawled or queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. cmd setfieldThis cmd is used to set the default and unique field in the schema.field.defaultIf the "field.default" is set as "YES" it sets the default field in the schema.field.uniqueIf the "field.unique" is set as "YES" it sets the unique field in the schema.field.nameIt denotes the field name to be set as unique or default field in the schema._deletefieldThis cmd is used to delete the field in the schema.field.nameIt denotes the field name to be deleted from the schema.getschemaThis is used to display datas from the schema.createindexThis cmd is used to create an index in the OpenSearchServer instance.index.nameIt denotes the name of the index that need to created.index.templateIt denotes which templates should be used while createing an OpenSearchServer instance.This is an Enum Field which has following values.WEB_CRAWLERThis is basically used for Web crawling.File_CRAWLERThis is basically used for file crawling.deleteindexThis cmd is used to delete the specified index.index.nameIt denotes the indexname that needs to be deleted.indexlistThis cmd lists the availabe index in the OpenSearchServer instance. Examples HTTP request Â  http://localhost:8080/schema?cmd=createindex&amp;index.name=index1&amp;index.template=WEB_CRAWLER Â http://localhost:8080/schema?cmd=indexlist Â http://localhost:8080/schema?cmd=deleteindex&amp;index.name=index1&amp;index.delete.name=index1 Â  PHP $ossAPI = new OSS_API('http://localhost:8080'); $ossAPI-&gt;createIndex('index1'); $ossAPI = new OSS_API('http://localhost:8080',index1); $ossAPI-&gt;setField('id','','NO','YES','YES','','NO','YES');</value></field><field name="contentExact"><value>API Name Schema Description This API is used for creating, listing, and deleting an Index. Parameters List Parameters Description use It is the index name which needs to be crawled or queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. cmd setfieldThis cmd is used to set the default and unique field in the schema.field.defaultIf the "field.default" is set as "YES" it sets the default field in the schema.field.uniqueIf the "field.unique" is set as "YES" it sets the unique field in the schema.field.nameIt denotes the field name to be set as unique or default field in the schema._deletefieldThis cmd is used to delete the field in the schema.field.nameIt denotes the field name to be deleted from the schema.getschemaThis is used to display datas from the schema.createindexThis cmd is used to create an index in the OpenSearchServer instance.index.nameIt denotes the name of the index that need to created.index.templateIt denotes which templates should be used while createing an OpenSearchServer instance.This is an Enum Field which has following values.WEB_CRAWLERThis is basically used for Web crawling.File_CRAWLERThis is basically used for file crawling.deleteindexThis cmd is used to delete the specified index.index.nameIt denotes the indexname that needs to be deleted.indexlistThis cmd lists the availabe index in the OpenSearchServer instance. Examples HTTP request Â  http://localhost:8080/schema?cmd=createindex&amp;index.name=index1&amp;index.template=WEB_CRAWLER Â http://localhost:8080/schema?cmd=indexlist Â http://localhost:8080/schema?cmd=deleteindex&amp;index.name=index1&amp;index.delete.name=index1 Â  PHP $ossAPI = new OSS_API('http://localhost:8080'); $ossAPI-&gt;createIndex('index1'); $ossAPI = new OSS_API('http://localhost:8080',index1); $ossAPI-&gt;setField('id','','NO','YES','YES','','NO','YES');</value></field><field name="contentPhonetic"><value>API Name Schema Description This API is used for creating, listing, and deleting an Index. Parameters List Parameters Description use It is the index name which needs to be crawled or queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. cmd setfieldThis cmd is used to set the default and unique field in the schema.field.defaultIf the "field.default" is set as "YES" it sets the default field in the schema.field.uniqueIf the "field.unique" is set as "YES" it sets the unique field in the schema.field.nameIt denotes the field name to be set as unique or default field in the schema._deletefieldThis cmd is used to delete the field in the schema.field.nameIt denotes the field name to be deleted from the schema.getschemaThis is used to display datas from the schema.createindexThis cmd is used to create an index in the OpenSearchServer instance.index.nameIt denotes the name of the index that need to created.index.templateIt denotes which templates should be used while createing an OpenSearchServer instance.This is an Enum Field which has following values.WEB_CRAWLERThis is basically used for Web crawling.File_CRAWLERThis is basically used for file crawling.deleteindexThis cmd is used to delete the specified index.index.nameIt denotes the indexname that needs to be deleted.indexlistThis cmd lists the availabe index in the OpenSearchServer instance. Examples HTTP request Â  http://localhost:8080/schema?cmd=createindex&amp;index.name=index1&amp;index.template=WEB_CRAWLER Â http://localhost:8080/schema?cmd=indexlist Â http://localhost:8080/schema?cmd=deleteindex&amp;index.name=index1&amp;index.delete.name=index1 Â  PHP $ossAPI = new OSS_API('http://localhost:8080'); $ossAPI-&gt;createIndex('index1'); $ossAPI = new OSS_API('http://localhost:8080',index1); $ossAPI-&gt;setField('id','','NO','YES','YES','','NO','YES');</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Renderer+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Renderer+API</value></field><field name="autocomplete"><value>Renderer API</value></field><field name="title"><value>Renderer API</value></field><field name="titleExact"><value>Renderer API</value></field><field name="titlePhonetic"><value>Renderer API</value></field><field name="content"><value>API Name Renderer Description This API renders an HTML search box that can be embedded easily in a website easily. Parameters List Parameters Description use The use parameter denotes the index name which needs to be crawled or queried. login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. name The name parameter denotes the name of the renderer under the Renderer tab. This name will be available after creating an render-er item. query This query parameter denotes the query that need to be search ed in index similar to q parameter. page This page parameter denotes that which page needs to be displayed. Examples HTTP Request http://localhost:8080/renderer?use=index1&amp;name=renderername&amp;query=opensearchserver PHP No PHP API for Renderer.</value></field><field name="contentExact"><value>API Name Renderer Description This API renders an HTML search box that can be embedded easily in a website easily. Parameters List Parameters Description use The use parameter denotes the index name which needs to be crawled or queried. login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. name The name parameter denotes the name of the renderer under the Renderer tab. This name will be available after creating an render-er item. query This query parameter denotes the query that need to be search ed in index similar to q parameter. page This page parameter denotes that which page needs to be displayed. Examples HTTP Request http://localhost:8080/renderer?use=index1&amp;name=renderername&amp;query=opensearchserver PHP No PHP API for Renderer.</value></field><field name="contentPhonetic"><value>API Name Renderer Description This API renders an HTML search box that can be embedded easily in a website easily. Parameters List Parameters Description use The use parameter denotes the index name which needs to be crawled or queried. login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. name The name parameter denotes the name of the renderer under the Renderer tab. This name will be available after creating an render-er item. query This query parameter denotes the query that need to be search ed in index similar to q parameter. page This page parameter denotes that which page needs to be displayed. Examples HTTP Request http://localhost:8080/renderer?use=index1&amp;name=renderername&amp;query=opensearchserver PHP No PHP API for Renderer.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Pattern+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Pattern+API</value></field><field name="autocomplete"><value>Pattern API</value></field><field name="title"><value>Pattern API</value></field><field name="titleExact"><value>Pattern API</value></field><field name="titlePhonetic"><value>Pattern API</value></field><field name="content"><value>API Name Pattern Description API Pattern is the interface to insert/update patterns into the web crawler of the OpenSearchServer search engine. Posting a text file One easy way to manage the pattern list is to upload a text file using a post or a put http request. Typical content of the text file (open pattern per line): www.open-search-server.com/* www.open-search-server.fr/* Then you have to post the file using a post or a put http request. In our example we use curl: Â curl -o log.out -T patternlist.txt "http://localhost:8080/oss/pattern?use=indexname&amp;deleteAll=yes" Parameters List Parameters Description use The name of the index you want to query. deleteAll Set yes to replace the old list with the new list. Set no to add the new patterns. Using PHP The PHP client classes can be found in the SVN directory:Â http://opensearchserve.svn.sourceforge.net/viewvc/opensearchserve/trunk/src/php $oss = new OSS_API('http://localhost:8080', 'index1'); Push a single pattern $oss-&gt;pattern('http://www.open-search-server.com/*'); Multiple patterns $oss-&gt;pattern(array( 'http://www.open-search-server.com/*', 'http://nkubz.net/*', 'http://wikipedia.fr/*' )); Replace the crawler patterns with the one's stored in a text file (one per line). $oss-&gt;pattern(file_get_contents('patternlist.txt'), true);</value></field><field name="contentExact"><value>API Name Pattern Description API Pattern is the interface to insert/update patterns into the web crawler of the OpenSearchServer search engine. Posting a text file One easy way to manage the pattern list is to upload a text file using a post or a put http request. Typical content of the text file (open pattern per line): www.open-search-server.com/* www.open-search-server.fr/* Then you have to post the file using a post or a put http request. In our example we use curl: Â curl -o log.out -T patternlist.txt "http://localhost:8080/oss/pattern?use=indexname&amp;deleteAll=yes" Parameters List Parameters Description use The name of the index you want to query. deleteAll Set yes to replace the old list with the new list. Set no to add the new patterns. Using PHP The PHP client classes can be found in the SVN directory:Â http://opensearchserve.svn.sourceforge.net/viewvc/opensearchserve/trunk/src/php $oss = new OSS_API('http://localhost:8080', 'index1'); Push a single pattern $oss-&gt;pattern('http://www.open-search-server.com/*'); Multiple patterns $oss-&gt;pattern(array( 'http://www.open-search-server.com/*', 'http://nkubz.net/*', 'http://wikipedia.fr/*' )); Replace the crawler patterns with the one's stored in a text file (one per line). $oss-&gt;pattern(file_get_contents('patternlist.txt'), true);</value></field><field name="contentPhonetic"><value>API Name Pattern Description API Pattern is the interface to insert/update patterns into the web crawler of the OpenSearchServer search engine. Posting a text file One easy way to manage the pattern list is to upload a text file using a post or a put http request. Typical content of the text file (open pattern per line): www.open-search-server.com/* www.open-search-server.fr/* Then you have to post the file using a post or a put http request. In our example we use curl: Â curl -o log.out -T patternlist.txt "http://localhost:8080/oss/pattern?use=indexname&amp;deleteAll=yes" Parameters List Parameters Description use The name of the index you want to query. deleteAll Set yes to replace the old list with the new list. Set no to add the new patterns. Using PHP The PHP client classes can be found in the SVN directory:Â http://opensearchserve.svn.sourceforge.net/viewvc/opensearchserve/trunk/src/php $oss = new OSS_API('http://localhost:8080', 'index1'); Push a single pattern $oss-&gt;pattern('http://www.open-search-server.com/*'); Multiple patterns $oss-&gt;pattern(array( 'http://www.open-search-server.com/*', 'http://nkubz.net/*', 'http://wikipedia.fr/*' )); Replace the crawler patterns with the one's stored in a text file (one per line). $oss-&gt;pattern(file_get_contents('patternlist.txt'), true);</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Optimize+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Optimize+API</value></field><field name="autocomplete"><value>Optimize API</value></field><field name="title"><value>Optimize API</value></field><field name="titleExact"><value>Optimize API</value></field><field name="titlePhonetic"><value>Optimize API</value></field><field name="content"><value>API Name Optimize Description It optimizes the index. Parameters List Parameters Description use The use parameter represents the index name that needs to be crawled or queried. login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. Examples HTTP Request http://localhost:8080/action?use=index1 HTTP Response &lt;response&gt; &lt;entry key="Status"&gt;OK&lt;/entry&gt; &lt;/response&gt; PHP $index = new OSS_API('http://localhost:8080', 'index1'); $result = $index -&gt; optimize(âindex1â); Exceptions / Error Messages (if any) &lt;entry key="Exception"&gt;com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Bad credential&lt;/entry&gt;</value></field><field name="contentExact"><value>API Name Optimize Description It optimizes the index. Parameters List Parameters Description use The use parameter represents the index name that needs to be crawled or queried. login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. Examples HTTP Request http://localhost:8080/action?use=index1 HTTP Response &lt;response&gt; &lt;entry key="Status"&gt;OK&lt;/entry&gt; &lt;/response&gt; PHP $index = new OSS_API('http://localhost:8080', 'index1'); $result = $index -&gt; optimize(âindex1â); Exceptions / Error Messages (if any) &lt;entry key="Exception"&gt;com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Bad credential&lt;/entry&gt;</value></field><field name="contentPhonetic"><value>API Name Optimize Description It optimizes the index. Parameters List Parameters Description use The use parameter represents the index name that needs to be crawled or queried. login(optional) The login parameter denotes the User name from the Privileges tab .This will be available once you create an user. key(optional) The Key parameter denotes the Key value from the Privileges tab .This will be available once you create an user. Examples HTTP Request http://localhost:8080/action?use=index1 HTTP Response &lt;response&gt; &lt;entry key="Status"&gt;OK&lt;/entry&gt; &lt;/response&gt; PHP $index = new OSS_API('http://localhost:8080', 'index1'); $result = $index -&gt; optimize(âindex1â); Exceptions / Error Messages (if any) &lt;entry key="Exception"&gt;com.jaeksoft.searchlib.web.ServletException: com.jaeksoft.searchlib.SearchLibException: Bad credential&lt;/entry&gt;</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Monitor+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Monitor+API</value></field><field name="autocomplete"><value>Monitor API</value></field><field name="title"><value>Monitor API</value></field><field name="titleExact"><value>Monitor API</value></field><field name="titlePhonetic"><value>Monitor API</value></field><field name="content"><value>API Name Monitor Description This API Monitors the index with available processors,system information etc. Parameters List Parameters Description login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. Examples HTTP Request http://localhost:8080/monitor HTTP Response &lt;response&gt; &lt;system&gt; &lt;availableProcessors value="2"/&gt; &lt;freeMemory value="10110504" rate="40.175533294677734"/&gt; &lt;maxMemory value="674824192"/&gt; &lt;totalMemory value="25165824"/&gt; &lt;indexCount value="2"/&gt; &lt;freeDiskSpace value="231921213440" rate="74.33024735165283"/&gt; &lt;dataDirectoryPath value="/home/data"/&gt; &lt;/system&gt; &lt;properties&gt; &lt;property name="java.runtime.name" value="OpenJDK Runtime Environment"/&gt; &lt;property name="sun.boot.library.path" value="/usr/lib/jvm/java-6-openjdk/jre/lib/i386"/&gt; &lt;property name="java.vm.version" value="20.0-b11"/&gt; &lt;property name="shared.loader" value=""/&gt; &lt;property name="java.vm.vendor" value="Sun Microsystems Inc."/&gt; &lt;property name="java.vendor.url" value="http://java.sun.com/"/&gt; &lt;property name="path.separator" value=":"/&gt; &lt;property name="tomcat.util.buf.StringCache.byte.enabled" value="true"/&gt; &lt;property name="java.vm.name" value="OpenJDK Server VM"/&gt; &lt;property name="file.encoding.pkg" value="sun.io"/&gt; &lt;property name="sun.java.launcher" value="SUN_STANDARD"/&gt; &lt;property name="user.country" value="US"/&gt; &lt;property name="sun.os.patch.level" value="unknown"/&gt; .... &lt;/properties&gt; &lt;/response&gt;</value></field><field name="contentExact"><value>API Name Monitor Description This API Monitors the index with available processors,system information etc. Parameters List Parameters Description login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. Examples HTTP Request http://localhost:8080/monitor HTTP Response &lt;response&gt; &lt;system&gt; &lt;availableProcessors value="2"/&gt; &lt;freeMemory value="10110504" rate="40.175533294677734"/&gt; &lt;maxMemory value="674824192"/&gt; &lt;totalMemory value="25165824"/&gt; &lt;indexCount value="2"/&gt; &lt;freeDiskSpace value="231921213440" rate="74.33024735165283"/&gt; &lt;dataDirectoryPath value="/home/data"/&gt; &lt;/system&gt; &lt;properties&gt; &lt;property name="java.runtime.name" value="OpenJDK Runtime Environment"/&gt; &lt;property name="sun.boot.library.path" value="/usr/lib/jvm/java-6-openjdk/jre/lib/i386"/&gt; &lt;property name="java.vm.version" value="20.0-b11"/&gt; &lt;property name="shared.loader" value=""/&gt; &lt;property name="java.vm.vendor" value="Sun Microsystems Inc."/&gt; &lt;property name="java.vendor.url" value="http://java.sun.com/"/&gt; &lt;property name="path.separator" value=":"/&gt; &lt;property name="tomcat.util.buf.StringCache.byte.enabled" value="true"/&gt; &lt;property name="java.vm.name" value="OpenJDK Server VM"/&gt; &lt;property name="file.encoding.pkg" value="sun.io"/&gt; &lt;property name="sun.java.launcher" value="SUN_STANDARD"/&gt; &lt;property name="user.country" value="US"/&gt; &lt;property name="sun.os.patch.level" value="unknown"/&gt; .... &lt;/properties&gt; &lt;/response&gt;</value></field><field name="contentPhonetic"><value>API Name Monitor Description This API Monitors the index with available processors,system information etc. Parameters List Parameters Description login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. Examples HTTP Request http://localhost:8080/monitor HTTP Response &lt;response&gt; &lt;system&gt; &lt;availableProcessors value="2"/&gt; &lt;freeMemory value="10110504" rate="40.175533294677734"/&gt; &lt;maxMemory value="674824192"/&gt; &lt;totalMemory value="25165824"/&gt; &lt;indexCount value="2"/&gt; &lt;freeDiskSpace value="231921213440" rate="74.33024735165283"/&gt; &lt;dataDirectoryPath value="/home/data"/&gt; &lt;/system&gt; &lt;properties&gt; &lt;property name="java.runtime.name" value="OpenJDK Runtime Environment"/&gt; &lt;property name="sun.boot.library.path" value="/usr/lib/jvm/java-6-openjdk/jre/lib/i386"/&gt; &lt;property name="java.vm.version" value="20.0-b11"/&gt; &lt;property name="shared.loader" value=""/&gt; &lt;property name="java.vm.vendor" value="Sun Microsystems Inc."/&gt; &lt;property name="java.vendor.url" value="http://java.sun.com/"/&gt; &lt;property name="path.separator" value=":"/&gt; &lt;property name="tomcat.util.buf.StringCache.byte.enabled" value="true"/&gt; &lt;property name="java.vm.name" value="OpenJDK Server VM"/&gt; &lt;property name="file.encoding.pkg" value="sun.io"/&gt; &lt;property name="sun.java.launcher" value="SUN_STANDARD"/&gt; &lt;property name="user.country" value="US"/&gt; &lt;property name="sun.os.patch.level" value="unknown"/&gt; .... &lt;/properties&gt; &lt;/response&gt;</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Index+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Index+API</value></field><field name="autocomplete"><value>Index API</value></field><field name="title"><value>Index API</value></field><field name="titleExact"><value>Index API</value></field><field name="titlePhonetic"><value>Index API</value></field><field name="content"><value>API Name Index Description API Update is the interface to insert/update documents into an index of the OpenSearchServer search engine. Posting a text file One easy way to populate data is to upload an XML file using a post or a put http request. Then you have to post the file using a post or a put http request. In our example we use curl: curl -o log.out -H "Content-type: text/xml; charset=utf-8" -T documents.xml "http://localhost:8080/update?use=indexName" The XML format is described here XML Indexing Format. Using PHP The request is done using the PHP5 method OSS_API::update (see the examples below). This class can be downloaded along with OpenSearchServer source code, and found here: OSS_API.class.php. If you have a valid XML Index document you can send it using the OSS_API directly. $server = new OSS_API('http://localhost:8080', 'indexName'); $server-&gt;update($xmlIndex); If you need to create one, you can use the OSS_IndexDocument found here OSS_IndexDocument.class.php. Example The following creates an instance of the OSS_IndexDocument class. This object can carry one or more documents to index. $index = new OSS_IndexDocument(); The following adds a document: $document = $index-&gt;newDocument('en'); The following adds a field within the document: $document-&gt;newField('id', '1234'); $document-&gt;newField('title', 'Open Search Server'); $document-&gt;newField('content', 'Open Source Search Engine'); $document-&gt;newField('meta', 'Open Source'); $document-&gt;newField('meta', 'Search Engine'); // Multi value field The following inserts the document(s) within the index. $server = new OSS_API('http://localhost:8080', 'indexName'); $server-&gt;update($index);</value></field><field name="contentExact"><value>API Name Index Description API Update is the interface to insert/update documents into an index of the OpenSearchServer search engine. Posting a text file One easy way to populate data is to upload an XML file using a post or a put http request. Then you have to post the file using a post or a put http request. In our example we use curl: curl -o log.out -H "Content-type: text/xml; charset=utf-8" -T documents.xml "http://localhost:8080/update?use=indexName" The XML format is described here XML Indexing Format. Using PHP The request is done using the PHP5 method OSS_API::update (see the examples below). This class can be downloaded along with OpenSearchServer source code, and found here: OSS_API.class.php. If you have a valid XML Index document you can send it using the OSS_API directly. $server = new OSS_API('http://localhost:8080', 'indexName'); $server-&gt;update($xmlIndex); If you need to create one, you can use the OSS_IndexDocument found here OSS_IndexDocument.class.php. Example The following creates an instance of the OSS_IndexDocument class. This object can carry one or more documents to index. $index = new OSS_IndexDocument(); The following adds a document: $document = $index-&gt;newDocument('en'); The following adds a field within the document: $document-&gt;newField('id', '1234'); $document-&gt;newField('title', 'Open Search Server'); $document-&gt;newField('content', 'Open Source Search Engine'); $document-&gt;newField('meta', 'Open Source'); $document-&gt;newField('meta', 'Search Engine'); // Multi value field The following inserts the document(s) within the index. $server = new OSS_API('http://localhost:8080', 'indexName'); $server-&gt;update($index);</value></field><field name="contentPhonetic"><value>API Name Index Description API Update is the interface to insert/update documents into an index of the OpenSearchServer search engine. Posting a text file One easy way to populate data is to upload an XML file using a post or a put http request. Then you have to post the file using a post or a put http request. In our example we use curl: curl -o log.out -H "Content-type: text/xml; charset=utf-8" -T documents.xml "http://localhost:8080/update?use=indexName" The XML format is described here XML Indexing Format. Using PHP The request is done using the PHP5 method OSS_API::update (see the examples below). This class can be downloaded along with OpenSearchServer source code, and found here: OSS_API.class.php. If you have a valid XML Index document you can send it using the OSS_API directly. $server = new OSS_API('http://localhost:8080', 'indexName'); $server-&gt;update($xmlIndex); If you need to create one, you can use the OSS_IndexDocument found here OSS_IndexDocument.class.php. Example The following creates an instance of the OSS_IndexDocument class. This object can carry one or more documents to index. $index = new OSS_IndexDocument(); The following adds a document: $document = $index-&gt;newDocument('en'); The following adds a field within the document: $document-&gt;newField('id', '1234'); $document-&gt;newField('title', 'Open Search Server'); $document-&gt;newField('content', 'Open Source Search Engine'); $document-&gt;newField('meta', 'Open Source'); $document-&gt;newField('meta', 'Search Engine'); // Multi value field The following inserts the document(s) within the index. $server = new OSS_API('http://localhost:8080', 'indexName'); $server-&gt;update($index);</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/FileCrawler+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/FileCrawler+API</value></field><field name="autocomplete"><value>FileCrawler API</value></field><field name="title"><value>FileCrawler API</value></field><field name="titleExact"><value>FileCrawler API</value></field><field name="titlePhonetic"><value>FileCrawler API</value></field><field name="content"><value>API Name FileCrawler Description It starts or stops the file crawler. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. action The action parameter is an ENUM field consisting of the following fields: Examples HTTP request Â http://localhost:8080/filecrawler?use=index1&amp;action=start http://localhost:8080/filecrawler?use=index1&amp;action=stop PHP Â No PHP API for Action.</value></field><field name="contentExact"><value>API Name FileCrawler Description It starts or stops the file crawler. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. action The action parameter is an ENUM field consisting of the following fields: Examples HTTP request Â http://localhost:8080/filecrawler?use=index1&amp;action=start http://localhost:8080/filecrawler?use=index1&amp;action=stop PHP Â No PHP API for Action.</value></field><field name="contentPhonetic"><value>API Name FileCrawler Description It starts or stops the file crawler. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. action The action parameter is an ENUM field consisting of the following fields: Examples HTTP request Â http://localhost:8080/filecrawler?use=index1&amp;action=start http://localhost:8080/filecrawler?use=index1&amp;action=stop PHP Â No PHP API for Action.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Delete+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Delete+API</value></field><field name="autocomplete"><value>Delete API</value></field><field name="title"><value>Delete API</value></field><field name="titleExact"><value>Delete API</value></field><field name="titlePhonetic"><value>Delete API</value></field><field name="content"><value>API Name Delete Description This API deletes documents from the index parameters by specifying a query. Â Info:Â The deleted documents cannot be recovered, so make sure you have created a backup before performing the delete operation. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. q This is the keyword which needs to be searched the index. uniq This parameter is used for deleting the documents by unique field. Examples HTTP request Â  http://localhost:8080/delete?use=torrents&amp;q=*:* http://localhost:8080/delete?use=oss_index&amp;q=OpenSearchServerÂ *:*Â will delete all the documents in the index. Â  PHP Â  $delete = new oss_delete('http://localhost:8080', 'index1'); $result = $delete-&gt;delete(âOpenSearchServerâ);</value></field><field name="contentExact"><value>API Name Delete Description This API deletes documents from the index parameters by specifying a query. Â Info:Â The deleted documents cannot be recovered, so make sure you have created a backup before performing the delete operation. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. q This is the keyword which needs to be searched the index. uniq This parameter is used for deleting the documents by unique field. Examples HTTP request Â  http://localhost:8080/delete?use=torrents&amp;q=*:* http://localhost:8080/delete?use=oss_index&amp;q=OpenSearchServerÂ *:*Â will delete all the documents in the index. Â  PHP Â  $delete = new oss_delete('http://localhost:8080', 'index1'); $result = $delete-&gt;delete(âOpenSearchServerâ);</value></field><field name="contentPhonetic"><value>API Name Delete Description This API deletes documents from the index parameters by specifying a query. Â Info:Â The deleted documents cannot be recovered, so make sure you have created a backup before performing the delete operation. Parameters List Parameters Description use This is the index name which needs to be crawled/queried. login (optional) The login parameter comprises the User name from the Privileges tab. This is available once you create a user. key (optional) The Key parameter comprises the Key value from the Privileges tab. This is available once you create a user. q This is the keyword which needs to be searched the index. uniq This parameter is used for deleting the documents by unique field. Examples HTTP request Â  http://localhost:8080/delete?use=torrents&amp;q=*:* http://localhost:8080/delete?use=oss_index&amp;q=OpenSearchServerÂ *:*Â will delete all the documents in the index. Â  PHP Â  $delete = new oss_delete('http://localhost:8080', 'index1'); $result = $delete-&gt;delete(âOpenSearchServerâ);</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Database+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Database+API</value></field><field name="autocomplete"><value>Database API</value></field><field name="title"><value>Database API</value></field><field name="titleExact"><value>Database API</value></field><field name="titlePhonetic"><value>Database API</value></field><field name="content"><value>Examples http://localhost:8080/database?use=oss&amp;name=dbname http://localhost:8080/database?use=oss&amp;name=dbname&amp;login=admin&amp;key=6020b80a823e276727a0d6a23167d52b Description This API performs execute a database crawl. Parameters List Parameters Description use It is the index name. login (optional) The login parameter. This is required once you create a user. key (optional) The key parameter related to the login (api key). This is required once you create a user. name The name of the database crawl item which will be executed.</value></field><field name="contentExact"><value>Examples http://localhost:8080/database?use=oss&amp;name=dbname http://localhost:8080/database?use=oss&amp;name=dbname&amp;login=admin&amp;key=6020b80a823e276727a0d6a23167d52b Description This API performs execute a database crawl. Parameters List Parameters Description use It is the index name. login (optional) The login parameter. This is required once you create a user. key (optional) The key parameter related to the login (api key). This is required once you create a user. name The name of the database crawl item which will be executed.</value></field><field name="contentPhonetic"><value>Examples http://localhost:8080/database?use=oss&amp;name=dbname http://localhost:8080/database?use=oss&amp;name=dbname&amp;login=admin&amp;key=6020b80a823e276727a0d6a23167d52b Description This API performs execute a database crawl. Parameters List Parameters Description use It is the index name. login (optional) The login parameter. This is required once you create a user. key (optional) The key parameter related to the login (api key). This is required once you create a user. name The name of the database crawl item which will be executed.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Action+API</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Action+API</value></field><field name="autocomplete"><value>Action API</value></field><field name="title"><value>Action API</value></field><field name="titleExact"><value>Action API</value></field><field name="titlePhonetic"><value>Action API</value></field><field name="content"><value>Example http://localhost:8080/action?use=indexname&amp;action=optimize Description The action API performs actions such as: optimize: optimize the index reload: reload the index deleteAll: truncate the indue online: set the index online offline: set the index offline readonly: set the index to read only mode readwrite: set the index to read/write mode. Parameter Description use It is the index name login (optional) The login parameter. This is required once you create a user. key (optional) The key parameter related to the login (api key). This is required once you create a user. action The action to perform: optimize, reload, deleteAll, online, offline, readonly, readwrite</value></field><field name="contentExact"><value>Example http://localhost:8080/action?use=indexname&amp;action=optimize Description The action API performs actions such as: optimize: optimize the index reload: reload the index deleteAll: truncate the indue online: set the index online offline: set the index offline readonly: set the index to read only mode readwrite: set the index to read/write mode. Parameter Description use It is the index name login (optional) The login parameter. This is required once you create a user. key (optional) The key parameter related to the login (api key). This is required once you create a user. action The action to perform: optimize, reload, deleteAll, online, offline, readonly, readwrite</value></field><field name="contentPhonetic"><value>Example http://localhost:8080/action?use=indexname&amp;action=optimize Description The action API performs actions such as: optimize: optimize the index reload: reload the index deleteAll: truncate the indue online: set the index online offline: set the index offline readonly: set the index to read only mode readwrite: set the index to read/write mode. Parameter Description use It is the index name login (optional) The login parameter. This is required once you create a user. key (optional) The key parameter related to the login (api key). This is required once you create a user. action The action to perform: optimize, reload, deleteAll, online, offline, readonly, readwrite</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/API+reference</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/API+reference</value></field><field name="autocomplete"><value>API reference</value></field><field name="title"><value>API reference</value></field><field name="titleExact"><value>API reference</value></field><field name="titlePhonetic"><value>API reference</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/System</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/System</value></field><field name="autocomplete"><value>System</value></field><field name="title"><value>System</value></field><field name="titleExact"><value>System</value></field><field name="titlePhonetic"><value>System</value></field><field name="content"><value>This tab displays the system information of the server where OpenSearchServer is installed. There are two tabs underÂ SystemÂ tab: General Properties Figure: General tab Figure: Properties tab</value></field><field name="contentExact"><value>This tab displays the system information of the server where OpenSearchServer is installed. There are two tabs underÂ SystemÂ tab: General Properties Figure: General tab Figure: Properties tab</value></field><field name="contentPhonetic"><value>This tab displays the system information of the server where OpenSearchServer is installed. There are two tabs underÂ SystemÂ tab: General Properties Figure: General tab Figure: Properties tab</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Terms</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Terms</value></field><field name="autocomplete"><value>Terms</value></field><field name="title"><value>Terms</value></field><field name="titleExact"><value>Terms</value></field><field name="titlePhonetic"><value>Terms</value></field><field name="content"><value>The Term tab enables you to search for terms from the index. Figure: Terms To search for a term: Select the field from the first drop down list. For example, selectÂ metaKeywords. Type the term to be searched inÂ Search Term. ClickÂ Search. The search results are displayed in tabular form having columns: term, field, and frequency. ClickÂ ResetÂ to reset the selected field's terms. ClickÂ ExportÂ to export the index terms in csv format, to the local folder.</value></field><field name="contentExact"><value>The Term tab enables you to search for terms from the index. Figure: Terms To search for a term: Select the field from the first drop down list. For example, selectÂ metaKeywords. Type the term to be searched inÂ Search Term. ClickÂ Search. The search results are displayed in tabular form having columns: term, field, and frequency. ClickÂ ResetÂ to reset the selected field's terms. ClickÂ ExportÂ to export the index terms in csv format, to the local folder.</value></field><field name="contentPhonetic"><value>The Term tab enables you to search for terms from the index. Figure: Terms To search for a term: Select the field from the first drop down list. For example, selectÂ metaKeywords. Type the term to be searched inÂ Search Term. ClickÂ Search. The search results are displayed in tabular form having columns: term, field, and frequency. ClickÂ ResetÂ to reset the selected field's terms. ClickÂ ExportÂ to export the index terms in csv format, to the local folder.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Index</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Index</value></field><field name="autocomplete"><value>Index</value></field><field name="title"><value>Index</value></field><field name="titleExact"><value>Index</value></field><field name="titlePhonetic"><value>Index</value></field><field name="content"><value>This tab displays the details of the index such as search, filter, field, remoteurl, keyField, keyMd5RegExp, numDocs, maxDoc, deletions?, optimized, and readOnly?. Figure: Index tab</value></field><field name="contentExact"><value>This tab displays the details of the index such as search, filter, field, remoteurl, keyField, keyMd5RegExp, numDocs, maxDoc, deletions?, optimized, and readOnly?. Figure: Index tab</value></field><field name="contentPhonetic"><value>This tab displays the details of the index such as search, filter, field, remoteurl, keyField, keyMd5RegExp, numDocs, maxDoc, deletions?, optimized, and readOnly?. Figure: Index tab</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Cache</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Cache</value></field><field name="autocomplete"><value>Cache</value></field><field name="title"><value>Cache</value></field><field name="titleExact"><value>Cache</value></field><field name="titlePhonetic"><value>Cache</value></field><field name="content"><value>You can view the following cache from the Cache tab: Search cache Filter cache Field cache Figure: Search cache Figure: Filter cache Figure: Field cache</value></field><field name="contentExact"><value>You can view the following cache from the Cache tab: Search cache Filter cache Field cache Figure: Search cache Figure: Filter cache Figure: Field cache</value></field><field name="contentPhonetic"><value>You can view the following cache from the Cache tab: Search cache Filter cache Field cache Figure: Search cache Figure: Filter cache Figure: Field cache</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Commands</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Commands</value></field><field name="autocomplete"><value>Commands</value></field><field name="title"><value>Commands</value></field><field name="titleExact"><value>Commands</value></field><field name="titlePhonetic"><value>Commands</value></field><field name="content"><value>There are two commands available from the user interface: Reload and Optimize. Commands tab Click Reload toÂ reloadÂ an index. Click Optimize toÂ optimizeÂ an index.</value></field><field name="contentExact"><value>There are two commands available from the user interface: Reload and Optimize. Commands tab Click Reload toÂ reloadÂ an index. Click Optimize toÂ optimizeÂ an index.</value></field><field name="contentPhonetic"><value>There are two commands available from the user interface: Reload and Optimize. Commands tab Click Reload toÂ reloadÂ an index. Click Optimize toÂ optimizeÂ an index.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Statistics</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Statistics</value></field><field name="autocomplete"><value>Statistics</value></field><field name="title"><value>Statistics</value></field><field name="titleExact"><value>Statistics</value></field><field name="titlePhonetic"><value>Statistics</value></field><field name="content"><value>You can view statistics for a function for a selected period. For example, you can view statistics for SEARCH for a period Daily. To view the statistics: ClickÂ Runtime &gt; StatisticsÂ tab. Select an option fromÂ Select a statisticÂ drop down list. The following options are available: SEARCH UPDATE DELETE RELOAD OPTIMIZE Select an option fromÂ Select a period dropÂ down list. Click to select Show last error, if you want to see last error. The statistics are displayed in a table as show below: Â </value></field><field name="contentExact"><value>You can view statistics for a function for a selected period. For example, you can view statistics for SEARCH for a period Daily. To view the statistics: ClickÂ Runtime &gt; StatisticsÂ tab. Select an option fromÂ Select a statisticÂ drop down list. The following options are available: SEARCH UPDATE DELETE RELOAD OPTIMIZE Select an option fromÂ Select a period dropÂ down list. Click to select Show last error, if you want to see last error. The statistics are displayed in a table as show below: Â </value></field><field name="contentPhonetic"><value>You can view statistics for a function for a selected period. For example, you can view statistics for SEARCH for a period Daily. To view the statistics: ClickÂ Runtime &gt; StatisticsÂ tab. Select an option fromÂ Select a statisticÂ drop down list. The following options are available: SEARCH UPDATE DELETE RELOAD OPTIMIZE Select an option fromÂ Select a period dropÂ down list. Click to select Show last error, if you want to see last error. The statistics are displayed in a table as show below: Â </value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Runtime+attributes</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Runtime+attributes</value></field><field name="autocomplete"><value>Runtime attributes</value></field><field name="title"><value>Runtime attributes</value></field><field name="titleExact"><value>Runtime attributes</value></field><field name="titlePhonetic"><value>Runtime attributes</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Viewing+the+log+of+performed+jobs</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Viewing+the+log+of+performed+jobs</value></field><field name="autocomplete"><value>Viewing the log of performed jobs</value></field><field name="title"><value>Viewing the log of performed jobs</value></field><field name="titleExact"><value>Viewing the log of performed jobs</value></field><field name="titlePhonetic"><value>Viewing the log of performed jobs</value></field><field name="content"><value>To view the log of a job: ClickÂ Scheduler &gt; LogÂ tab. Select a job fromÂ Select a jobÂ drop down list. The log of the selected job is displayed.</value></field><field name="contentExact"><value>To view the log of a job: ClickÂ Scheduler &gt; LogÂ tab. Select a job fromÂ Select a jobÂ drop down list. The log of the selected job is displayed.</value></field><field name="contentPhonetic"><value>To view the log of a job: ClickÂ Scheduler &gt; LogÂ tab. Select a job fromÂ Select a jobÂ drop down list. The log of the selected job is displayed.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Editing+a+job</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Editing+a+job</value></field><field name="autocomplete"><value>Editing a job</value></field><field name="title"><value>Editing a job</value></field><field name="titleExact"><value>Editing a job</value></field><field name="titlePhonetic"><value>Editing a job</value></field><field name="content"><value>You can edit an existing job from the Job list tab. Job list To edit a job: Click Scheduler &gt; Joblist tab. Double click the job to be edited, listed under List of existing jobs and their settings. Edit the selected job window opens. Editing a job Edit the required fields. You can edit every field except Job name. To delete a job, click Delete button.</value></field><field name="contentExact"><value>You can edit an existing job from the Job list tab. Job list To edit a job: Click Scheduler &gt; Joblist tab. Double click the job to be edited, listed under List of existing jobs and their settings. Edit the selected job window opens. Editing a job Edit the required fields. You can edit every field except Job name. To delete a job, click Delete button.</value></field><field name="contentPhonetic"><value>You can edit an existing job from the Job list tab. Job list To edit a job: Click Scheduler &gt; Joblist tab. Double click the job to be edited, listed under List of existing jobs and their settings. Edit the selected job window opens. Editing a job Edit the required fields. You can edit every field except Job name. To delete a job, click Delete button.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+new+job</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+new+job</value></field><field name="autocomplete"><value>Creating a new job</value></field><field name="title"><value>Creating a new job</value></field><field name="titleExact"><value>Creating a new job</value></field><field name="titlePhonetic"><value>Creating a new job</value></field><field name="content"><value>You can schedule pre-defined tasks under jobs from the Scheduler tab. These jobs will be performed at the specified date and time. Scheduler tab To create a new job: ClickÂ Scheduler &gt; New/EditÂ job tab. Type a name inÂ Job name. SelectÂ enabledÂ check box to make it active. You can preset the time of the job fromÂ Cron expressionÂ by typingÂ Year,Â Day of week,Â Month,Â Day of month, #Hours,Â Minutes, and Seconds. Select the task to be performed fromÂ TasksÂ drop down list and crawl name fromÂ Crawl nameÂ drop down list. Click to add the selected task. Similarly, you can add other tasks. The added tasks are displayed in a tabular form having information such as #Tasks,Â Properties, andÂ actionÂ having up and down, and remove buttons. ClickÂ Create. The created job gets listed under Job list tab.</value></field><field name="contentExact"><value>You can schedule pre-defined tasks under jobs from the Scheduler tab. These jobs will be performed at the specified date and time. Scheduler tab To create a new job: ClickÂ Scheduler &gt; New/EditÂ job tab. Type a name inÂ Job name. SelectÂ enabledÂ check box to make it active. You can preset the time of the job fromÂ Cron expressionÂ by typingÂ Year,Â Day of week,Â Month,Â Day of month, #Hours,Â Minutes, and Seconds. Select the task to be performed fromÂ TasksÂ drop down list and crawl name fromÂ Crawl nameÂ drop down list. Click to add the selected task. Similarly, you can add other tasks. The added tasks are displayed in a tabular form having information such as #Tasks,Â Properties, andÂ actionÂ having up and down, and remove buttons. ClickÂ Create. The created job gets listed under Job list tab.</value></field><field name="contentPhonetic"><value>You can schedule pre-defined tasks under jobs from the Scheduler tab. These jobs will be performed at the specified date and time. Scheduler tab To create a new job: ClickÂ Scheduler &gt; New/EditÂ job tab. Type a name inÂ Job name. SelectÂ enabledÂ check box to make it active. You can preset the time of the job fromÂ Cron expressionÂ by typingÂ Year,Â Day of week,Â Month,Â Day of month, #Hours,Â Minutes, and Seconds. Select the task to be performed fromÂ TasksÂ drop down list and crawl name fromÂ Crawl nameÂ drop down list. Click to add the selected task. Similarly, you can add other tasks. The added tasks are displayed in a tabular form having information such as #Tasks,Â Properties, andÂ actionÂ having up and down, and remove buttons. ClickÂ Create. The created job gets listed under Job list tab.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Scheduling+Jobs</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Scheduling+Jobs</value></field><field name="autocomplete"><value>Scheduling Jobs</value></field><field name="title"><value>Scheduling Jobs</value></field><field name="titleExact"><value>Scheduling Jobs</value></field><field name="titlePhonetic"><value>Scheduling Jobs</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Field+mapping</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Field+mapping</value></field><field name="autocomplete"><value>Field mapping</value></field><field name="title"><value>Field mapping</value></field><field name="titleExact"><value>Field mapping</value></field><field name="titlePhonetic"><value>Field mapping</value></field><field name="content"><value>Crawler &gt; File &gt; Field mappingÂ tab contains some default fields to be linked to the index fields. The first drop down list (see the screen shot: Field mapping tab) contains the default fields depending upon the Index template you selected (web crawler or file crawler). You can map these default fields with the index fields contained in the linked in drop down list. Figure: Field mapping tab To map a file field to an index field: 1. ClickÂ Crawler &gt; Files &gt; Field mapping tab. 2. Select a file field from the first drop down list and then select the index field to be linked fromÂ linkedÂ in drop down list. For example,selectÂ contentLengthÂ from the first drop down list and then selectÂ contentExactÂ from linked in drop down list. 3. ClickÂ add. The fields are mapped and are displayed in the table below. You can delete the mapped fields by clicking X placed against it.</value></field><field name="contentExact"><value>Crawler &gt; File &gt; Field mappingÂ tab contains some default fields to be linked to the index fields. The first drop down list (see the screen shot: Field mapping tab) contains the default fields depending upon the Index template you selected (web crawler or file crawler). You can map these default fields with the index fields contained in the linked in drop down list. Figure: Field mapping tab To map a file field to an index field: 1. ClickÂ Crawler &gt; Files &gt; Field mapping tab. 2. Select a file field from the first drop down list and then select the index field to be linked fromÂ linkedÂ in drop down list. For example,selectÂ contentLengthÂ from the first drop down list and then selectÂ contentExactÂ from linked in drop down list. 3. ClickÂ add. The fields are mapped and are displayed in the table below. You can delete the mapped fields by clicking X placed against it.</value></field><field name="contentPhonetic"><value>Crawler &gt; File &gt; Field mappingÂ tab contains some default fields to be linked to the index fields. The first drop down list (see the screen shot: Field mapping tab) contains the default fields depending upon the Index template you selected (web crawler or file crawler). You can map these default fields with the index fields contained in the linked in drop down list. Figure: Field mapping tab To map a file field to an index field: 1. ClickÂ Crawler &gt; Files &gt; Field mapping tab. 2. Select a file field from the first drop down list and then select the index field to be linked fromÂ linkedÂ in drop down list. For example,selectÂ contentLengthÂ from the first drop down list and then selectÂ contentExactÂ from linked in drop down list. 3. ClickÂ add. The fields are mapped and are displayed in the table below. You can delete the mapped fields by clicking X placed against it.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Browsing+the+files</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Browsing+the+files</value></field><field name="autocomplete"><value>Browsing the files</value></field><field name="title"><value>Browsing the files</value></field><field name="titleExact"><value>Browsing the files</value></field><field name="titlePhonetic"><value>Browsing the files</value></field><field name="content"><value>o search or browse the files: 1. ClickÂ Crawl &gt; Files &gt; File BrowserÂ tab. Figure: File Browser 2. Select the files pathÂ fromÂ File drop down list or you can type the path in the box below the drop down combo. 3. Select the date range (from...to) from theÂ Index DateÂ boxes by clicking on the calender icon. 4. Select the date range (from...to) from theÂ Modified DateÂ boxes by clicking on the calender icon. 5. Select one of the following from theÂ TypeÂ drop down list: ALL file directory 6. Type the language inÂ Lang. 7. Select one of the following from the Fetch drop down list: All Unfetched Fetched Gone Temporary redirect Permanent redirect Error HTTP Error Not allowed Size exceed Url error Not in inclusion list Blocked by exclusion list By default,Â AllÂ is selected. 8. Select one of the following from theÂ ParsingÂ drop down list: Not parsed Parsed Parser Error No Parser All By default,Â AllÂ is selected. 9. Select one of the following from the Index drop down list: Not indexed Indexed Meta No Index Index error Rejected All By default,Â AllÂ is selected. 10. ClickÂ Search.</value></field><field name="contentExact"><value>o search or browse the files: 1. ClickÂ Crawl &gt; Files &gt; File BrowserÂ tab. Figure: File Browser 2. Select the files pathÂ fromÂ File drop down list or you can type the path in the box below the drop down combo. 3. Select the date range (from...to) from theÂ Index DateÂ boxes by clicking on the calender icon. 4. Select the date range (from...to) from theÂ Modified DateÂ boxes by clicking on the calender icon. 5. Select one of the following from theÂ TypeÂ drop down list: ALL file directory 6. Type the language inÂ Lang. 7. Select one of the following from the Fetch drop down list: All Unfetched Fetched Gone Temporary redirect Permanent redirect Error HTTP Error Not allowed Size exceed Url error Not in inclusion list Blocked by exclusion list By default,Â AllÂ is selected. 8. Select one of the following from theÂ ParsingÂ drop down list: Not parsed Parsed Parser Error No Parser All By default,Â AllÂ is selected. 9. Select one of the following from the Index drop down list: Not indexed Indexed Meta No Index Index error Rejected All By default,Â AllÂ is selected. 10. ClickÂ Search.</value></field><field name="contentPhonetic"><value>o search or browse the files: 1. ClickÂ Crawl &gt; Files &gt; File BrowserÂ tab. Figure: File Browser 2. Select the files pathÂ fromÂ File drop down list or you can type the path in the box below the drop down combo. 3. Select the date range (from...to) from theÂ Index DateÂ boxes by clicking on the calender icon. 4. Select the date range (from...to) from theÂ Modified DateÂ boxes by clicking on the calender icon. 5. Select one of the following from theÂ TypeÂ drop down list: ALL file directory 6. Type the language inÂ Lang. 7. Select one of the following from the Fetch drop down list: All Unfetched Fetched Gone Temporary redirect Permanent redirect Error HTTP Error Not allowed Size exceed Url error Not in inclusion list Blocked by exclusion list By default,Â AllÂ is selected. 8. Select one of the following from theÂ ParsingÂ drop down list: Not parsed Parsed Parser Error No Parser All By default,Â AllÂ is selected. 9. Select one of the following from the Index drop down list: Not indexed Indexed Meta No Index Index error Rejected All By default,Â AllÂ is selected. 10. ClickÂ Search.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Crawl+process</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Crawl+process</value></field><field name="autocomplete"><value>Crawl process</value></field><field name="title"><value>Crawl process</value></field><field name="titleExact"><value>Crawl process</value></field><field name="titlePhonetic"><value>Crawl process</value></field><field name="content"><value>You can start the file crawl process from theÂ Crawl processÂ tab. To start the file crawl process: 1. ClickÂ Crawler &gt; Files &gt; Crawl processÂ tab. Figure:Crawl Process 2. ClickÂ Not Running - Click to start. 3. You can view the status of the crawling process inÂ Current StatusÂ box. 4. View the details of prior session under the sectionÂ Statistics for prior sessions. The current threads are listed underÂ ThreadsÂ list.</value></field><field name="contentExact"><value>You can start the file crawl process from theÂ Crawl processÂ tab. To start the file crawl process: 1. ClickÂ Crawler &gt; Files &gt; Crawl processÂ tab. Figure:Crawl Process 2. ClickÂ Not Running - Click to start. 3. You can view the status of the crawling process inÂ Current StatusÂ box. 4. View the details of prior session under the sectionÂ Statistics for prior sessions. The current threads are listed underÂ ThreadsÂ list.</value></field><field name="contentPhonetic"><value>You can start the file crawl process from theÂ Crawl processÂ tab. To start the file crawl process: 1. ClickÂ Crawler &gt; Files &gt; Crawl processÂ tab. Figure:Crawl Process 2. ClickÂ Not Running - Click to start. 3. You can view the status of the crawling process inÂ Current StatusÂ box. 4. View the details of prior session under the sectionÂ Statistics for prior sessions. The current threads are listed underÂ ThreadsÂ list.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Locations</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Locations</value></field><field name="autocomplete"><value>Locations</value></field><field name="title"><value>Locations</value></field><field name="titleExact"><value>Locations</value></field><field name="titlePhonetic"><value>Locations</value></field><field name="content"><value>The added locations are displayed under theÂ LocationsÂ tab. Locations tab</value></field><field name="contentExact"><value>The added locations are displayed under theÂ LocationsÂ tab. Locations tab</value></field><field name="contentPhonetic"><value>The added locations are displayed under theÂ LocationsÂ tab. Locations tab</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Adding+a+new+location+for+file+crawling</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Adding+a+new+location+for+file+crawling</value></field><field name="autocomplete"><value>Adding a new location for file crawling</value></field><field name="title"><value>Adding a new location for file crawling</value></field><field name="titleExact"><value>Adding a new location for file crawling</value></field><field name="titlePhonetic"><value>Adding a new location for file crawling</value></field><field name="content"><value>To add a new location 1.Â Crawler &gt; Files &gt; Edit/NewÂ tab.Â Add a new location 2. Select the type of files fromÂ TypeÂ drop down list. There are four types of files:Â Local files,Â SMB/CIFS,Â FTP,Â FTP over SSL. 3. Type the location of the folder inÂ Path. For example: C:\Work 4. You can also select a folder to be crawled from Local folder. Double click the folder icon to display all the local folders under C:\. local folder 5. If you do not want the crawler to crawl the hidden files, then click to select theÂ Ignore hidden fileÂ check box. 6. If you want to include a folder's sub directories, then click to selectÂ With sub directoryÂ check box. 7. Specify the time interval between each crawl process by typing the units inÂ Delay between each access (ms). 8. Click to select theÂ EnabledÂ check box to enable the crawl process on the local folder. 9. ClickÂ Create.</value></field><field name="contentExact"><value>To add a new location 1.Â Crawler &gt; Files &gt; Edit/NewÂ tab.Â Add a new location 2. Select the type of files fromÂ TypeÂ drop down list. There are four types of files:Â Local files,Â SMB/CIFS,Â FTP,Â FTP over SSL. 3. Type the location of the folder inÂ Path. For example: C:\Work 4. You can also select a folder to be crawled from Local folder. Double click the folder icon to display all the local folders under C:\. local folder 5. If you do not want the crawler to crawl the hidden files, then click to select theÂ Ignore hidden fileÂ check box. 6. If you want to include a folder's sub directories, then click to selectÂ With sub directoryÂ check box. 7. Specify the time interval between each crawl process by typing the units inÂ Delay between each access (ms). 8. Click to select theÂ EnabledÂ check box to enable the crawl process on the local folder. 9. ClickÂ Create.</value></field><field name="contentPhonetic"><value>To add a new location 1.Â Crawler &gt; Files &gt; Edit/NewÂ tab.Â Add a new location 2. Select the type of files fromÂ TypeÂ drop down list. There are four types of files:Â Local files,Â SMB/CIFS,Â FTP,Â FTP over SSL. 3. Type the location of the folder inÂ Path. For example: C:\Work 4. You can also select a folder to be crawled from Local folder. Double click the folder icon to display all the local folders under C:\. local folder 5. If you do not want the crawler to crawl the hidden files, then click to select theÂ Ignore hidden fileÂ check box. 6. If you want to include a folder's sub directories, then click to selectÂ With sub directoryÂ check box. 7. Specify the time interval between each crawl process by typing the units inÂ Delay between each access (ms). 8. Click to select theÂ EnabledÂ check box to enable the crawl process on the local folder. 9. ClickÂ Create.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/File+Crawling</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/File+Crawling</value></field><field name="autocomplete"><value>File Crawling</value></field><field name="title"><value>File Crawling</value></field><field name="titleExact"><value>File Crawling</value></field><field name="titlePhonetic"><value>File Crawling</value></field><field name="content"><value>You can specify the location of the folder where the crawler will crawl the files to include the data in the index. File tab</value></field><field name="contentExact"><value>You can specify the location of the folder where the crawler will crawl the files to include the data in the index. File tab</value></field><field name="contentPhonetic"><value>You can specify the location of the folder where the crawler will crawl the files to include the data in the index. File tab</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Database</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Database</value></field><field name="autocomplete"><value>Database</value></field><field name="title"><value>Database</value></field><field name="titleExact"><value>Database</value></field><field name="titlePhonetic"><value>Database</value></field><field name="content"><value>Creating a database crawling list If you want to crawl a database to import its data for index entries, then you can create crawling lists from the Crawl tab. To create a new database crawl list 1. ClickÂ Crawler &gt; Database &gt; Crawl listÂ tab. Database tab 2. ClickÂ New Crawl.Â Create a new databaseÂ crawl process window opens: Create a new database crawl process 3. Type a name for the new database crawl process inÂ Name. 4. Type the class name of the JDBC driver inÂ Driver class. 5. Type the URL used to connect to the database inÂ JDBC url. 6. Type a user name who is authorized to access the database connection inÂ User. 7. Type a password inÂ Password. 8. Select the language of the indexed documents from theÂ LanguageÂ drop down list. 9. Type the primary key to identify unique document inÂ Primary key. 10. Type the SQL query to retrieve data inÂ SQL. 11. Perform the field mapping to set a relation between SQL columns and the index fields fromÂ Field mapping. To do so, type a column name inÂ SQL columnÂ and map it to anÂ index fieldÂ by selecting a field from the Index field drop down list. CheckÂ Tags, Entities, FileÂ check boxes as desired and type theÂ Field path prefix. Â  The Field path prefix is enabled only if File check box is selected. 12. Check theÂ urlÂ check box and clickÂ Add. The mapped fields are added as shown in the screen shot below 13. Click Create. New database crawl process is created and gets listed under List of existing database crawl - click on an crawl name to edit it.Â New database crawl process created 14. ClickÂ Â button to execute the crawl process. If there is any error in the SQL query or other specified parameters, thenÂ ErrorÂ is shown underÂ Status. 15. ClickÂ EditÂ to edit the crawl process.Â Edit the database crawl processÂ : &lt;Crawl process name&gt;Â window opens. Editing the crawl process 16. Edit the required parameters and clickÂ Save. Â  Viewing the running processes To view the running processes: 1. ClickÂ Crawler &gt; Database &gt; Process listÂ tab. A list of running processes is displayed as shown in the following screen shot:Â Process list 2. Click to select the Show debug information check box to display the debug information.</value></field><field name="contentExact"><value>Creating a database crawling list If you want to crawl a database to import its data for index entries, then you can create crawling lists from the Crawl tab. To create a new database crawl list 1. ClickÂ Crawler &gt; Database &gt; Crawl listÂ tab. Database tab 2. ClickÂ New Crawl.Â Create a new databaseÂ crawl process window opens: Create a new database crawl process 3. Type a name for the new database crawl process inÂ Name. 4. Type the class name of the JDBC driver inÂ Driver class. 5. Type the URL used to connect to the database inÂ JDBC url. 6. Type a user name who is authorized to access the database connection inÂ User. 7. Type a password inÂ Password. 8. Select the language of the indexed documents from theÂ LanguageÂ drop down list. 9. Type the primary key to identify unique document inÂ Primary key. 10. Type the SQL query to retrieve data inÂ SQL. 11. Perform the field mapping to set a relation between SQL columns and the index fields fromÂ Field mapping. To do so, type a column name inÂ SQL columnÂ and map it to anÂ index fieldÂ by selecting a field from the Index field drop down list. CheckÂ Tags, Entities, FileÂ check boxes as desired and type theÂ Field path prefix. Â  The Field path prefix is enabled only if File check box is selected. 12. Check theÂ urlÂ check box and clickÂ Add. The mapped fields are added as shown in the screen shot below 13. Click Create. New database crawl process is created and gets listed under List of existing database crawl - click on an crawl name to edit it.Â New database crawl process created 14. ClickÂ Â button to execute the crawl process. If there is any error in the SQL query or other specified parameters, thenÂ ErrorÂ is shown underÂ Status. 15. ClickÂ EditÂ to edit the crawl process.Â Edit the database crawl processÂ : &lt;Crawl process name&gt;Â window opens. Editing the crawl process 16. Edit the required parameters and clickÂ Save. Â  Viewing the running processes To view the running processes: 1. ClickÂ Crawler &gt; Database &gt; Process listÂ tab. A list of running processes is displayed as shown in the following screen shot:Â Process list 2. Click to select the Show debug information check box to display the debug information.</value></field><field name="contentPhonetic"><value>Creating a database crawling list If you want to crawl a database to import its data for index entries, then you can create crawling lists from the Crawl tab. To create a new database crawl list 1. ClickÂ Crawler &gt; Database &gt; Crawl listÂ tab. Database tab 2. ClickÂ New Crawl.Â Create a new databaseÂ crawl process window opens: Create a new database crawl process 3. Type a name for the new database crawl process inÂ Name. 4. Type the class name of the JDBC driver inÂ Driver class. 5. Type the URL used to connect to the database inÂ JDBC url. 6. Type a user name who is authorized to access the database connection inÂ User. 7. Type a password inÂ Password. 8. Select the language of the indexed documents from theÂ LanguageÂ drop down list. 9. Type the primary key to identify unique document inÂ Primary key. 10. Type the SQL query to retrieve data inÂ SQL. 11. Perform the field mapping to set a relation between SQL columns and the index fields fromÂ Field mapping. To do so, type a column name inÂ SQL columnÂ and map it to anÂ index fieldÂ by selecting a field from the Index field drop down list. CheckÂ Tags, Entities, FileÂ check boxes as desired and type theÂ Field path prefix. Â  The Field path prefix is enabled only if File check box is selected. 12. Check theÂ urlÂ check box and clickÂ Add. The mapped fields are added as shown in the screen shot below 13. Click Create. New database crawl process is created and gets listed under List of existing database crawl - click on an crawl name to edit it.Â New database crawl process created 14. ClickÂ Â button to execute the crawl process. If there is any error in the SQL query or other specified parameters, thenÂ ErrorÂ is shown underÂ Status. 15. ClickÂ EditÂ to edit the crawl process.Â Edit the database crawl processÂ : &lt;Crawl process name&gt;Â window opens. Editing the crawl process 16. Edit the required parameters and clickÂ Save. Â  Viewing the running processes To view the running processes: 1. ClickÂ Crawler &gt; Database &gt; Process listÂ tab. A list of running processes is displayed as shown in the following screen shot:Â Process list 2. Click to select the Show debug information check box to display the debug information.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Robots.txt</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Robots.txt</value></field><field name="autocomplete"><value>Robots.txt</value></field><field name="title"><value>Robots.txt</value></field><field name="titleExact"><value>Robots.txt</value></field><field name="titlePhonetic"><value>Robots.txt</value></field><field name="content"><value>What is Robots.txt? The Robot Exclusion Standard, also known as the Robots Exclusion Protocol or robots.txt protocol, is a convention to prevent cooperating web crawlers and other web robots from accessing all or part of a website which is otherwise publicly viewable. Robots are often used by search engines to categorize and archive web sites, or by webmasters to proofread source code. The standard is different from, but can be used in conjunction with, Sitemaps, a robot inclusion standard for websites. If a site owner wishes to give instructions to web robots they must place a text file called robots.txt in the root of the web site hierarchy (e.g. www.example.com/robots.txt). This text file should contain the instructions in a specific format (see examples below). Robots that choose to follow the instructions try to fetch this file and read the instructions before fetching any other file from the web site. If this file doesn't exist web robots assume that the web owner wishes to provide no specific instructions. Â  User-agent: * Disallow: /searchDisallow: /support/rssSource: http://en.wikipedia.org/wiki/Robots_exclusion_standard Â  You can search for Robots.txt through the Robots.txt tab only for the crawled URLs Searching for a Robots.txt To enable and search for a Robots.txt for a host: By default Robots.txt searching is Enabled. If theÂ EnableÂ check box is checked, the useragent respects the robots.txt file and does not crawl the specified pages. If theÂ EnableÂ check box is not checked, the crawler ignore the robots.txt file and it crawls all the webpages. Enter theÂ HostnameÂ of the website for which you wish to see if the robot.txt is present or not. ClickÂ Search/Refresh. If a Robots.txt is present, the details will be displayed under RobotsTxt content (see the screen shot below). If a Robots.txt is not present, nothing is displayed.</value></field><field name="contentExact"><value>What is Robots.txt? The Robot Exclusion Standard, also known as the Robots Exclusion Protocol or robots.txt protocol, is a convention to prevent cooperating web crawlers and other web robots from accessing all or part of a website which is otherwise publicly viewable. Robots are often used by search engines to categorize and archive web sites, or by webmasters to proofread source code. The standard is different from, but can be used in conjunction with, Sitemaps, a robot inclusion standard for websites. If a site owner wishes to give instructions to web robots they must place a text file called robots.txt in the root of the web site hierarchy (e.g. www.example.com/robots.txt). This text file should contain the instructions in a specific format (see examples below). Robots that choose to follow the instructions try to fetch this file and read the instructions before fetching any other file from the web site. If this file doesn't exist web robots assume that the web owner wishes to provide no specific instructions. Â  User-agent: * Disallow: /searchDisallow: /support/rssSource: http://en.wikipedia.org/wiki/Robots_exclusion_standard Â  You can search for Robots.txt through the Robots.txt tab only for the crawled URLs Searching for a Robots.txt To enable and search for a Robots.txt for a host: By default Robots.txt searching is Enabled. If theÂ EnableÂ check box is checked, the useragent respects the robots.txt file and does not crawl the specified pages. If theÂ EnableÂ check box is not checked, the crawler ignore the robots.txt file and it crawls all the webpages. Enter theÂ HostnameÂ of the website for which you wish to see if the robot.txt is present or not. ClickÂ Search/Refresh. If a Robots.txt is present, the details will be displayed under RobotsTxt content (see the screen shot below). If a Robots.txt is not present, nothing is displayed.</value></field><field name="contentPhonetic"><value>What is Robots.txt? The Robot Exclusion Standard, also known as the Robots Exclusion Protocol or robots.txt protocol, is a convention to prevent cooperating web crawlers and other web robots from accessing all or part of a website which is otherwise publicly viewable. Robots are often used by search engines to categorize and archive web sites, or by webmasters to proofread source code. The standard is different from, but can be used in conjunction with, Sitemaps, a robot inclusion standard for websites. If a site owner wishes to give instructions to web robots they must place a text file called robots.txt in the root of the web site hierarchy (e.g. www.example.com/robots.txt). This text file should contain the instructions in a specific format (see examples below). Robots that choose to follow the instructions try to fetch this file and read the instructions before fetching any other file from the web site. If this file doesn't exist web robots assume that the web owner wishes to provide no specific instructions. Â  User-agent: * Disallow: /searchDisallow: /support/rssSource: http://en.wikipedia.org/wiki/Robots_exclusion_standard Â  You can search for Robots.txt through the Robots.txt tab only for the crawled URLs Searching for a Robots.txt To enable and search for a Robots.txt for a host: By default Robots.txt searching is Enabled. If theÂ EnableÂ check box is checked, the useragent respects the robots.txt file and does not crawl the specified pages. If theÂ EnableÂ check box is not checked, the crawler ignore the robots.txt file and it crawls all the webpages. Enter theÂ HostnameÂ of the website for which you wish to see if the robot.txt is present or not. ClickÂ Search/Refresh. If a Robots.txt is present, the details will be displayed under RobotsTxt content (see the screen shot below). If a Robots.txt is not present, nothing is displayed.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Linking+URL+fields+to+index+fields</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Linking+URL+fields+to+index+fields</value></field><field name="autocomplete"><value>Linking URL fields to index fields</value></field><field name="title"><value>Linking URL fields to index fields</value></field><field name="titleExact"><value>Linking URL fields to index fields</value></field><field name="titlePhonetic"><value>Linking URL fields to index fields</value></field><field name="content"><value>You can link the url fields to index fields from theÂ Field mappingÂ tab Â  To link a url field to index field: Select a URL field from the first drop down list and then select the index field to be linked from theÂ linked inÂ drop down list. ClickÂ add.Â  Â The linked fields gets listed under a table having column namesÂ URLfield,Â Index field, andÂ Action. If you want to delete the linked fields, then clickÂ XÂ button placed against them.</value></field><field name="contentExact"><value>You can link the url fields to index fields from theÂ Field mappingÂ tab Â  To link a url field to index field: Select a URL field from the first drop down list and then select the index field to be linked from theÂ linked inÂ drop down list. ClickÂ add.Â  Â The linked fields gets listed under a table having column namesÂ URLfield,Â Index field, andÂ Action. If you want to delete the linked fields, then clickÂ XÂ button placed against them.</value></field><field name="contentPhonetic"><value>You can link the url fields to index fields from theÂ Field mappingÂ tab Â  To link a url field to index field: Select a URL field from the first drop down list and then select the index field to be linked from theÂ linked inÂ drop down list. ClickÂ add.Â  Â The linked fields gets listed under a table having column namesÂ URLfield,Â Index field, andÂ Action. If you want to delete the linked fields, then clickÂ XÂ button placed against them.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Authentication</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Authentication</value></field><field name="autocomplete"><value>Authentication</value></field><field name="title"><value>Authentication</value></field><field name="titleExact"><value>Authentication</value></field><field name="titlePhonetic"><value>Authentication</value></field><field name="content"><value>Authentication is needed from some servers to allow the process of crawling Â  To create a new credential for authentication:Â  Type the desired URL pattern in Pattern. TypeÂ UsernameÂ andÂ PasswordÂ which are needed to authenticate. ClickÂ Create. The created credential gets listed underÂ List of existing credentials.</value></field><field name="contentExact"><value>Authentication is needed from some servers to allow the process of crawling Â  To create a new credential for authentication:Â  Type the desired URL pattern in Pattern. TypeÂ UsernameÂ andÂ PasswordÂ which are needed to authenticate. ClickÂ Create. The created credential gets listed underÂ List of existing credentials.</value></field><field name="contentPhonetic"><value>Authentication is needed from some servers to allow the process of crawling Â  To create a new credential for authentication:Â  Type the desired URL pattern in Pattern. TypeÂ UsernameÂ andÂ PasswordÂ which are needed to authenticate. ClickÂ Create. The created credential gets listed underÂ List of existing credentials.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Setting+up+the+manual+crawling+process</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Setting+up+the+manual+crawling+process</value></field><field name="autocomplete"><value>Setting up the manual crawling process</value></field><field name="title"><value>Setting up the manual crawling process</value></field><field name="titleExact"><value>Setting up the manual crawling process</value></field><field name="titlePhonetic"><value>Setting up the manual crawling process</value></field><field name="content"><value>You can specify a url to be crawled manually from theÂ Manual crawlÂ tab. Â  To manually specify a URL to be crawled: Type the url to be crawled inÂ URL to crawl ClickÂ Crawl. The results are displayed underÂ Crawl resultÂ and the document is indexed.</value></field><field name="contentExact"><value>You can specify a url to be crawled manually from theÂ Manual crawlÂ tab. Â  To manually specify a URL to be crawled: Type the url to be crawled inÂ URL to crawl ClickÂ Crawl. The results are displayed underÂ Crawl resultÂ and the document is indexed.</value></field><field name="contentPhonetic"><value>You can specify a url to be crawled manually from theÂ Manual crawlÂ tab. Â  To manually specify a URL to be crawled: Type the url to be crawled inÂ URL to crawl ClickÂ Crawl. The results are displayed underÂ Crawl resultÂ and the document is indexed.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/The+crawling+process</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/The+crawling+process</value></field><field name="autocomplete"><value>The crawling process</value></field><field name="title"><value>The crawling process</value></field><field name="titleExact"><value>The crawling process</value></field><field name="titlePhonetic"><value>The crawling process</value></field><field name="content"><value>You can view the status of the web crawling for the specified URLs from theÂ Crawl processÂ tab There are four sections under this tab: 1.Â Crawling parametersÂ - By default, the crawling parameteres are displayed for the websites being crawled. The following are the crawling parameters: User-Agent. Example: OpenSearchServer_Bot Fetch interval between re-fetches. Example: 30 days Number of simultaneous threads. Example: 10 Number of URLs to crawl. Example: 10000 Maximum number of URLs per host. Example: 100 Delay between each successive access, in seconds. Example: 10 2.Â Current StatusÂ - This displays the current status of the web crawler. For example, Extracting url list may be the current status when the crawler is running. To run/stop the web crawler: ClickÂ Not running-click to start. The crawler will start running and the statistics is displayed under the current status section. ClickÂ Running-clickÂ to stop to stop the crawler. 3.Â Statistics for prior sessionsÂ - This section lists the information of prior sessions such as Start time, Fetched (Count and Rate), Old url host (Processed and Total), New url host (Processed and Total), New url (Pending and Committed), Updated (Pending and Committed), Ignored, Deleted (Pending and Committed), URLs (Processed and Total). 4.Â Thread listÂ - This section displays the status of current threads. It displays information such as Current host name, Type, Fetched, Rate, New url, Updated, Ignored, Deleted, URL(s), Total, and Status.</value></field><field name="contentExact"><value>You can view the status of the web crawling for the specified URLs from theÂ Crawl processÂ tab There are four sections under this tab: 1.Â Crawling parametersÂ - By default, the crawling parameteres are displayed for the websites being crawled. The following are the crawling parameters: User-Agent. Example: OpenSearchServer_Bot Fetch interval between re-fetches. Example: 30 days Number of simultaneous threads. Example: 10 Number of URLs to crawl. Example: 10000 Maximum number of URLs per host. Example: 100 Delay between each successive access, in seconds. Example: 10 2.Â Current StatusÂ - This displays the current status of the web crawler. For example, Extracting url list may be the current status when the crawler is running. To run/stop the web crawler: ClickÂ Not running-click to start. The crawler will start running and the statistics is displayed under the current status section. ClickÂ Running-clickÂ to stop to stop the crawler. 3.Â Statistics for prior sessionsÂ - This section lists the information of prior sessions such as Start time, Fetched (Count and Rate), Old url host (Processed and Total), New url host (Processed and Total), New url (Pending and Committed), Updated (Pending and Committed), Ignored, Deleted (Pending and Committed), URLs (Processed and Total). 4.Â Thread listÂ - This section displays the status of current threads. It displays information such as Current host name, Type, Fetched, Rate, New url, Updated, Ignored, Deleted, URL(s), Total, and Status.</value></field><field name="contentPhonetic"><value>You can view the status of the web crawling for the specified URLs from theÂ Crawl processÂ tab There are four sections under this tab: 1.Â Crawling parametersÂ - By default, the crawling parameteres are displayed for the websites being crawled. The following are the crawling parameters: User-Agent. Example: OpenSearchServer_Bot Fetch interval between re-fetches. Example: 30 days Number of simultaneous threads. Example: 10 Number of URLs to crawl. Example: 10000 Maximum number of URLs per host. Example: 100 Delay between each successive access, in seconds. Example: 10 2.Â Current StatusÂ - This displays the current status of the web crawler. For example, Extracting url list may be the current status when the crawler is running. To run/stop the web crawler: ClickÂ Not running-click to start. The crawler will start running and the statistics is displayed under the current status section. ClickÂ Running-clickÂ to stop to stop the crawler. 3.Â Statistics for prior sessionsÂ - This section lists the information of prior sessions such as Start time, Fetched (Count and Rate), Old url host (Processed and Total), New url host (Processed and Total), New url (Pending and Committed), Updated (Pending and Committed), Ignored, Deleted (Pending and Committed), URLs (Processed and Total). 4.Â Thread listÂ - This section displays the status of current threads. It displays information such as Current host name, Type, Fetched, Rate, New url, Updated, Ignored, Deleted, URL(s), Total, and Status.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Understanding+the+URL+browser</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Understanding+the+URL+browser</value></field><field name="autocomplete"><value>Understanding the URL browser</value></field><field name="title"><value>Understanding the URL browser</value></field><field name="titleExact"><value>Understanding the URL browser</value></field><field name="titlePhonetic"><value>Understanding the URL browser</value></field><field name="content"><value>Once the crawling process has started, you can search for the available URLs in the index using the URL browser To search for a URL (or a group of URLs) ClickÂ CrawlÂ &gt;Â WebÂ &gt;URL browserÂ tab. Type the URL in URL and clickÂ Search. The available URL gets listed under a table having columns such asÂ URL, Ev. Date, Mod. Date, Type, Charset, Encoding, Content length, Lang, Lang method, Robots, Fetch, Code, Parsing, Index, and Host. To export the listed URL(s) details in text format ClickÂ Export URLs. A dialog box opens prompting you to save the text file to a desired location on the local system. Browse to the desired location and clickÂ OK.</value></field><field name="contentExact"><value>Once the crawling process has started, you can search for the available URLs in the index using the URL browser To search for a URL (or a group of URLs) ClickÂ CrawlÂ &gt;Â WebÂ &gt;URL browserÂ tab. Type the URL in URL and clickÂ Search. The available URL gets listed under a table having columns such asÂ URL, Ev. Date, Mod. Date, Type, Charset, Encoding, Content length, Lang, Lang method, Robots, Fetch, Code, Parsing, Index, and Host. To export the listed URL(s) details in text format ClickÂ Export URLs. A dialog box opens prompting you to save the text file to a desired location on the local system. Browse to the desired location and clickÂ OK.</value></field><field name="contentPhonetic"><value>Once the crawling process has started, you can search for the available URLs in the index using the URL browser To search for a URL (or a group of URLs) ClickÂ CrawlÂ &gt;Â WebÂ &gt;URL browserÂ tab. Type the URL in URL and clickÂ Search. The available URL gets listed under a table having columns such asÂ URL, Ev. Date, Mod. Date, Type, Charset, Encoding, Content length, Lang, Lang method, Robots, Fetch, Code, Parsing, Index, and Host. To export the listed URL(s) details in text format ClickÂ Export URLs. A dialog box opens prompting you to save the text file to a desired location on the local system. Browse to the desired location and clickÂ OK.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Adding+a+URL+filter</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Adding+a+URL+filter</value></field><field name="autocomplete"><value>Adding a URL filter</value></field><field name="title"><value>Adding a URL filter</value></field><field name="titleExact"><value>Adding a URL filter</value></field><field name="titlePhonetic"><value>Adding a URL filter</value></field><field name="content"><value>Â URL filter is used for specifying a criteria to avoid specific URLs. These URLs are not crawled by the OpenSearchServer. For example, consider the following URL: http://www.example.com/index.php?username=xyz&amp;PHPSESSID=122183471928347239IAU You can specify a criteria so that the URL filter may not crawl the URLs having the term 'PHPSESSID'. Any character after '?' is treated as a query string in a URL. So, the filter works only on the string after '?' in a URL syntax. For example, the filter will search for 'PHPSESSID' in 'username=xyz&amp;PHPSESSID=122183471928347239IAU' and in found, it will not include the URL in the search. Â To add a filter: 1. ClickÂ CrawlÂ &gt;Â WebÂ &gt;UrlÂ filter tab. 2. Type a name for filter inÂ Filter name. 3. Type the filter expression inÂ Regexp pattern. For example, PHPSESSID=[0-9a-zA-Z]{32} 4. Click Save. To delete an added filter Click 'X' button. A dialog box opens prompting you to confirm your choice.</value></field><field name="contentExact"><value>Â URL filter is used for specifying a criteria to avoid specific URLs. These URLs are not crawled by the OpenSearchServer. For example, consider the following URL: http://www.example.com/index.php?username=xyz&amp;PHPSESSID=122183471928347239IAU You can specify a criteria so that the URL filter may not crawl the URLs having the term 'PHPSESSID'. Any character after '?' is treated as a query string in a URL. So, the filter works only on the string after '?' in a URL syntax. For example, the filter will search for 'PHPSESSID' in 'username=xyz&amp;PHPSESSID=122183471928347239IAU' and in found, it will not include the URL in the search. Â To add a filter: 1. ClickÂ CrawlÂ &gt;Â WebÂ &gt;UrlÂ filter tab. 2. Type a name for filter inÂ Filter name. 3. Type the filter expression inÂ Regexp pattern. For example, PHPSESSID=[0-9a-zA-Z]{32} 4. Click Save. To delete an added filter Click 'X' button. A dialog box opens prompting you to confirm your choice.</value></field><field name="contentPhonetic"><value>Â URL filter is used for specifying a criteria to avoid specific URLs. These URLs are not crawled by the OpenSearchServer. For example, consider the following URL: http://www.example.com/index.php?username=xyz&amp;PHPSESSID=122183471928347239IAU You can specify a criteria so that the URL filter may not crawl the URLs having the term 'PHPSESSID'. Any character after '?' is treated as a query string in a URL. So, the filter works only on the string after '?' in a URL syntax. For example, the filter will search for 'PHPSESSID' in 'username=xyz&amp;PHPSESSID=122183471928347239IAU' and in found, it will not include the URL in the search. Â To add a filter: 1. ClickÂ CrawlÂ &gt;Â WebÂ &gt;UrlÂ filter tab. 2. Type a name for filter inÂ Filter name. 3. Type the filter expression inÂ Regexp pattern. For example, PHPSESSID=[0-9a-zA-Z]{32} 4. Click Save. To delete an added filter Click 'X' button. A dialog box opens prompting you to confirm your choice.</value></field><field name="timestamp"><value>20120904180445</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+an+exclusion+list</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+an+exclusion+list</value></field><field name="autocomplete"><value>Creating an exclusion list</value></field><field name="title"><value>Creating an exclusion list</value></field><field name="titleExact"><value>Creating an exclusion list</value></field><field name="titlePhonetic"><value>Creating an exclusion list</value></field><field name="content"><value>The crawler does not crawl the urls that are added to an exclusion list. To create an exclusion list: 1. ClickÂ CrawlÂ &gt;Â WebÂ &gt;ExclusionÂ list tab 2. Type the url to be excluded. TypeÂ http://www.open-search-server.comÂ if you only want to exclude the home page TypeÂ http://www.open-search-server.com/\*Â (http://www.open-search-server.com/*) if you want to exclude all the content TypeÂ http://www.open-search-server.com/*wiki\*Â (http://www.open-search-server.com/*wiki*) if you only wish to exlude URLs containing the word "wiki" within the open-search-server.com domain. 3. ClickÂ Add.</value></field><field name="contentExact"><value>The crawler does not crawl the urls that are added to an exclusion list. To create an exclusion list: 1. ClickÂ CrawlÂ &gt;Â WebÂ &gt;ExclusionÂ list tab 2. Type the url to be excluded. TypeÂ http://www.open-search-server.comÂ if you only want to exclude the home page TypeÂ http://www.open-search-server.com/\*Â (http://www.open-search-server.com/*) if you want to exclude all the content TypeÂ http://www.open-search-server.com/*wiki\*Â (http://www.open-search-server.com/*wiki*) if you only wish to exlude URLs containing the word "wiki" within the open-search-server.com domain. 3. ClickÂ Add.</value></field><field name="contentPhonetic"><value>The crawler does not crawl the urls that are added to an exclusion list. To create an exclusion list: 1. ClickÂ CrawlÂ &gt;Â WebÂ &gt;ExclusionÂ list tab 2. Type the url to be excluded. TypeÂ http://www.open-search-server.comÂ if you only want to exclude the home page TypeÂ http://www.open-search-server.com/\*Â (http://www.open-search-server.com/*) if you want to exclude all the content TypeÂ http://www.open-search-server.com/*wiki\*Â (http://www.open-search-server.com/*wiki*) if you only wish to exlude URLs containing the word "wiki" within the open-search-server.com domain. 3. ClickÂ Add.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+pattern+list</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+pattern+list</value></field><field name="autocomplete"><value>Creating a pattern list</value></field><field name="title"><value>Creating a pattern list</value></field><field name="titleExact"><value>Creating a pattern list</value></field><field name="titlePhonetic"><value>Creating a pattern list</value></field><field name="content"><value>1. Click Crawl &gt; Web &gt; Pattern list tab. 2. Type the URL to be crawled or a pattern. TypeÂ http://www.open-search-server.comÂ if you only want to crawl the home page TypeÂ http://www.open-search-server.com/\*Â (http://www.open-search-server.com/*) if you want to crawl all the content TypeÂ http://www.open-search-server.com/*wiki\*Â (http://www.open-search-server.com/*wiki*) if you only wish to crawl URLs containing the word "wiki" within the open-search-server.com domain. 3. ClickÂ Add. The pattern is added at the bottom of the page. 4. To delete a pattern, select the desired URL by clicking on its check box and clickÂ Delete.</value></field><field name="contentExact"><value>1. Click Crawl &gt; Web &gt; Pattern list tab. 2. Type the URL to be crawled or a pattern. TypeÂ http://www.open-search-server.comÂ if you only want to crawl the home page TypeÂ http://www.open-search-server.com/\*Â (http://www.open-search-server.com/*) if you want to crawl all the content TypeÂ http://www.open-search-server.com/*wiki\*Â (http://www.open-search-server.com/*wiki*) if you only wish to crawl URLs containing the word "wiki" within the open-search-server.com domain. 3. ClickÂ Add. The pattern is added at the bottom of the page. 4. To delete a pattern, select the desired URL by clicking on its check box and clickÂ Delete.</value></field><field name="contentPhonetic"><value>1. Click Crawl &gt; Web &gt; Pattern list tab. 2. Type the URL to be crawled or a pattern. TypeÂ http://www.open-search-server.comÂ if you only want to crawl the home page TypeÂ http://www.open-search-server.com/\*Â (http://www.open-search-server.com/*) if you want to crawl all the content TypeÂ http://www.open-search-server.com/*wiki\*Â (http://www.open-search-server.com/*wiki*) if you only wish to crawl URLs containing the word "wiki" within the open-search-server.com domain. 3. ClickÂ Add. The pattern is added at the bottom of the page. 4. To delete a pattern, select the desired URL by clicking on its check box and clickÂ Delete.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Adding+Data+Using+the+Web+Crawler</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Adding+Data+Using+the+Web+Crawler</value></field><field name="autocomplete"><value>Adding Data Using the Web Crawler</value></field><field name="title"><value>Adding Data Using the Web Crawler</value></field><field name="titleExact"><value>Adding Data Using the Web Crawler</value></field><field name="titlePhonetic"><value>Adding Data Using the Web Crawler</value></field><field name="content"><value>There are various processes related to a web crawler that can help you to add data to an Index. In this section, you will learn about the Crawl tab and how you can create a pattern list of URLs, create exclusion lists, add filters, manually add URLs to be crawled, creating a database of crawl lists, adding files to the crawler, and other related processes. You can add URLs of the websites to be crawled by the OpenSearchServer engine using the Web tab under the Crawl tab. By default, the Web tab opens displaying the Pattern list tab. The following tabs are available under Web tab:</value></field><field name="contentExact"><value>There are various processes related to a web crawler that can help you to add data to an Index. In this section, you will learn about the Crawl tab and how you can create a pattern list of URLs, create exclusion lists, add filters, manually add URLs to be crawled, creating a database of crawl lists, adding files to the crawler, and other related processes. You can add URLs of the websites to be crawled by the OpenSearchServer engine using the Web tab under the Crawl tab. By default, the Web tab opens displaying the Pattern list tab. The following tabs are available under Web tab:</value></field><field name="contentPhonetic"><value>There are various processes related to a web crawler that can help you to add data to an Index. In this section, you will learn about the Crawl tab and how you can create a pattern list of URLs, create exclusion lists, add filters, manually add URLs to be crawled, creating a database of crawl lists, adding files to the crawler, and other related processes. You can add URLs of the websites to be crawled by the OpenSearchServer engine using the Web tab under the Crawl tab. By default, the Web tab opens displaying the Pattern list tab. The following tabs are available under Web tab:</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Web%2C+database+and+file+crawling</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Web%2C+database+and+file+crawling</value></field><field name="autocomplete"><value>Web, database and file crawling</value></field><field name="title"><value>Web, database and file crawling</value></field><field name="titleExact"><value>Web, database and file crawling</value></field><field name="titlePhonetic"><value>Web, database and file crawling</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Deleting+documents</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Deleting+documents</value></field><field name="autocomplete"><value>Deleting documents</value></field><field name="title"><value>Deleting documents</value></field><field name="titleExact"><value>Deleting documents</value></field><field name="titlePhonetic"><value>Deleting documents</value></field><field name="content"><value>You can delete specific documents by specifying a query, and the documents returned by the query are removed. This can be done from the Delete tab. To delete document(s) by a query: Type the query string inÂ Enter the query. Select theÂ Default operatorÂ asÂ ORÂ orÂ AND. Select the language of the document(s) to be deleted from theÂ LanguageÂ drop-down list. ClickÂ Check. A dialog box opens displaying the number of documents found matching the query. Click Delete. A dialog box opens confirming the deletion of the queried document(s). You can use *:* as the query string if you want to delete all the documents from the indexÂ  ClickÂ XML/HTTP API callÂ to call the API with the same parameters</value></field><field name="contentExact"><value>You can delete specific documents by specifying a query, and the documents returned by the query are removed. This can be done from the Delete tab. To delete document(s) by a query: Type the query string inÂ Enter the query. Select theÂ Default operatorÂ asÂ ORÂ orÂ AND. Select the language of the document(s) to be deleted from theÂ LanguageÂ drop-down list. ClickÂ Check. A dialog box opens displaying the number of documents found matching the query. Click Delete. A dialog box opens confirming the deletion of the queried document(s). You can use *:* as the query string if you want to delete all the documents from the indexÂ  ClickÂ XML/HTTP API callÂ to call the API with the same parameters</value></field><field name="contentPhonetic"><value>You can delete specific documents by specifying a query, and the documents returned by the query are removed. This can be done from the Delete tab. To delete document(s) by a query: Type the query string inÂ Enter the query. Select theÂ Default operatorÂ asÂ ORÂ orÂ AND. Select the language of the document(s) to be deleted from theÂ LanguageÂ drop-down list. ClickÂ Check. A dialog box opens displaying the number of documents found matching the query. Click Delete. A dialog box opens confirming the deletion of the queried document(s). You can use *:* as the query string if you want to delete all the documents from the indexÂ  ClickÂ XML/HTTP API callÂ to call the API with the same parameters</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Uploading+a+document</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Uploading+a+document</value></field><field name="autocomplete"><value>Uploading a document</value></field><field name="title"><value>Uploading a document</value></field><field name="titleExact"><value>Uploading a document</value></field><field name="titlePhonetic"><value>Uploading a document</value></field><field name="content"><value>To upload a document: Click onÂ Upload documentÂ tab to display its contents. ClickÂ Upload a document.Â File UploadÂ dialog box opens. ClickÂ BrowseÂ to select the file from the desired location. ClickÂ Upload: The document is immediately indexed. Supported document formats include HTML/XHTML, Adobeâ¢ PDF, Microsoftâ¢ Wordâ¢, PowerPointâ¢, Excelâ¢, OpenOffice, RTF, Audio (WAV, MP3, OGG)</value></field><field name="contentExact"><value>To upload a document: Click onÂ Upload documentÂ tab to display its contents. ClickÂ Upload a document.Â File UploadÂ dialog box opens. ClickÂ BrowseÂ to select the file from the desired location. ClickÂ Upload: The document is immediately indexed. Supported document formats include HTML/XHTML, Adobeâ¢ PDF, Microsoftâ¢ Wordâ¢, PowerPointâ¢, Excelâ¢, OpenOffice, RTF, Audio (WAV, MP3, OGG)</value></field><field name="contentPhonetic"><value>To upload a document: Click onÂ Upload documentÂ tab to display its contents. ClickÂ Upload a document.Â File UploadÂ dialog box opens. ClickÂ BrowseÂ to select the file from the desired location. ClickÂ Upload: The document is immediately indexed. Supported document formats include HTML/XHTML, Adobeâ¢ PDF, Microsoftâ¢ Wordâ¢, PowerPointâ¢, Excelâ¢, OpenOffice, RTF, Audio (WAV, MP3, OGG)</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Uploading+an+XML+file</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Uploading+an+XML+file</value></field><field name="autocomplete"><value>Uploading an XML file</value></field><field name="title"><value>Uploading an XML file</value></field><field name="titleExact"><value>Uploading an XML file</value></field><field name="titlePhonetic"><value>Uploading an XML file</value></field><field name="content"><value>To upload an XML file: Click onÂ upload XML fileÂ tab to display its contents. Click theÂ uploadÂ button.Â File uploadÂ dialog box opens prompting you to select the XML file from the local computer. Select the XML file to be uploaded and clickÂ Open. The following is an example of the XML format: Â  &lt;document lang="en"&gt; &lt;field name="id"&gt;&lt;value&gt;1&lt;/value&gt;&lt;/field&gt; &lt;field name="title"&gt;&lt;value&gt;Open Search Server&lt;/value&gt;&lt;/field&gt; &lt;field name="url"&gt;&lt;value&gt;http://www.open-search-server.com&lt;/value&gt;&lt;/field&gt; &lt;field name="user"&gt; &lt;value&gt;emmanuel_keller&lt;/value&gt; &lt;value&gt;philcube&lt;/value&gt; &lt;/field&gt; &lt;/document&gt;</value></field><field name="contentExact"><value>To upload an XML file: Click onÂ upload XML fileÂ tab to display its contents. Click theÂ uploadÂ button.Â File uploadÂ dialog box opens prompting you to select the XML file from the local computer. Select the XML file to be uploaded and clickÂ Open. The following is an example of the XML format: Â  &lt;document lang="en"&gt; &lt;field name="id"&gt;&lt;value&gt;1&lt;/value&gt;&lt;/field&gt; &lt;field name="title"&gt;&lt;value&gt;Open Search Server&lt;/value&gt;&lt;/field&gt; &lt;field name="url"&gt;&lt;value&gt;http://www.open-search-server.com&lt;/value&gt;&lt;/field&gt; &lt;field name="user"&gt; &lt;value&gt;emmanuel_keller&lt;/value&gt; &lt;value&gt;philcube&lt;/value&gt; &lt;/field&gt; &lt;/document&gt;</value></field><field name="contentPhonetic"><value>To upload an XML file: Click onÂ upload XML fileÂ tab to display its contents. Click theÂ uploadÂ button.Â File uploadÂ dialog box opens prompting you to select the XML file from the local computer. Select the XML file to be uploaded and clickÂ Open. The following is an example of the XML format: Â  &lt;document lang="en"&gt; &lt;field name="id"&gt;&lt;value&gt;1&lt;/value&gt;&lt;/field&gt; &lt;field name="title"&gt;&lt;value&gt;Open Search Server&lt;/value&gt;&lt;/field&gt; &lt;field name="url"&gt;&lt;value&gt;http://www.open-search-server.com&lt;/value&gt;&lt;/field&gt; &lt;field name="user"&gt; &lt;value&gt;emmanuel_keller&lt;/value&gt; &lt;value&gt;philcube&lt;/value&gt; &lt;/field&gt; &lt;/document&gt;</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Adding+data+using+form</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Adding+data+using+form</value></field><field name="autocomplete"><value>Adding data using form</value></field><field name="title"><value>Adding data using form</value></field><field name="titleExact"><value>Adding data using form</value></field><field name="titlePhonetic"><value>Adding data using form</value></field><field name="content"><value>Please set the default field before updating the form else you will get a Null Pointer Exception. To add data using form: Click onÂ Using formÂ tab to display its contents. By default,Â Using formÂ tab is displayed. Select a language fromÂ Select the language of the documentÂ drop down list. Select a field fromÂ Add field(s) to the documentÂ drop down list and clickÂ add. The added field expands enabling to enterÂ BoostÂ andÂ Value. Boost and values are specified to improve score of the document. Click Insert/Update.</value></field><field name="contentExact"><value>Please set the default field before updating the form else you will get a Null Pointer Exception. To add data using form: Click onÂ Using formÂ tab to display its contents. By default,Â Using formÂ tab is displayed. Select a language fromÂ Select the language of the documentÂ drop down list. Select a field fromÂ Add field(s) to the documentÂ drop down list and clickÂ add. The added field expands enabling to enterÂ BoostÂ andÂ Value. Boost and values are specified to improve score of the document. Click Insert/Update.</value></field><field name="contentPhonetic"><value>Please set the default field before updating the form else you will get a Null Pointer Exception. To add data using form: Click onÂ Using formÂ tab to display its contents. By default,Â Using formÂ tab is displayed. Select a language fromÂ Select the language of the documentÂ drop down list. Select a field fromÂ Add field(s) to the documentÂ drop down list and clickÂ add. The added field expands enabling to enterÂ BoostÂ andÂ Value. Boost and values are specified to improve score of the document. Click Insert/Update.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Updating+an+index</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Updating+an+index</value></field><field name="autocomplete"><value>Updating an index</value></field><field name="title"><value>Updating an index</value></field><field name="titleExact"><value>Updating an index</value></field><field name="titlePhonetic"><value>Updating an index</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Spell+Check</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Spell+Check</value></field><field name="autocomplete"><value>Spell Check</value></field><field name="title"><value>Spell Check</value></field><field name="titleExact"><value>Spell Check</value></field><field name="titlePhonetic"><value>Spell Check</value></field><field name="content"><value>Â You can set spell checking parameters for each field from this tab. Spell check returns the words that resemble the requested words, having possible values of the field within the current index. Â  If you are searching for words that resemble the word "metal" in the content field of an index, then, Minimal allowed score of 0.8 - only "meta", a word very close to metal, is considered to be a viable resembling spelling. Minimal allowed score of 0.5 - the acceptable drift is greater, and results such as "mettle", "gunmetal", and "mesa" are considered to be close enough to "metal" for consideration Minimal allowed score of 0.2 - words such as "retain" or "elementals" become acceptable. Setting spell check parameters Â To set spell check parameters for a field: Select a field from theÂ FieldÂ drop down list and clickÂ add field. The field gets listed under a table having the columns, Field,Â Minimal score, andÂ Number of suggestions. Type the minimal score in Minimal score. By default, its value is set to '0.5'. The minimal score defines how broad or narrow the suggestions can be. This score is expressed on a scale of 0 to 1, where, 1 does not allow from any deviation from the requested word 0 allows for the greatest distance between the requested word and the words that resemble it. Type the number of suggestions inÂ Number of suggestions. The number of suggestions is the maximum number of words to be suggested by the OpenSearchServer engine for each requested word. By default, its value is set to '5'. ClickÂ Search. Â The search results are displayed underÂ SummaryÂ andÂ Spell checkÂ sections (See the screen shot below). Â  The algorithm used by the spellchecking feature is a Levenshtein edit distance computation - you can learn more about this atÂ http://en.wikipedia.org/wiki/Levenshtein_distance. Â  Â </value></field><field name="contentExact"><value>Â You can set spell checking parameters for each field from this tab. Spell check returns the words that resemble the requested words, having possible values of the field within the current index. Â  If you are searching for words that resemble the word "metal" in the content field of an index, then, Minimal allowed score of 0.8 - only "meta", a word very close to metal, is considered to be a viable resembling spelling. Minimal allowed score of 0.5 - the acceptable drift is greater, and results such as "mettle", "gunmetal", and "mesa" are considered to be close enough to "metal" for consideration Minimal allowed score of 0.2 - words such as "retain" or "elementals" become acceptable. Setting spell check parameters Â To set spell check parameters for a field: Select a field from theÂ FieldÂ drop down list and clickÂ add field. The field gets listed under a table having the columns, Field,Â Minimal score, andÂ Number of suggestions. Type the minimal score in Minimal score. By default, its value is set to '0.5'. The minimal score defines how broad or narrow the suggestions can be. This score is expressed on a scale of 0 to 1, where, 1 does not allow from any deviation from the requested word 0 allows for the greatest distance between the requested word and the words that resemble it. Type the number of suggestions inÂ Number of suggestions. The number of suggestions is the maximum number of words to be suggested by the OpenSearchServer engine for each requested word. By default, its value is set to '5'. ClickÂ Search. Â The search results are displayed underÂ SummaryÂ andÂ Spell checkÂ sections (See the screen shot below). Â  The algorithm used by the spellchecking feature is a Levenshtein edit distance computation - you can learn more about this atÂ http://en.wikipedia.org/wiki/Levenshtein_distance. Â  Â </value></field><field name="contentPhonetic"><value>Â You can set spell checking parameters for each field from this tab. Spell check returns the words that resemble the requested words, having possible values of the field within the current index. Â  If you are searching for words that resemble the word "metal" in the content field of an index, then, Minimal allowed score of 0.8 - only "meta", a word very close to metal, is considered to be a viable resembling spelling. Minimal allowed score of 0.5 - the acceptable drift is greater, and results such as "mettle", "gunmetal", and "mesa" are considered to be close enough to "metal" for consideration Minimal allowed score of 0.2 - words such as "retain" or "elementals" become acceptable. Setting spell check parameters Â To set spell check parameters for a field: Select a field from theÂ FieldÂ drop down list and clickÂ add field. The field gets listed under a table having the columns, Field,Â Minimal score, andÂ Number of suggestions. Type the minimal score in Minimal score. By default, its value is set to '0.5'. The minimal score defines how broad or narrow the suggestions can be. This score is expressed on a scale of 0 to 1, where, 1 does not allow from any deviation from the requested word 0 allows for the greatest distance between the requested word and the words that resemble it. Type the number of suggestions inÂ Number of suggestions. The number of suggestions is the maximum number of words to be suggested by the OpenSearchServer engine for each requested word. By default, its value is set to '5'. ClickÂ Search. Â The search results are displayed underÂ SummaryÂ andÂ Spell checkÂ sections (See the screen shot below). Â  The algorithm used by the spellchecking feature is a Levenshtein edit distance computation - you can learn more about this atÂ http://en.wikipedia.org/wiki/Levenshtein_distance. Â  Â </value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Score+function</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Score+function</value></field><field name="autocomplete"><value>Score function</value></field><field name="title"><value>Score function</value></field><field name="titleExact"><value>Score function</value></field><field name="titlePhonetic"><value>Score function</value></field><field name="content"><value>The Score function searches a text using criteria that you specify inÂ Score functionÂ and returns a relevance score that measures how well a document satisfies the query as compared with the other documents. the following are the supported functions: Â  Function Description ord The native index order is used to assign an ordinal value for each field value. Example: If there were only three field values: "apple","banana","pear" then ord("apple")=1, ord("banana")=2, ord("pear")=3. rord The native index order is used to assign an ordinal value for each field value. Field values (terms) are lexicographically ordered by unicode value, and numbered starting at 1. Example of reverse ordinal (rord): If there were only three field values: "apple","banana","pear" then rord("apple")=3, rord("banana")=2, ord("pear")=1. score the native score. byte The converted byte value of a field. float The converted float value of a field. int The converted int value of a field. To specify a score function Â  Type the score function in the edit box. For example, 10000 / ( 1 * rord(content) + 10000 ). ClickÂ Search. The search result is displayed as shown below:</value></field><field name="contentExact"><value>The Score function searches a text using criteria that you specify inÂ Score functionÂ and returns a relevance score that measures how well a document satisfies the query as compared with the other documents. the following are the supported functions: Â  Function Description ord The native index order is used to assign an ordinal value for each field value. Example: If there were only three field values: "apple","banana","pear" then ord("apple")=1, ord("banana")=2, ord("pear")=3. rord The native index order is used to assign an ordinal value for each field value. Field values (terms) are lexicographically ordered by unicode value, and numbered starting at 1. Example of reverse ordinal (rord): If there were only three field values: "apple","banana","pear" then rord("apple")=3, rord("banana")=2, ord("pear")=1. score the native score. byte The converted byte value of a field. float The converted float value of a field. int The converted int value of a field. To specify a score function Â  Type the score function in the edit box. For example, 10000 / ( 1 * rord(content) + 10000 ). ClickÂ Search. The search result is displayed as shown below:</value></field><field name="contentPhonetic"><value>The Score function searches a text using criteria that you specify inÂ Score functionÂ and returns a relevance score that measures how well a document satisfies the query as compared with the other documents. the following are the supported functions: Â  Function Description ord The native index order is used to assign an ordinal value for each field value. Example: If there were only three field values: "apple","banana","pear" then ord("apple")=1, ord("banana")=2, ord("pear")=3. rord The native index order is used to assign an ordinal value for each field value. Field values (terms) are lexicographically ordered by unicode value, and numbered starting at 1. Example of reverse ordinal (rord): If there were only three field values: "apple","banana","pear" then rord("apple")=3, rord("banana")=2, ord("pear")=1. score the native score. byte The converted byte value of a field. float The converted float value of a field. int The converted int value of a field. To specify a score function Â  Type the score function in the edit box. For example, 10000 / ( 1 * rord(content) + 10000 ). ClickÂ Search. The search result is displayed as shown below:</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/More+like+this</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/More+like+this</value></field><field name="autocomplete"><value>More like this</value></field><field name="title"><value>More like this</value></field><field name="titleExact"><value>More like this</value></field><field name="titlePhonetic"><value>More like this</value></field><field name="content"><value>This tab is provided to specify more query parameters to search more documents for a query, which were not fetched in an earlier search result. To specify more query parameters: Click to checkÂ ActiveÂ box to search in active search results. Type the required query string inÂ Document query. Select the fields for which the query is to specified fromÂ FieldÂ drop down list. TypeÂ Minimum word length. By default, its value is set to '0'. TypeÂ Maximum word length. By default, its value is set to '0'. TypeÂ Minimum document frequency.Â Minimum document frequencyÂ is the frequency at which words will be ignored which do not occur in at least this many docs. By default, its value is set to '0'. Type Minimum term frequency. Minimum term frequency is the frequency below which terms will be ignored in the source doc. By default, its value is set to '0'. Select stop words fromÂ Stop wordsÂ drop down list. ClickÂ Search. Â </value></field><field name="contentExact"><value>This tab is provided to specify more query parameters to search more documents for a query, which were not fetched in an earlier search result. To specify more query parameters: Click to checkÂ ActiveÂ box to search in active search results. Type the required query string inÂ Document query. Select the fields for which the query is to specified fromÂ FieldÂ drop down list. TypeÂ Minimum word length. By default, its value is set to '0'. TypeÂ Maximum word length. By default, its value is set to '0'. TypeÂ Minimum document frequency.Â Minimum document frequencyÂ is the frequency at which words will be ignored which do not occur in at least this many docs. By default, its value is set to '0'. Type Minimum term frequency. Minimum term frequency is the frequency below which terms will be ignored in the source doc. By default, its value is set to '0'. Select stop words fromÂ Stop wordsÂ drop down list. ClickÂ Search. Â </value></field><field name="contentPhonetic"><value>This tab is provided to specify more query parameters to search more documents for a query, which were not fetched in an earlier search result. To specify more query parameters: Click to checkÂ ActiveÂ box to search in active search results. Type the required query string inÂ Document query. Select the fields for which the query is to specified fromÂ FieldÂ drop down list. TypeÂ Minimum word length. By default, its value is set to '0'. TypeÂ Maximum word length. By default, its value is set to '0'. TypeÂ Minimum document frequency.Â Minimum document frequencyÂ is the frequency at which words will be ignored which do not occur in at least this many docs. By default, its value is set to '0'. Type Minimum term frequency. Minimum term frequency is the frequency below which terms will be ignored in the source doc. By default, its value is set to '0'. Select stop words fromÂ Stop wordsÂ drop down list. ClickÂ Search. Â </value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Collapsing</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Collapsing</value></field><field name="autocomplete"><value>Collapsing</value></field><field name="title"><value>Collapsing</value></field><field name="titleExact"><value>Collapsing</value></field><field name="titlePhonetic"><value>Collapsing</value></field><field name="content"><value>From this tab, you can set the collapsing rules for a field. Collapsing groups identical results together. To set collapsing for a field: Select the desired more from theÂ ModeÂ drop down list. The following options are available: Off - Collapsing is set to 'Off'. Full - The collapsing algorithm is only applied to the results being currently displayed. This consumes fewer resources. Optimized - The collapsing algorithm is applied to the whole list of results. This consumes more resource, but will provide a shorter list of results since everything will be pre-collapsed. Cluster - Select this option to organize search results into groups with different views on the top results. Clustered documents within one group, called a cluster node, share the same common topics or property values. Select the field for which collapsing is to be set fromÂ FieldÂ drop down list. Specify maximum number of consecutive documents to be collapsed underÂ Max consecutive documents. By default, its value is set to '0'. ClickÂ Search. Simple example of collapsing; a given field returns the following values: A A A A A B A B B B B C If this field gets collapsed, with a max consecutive documents value set a 2, the results are: A A B A B B C</value></field><field name="contentExact"><value>From this tab, you can set the collapsing rules for a field. Collapsing groups identical results together. To set collapsing for a field: Select the desired more from theÂ ModeÂ drop down list. The following options are available: Off - Collapsing is set to 'Off'. Full - The collapsing algorithm is only applied to the results being currently displayed. This consumes fewer resources. Optimized - The collapsing algorithm is applied to the whole list of results. This consumes more resource, but will provide a shorter list of results since everything will be pre-collapsed. Cluster - Select this option to organize search results into groups with different views on the top results. Clustered documents within one group, called a cluster node, share the same common topics or property values. Select the field for which collapsing is to be set fromÂ FieldÂ drop down list. Specify maximum number of consecutive documents to be collapsed underÂ Max consecutive documents. By default, its value is set to '0'. ClickÂ Search. Simple example of collapsing; a given field returns the following values: A A A A A B A B B B B C If this field gets collapsed, with a max consecutive documents value set a 2, the results are: A A B A B B C</value></field><field name="contentPhonetic"><value>From this tab, you can set the collapsing rules for a field. Collapsing groups identical results together. To set collapsing for a field: Select the desired more from theÂ ModeÂ drop down list. The following options are available: Off - Collapsing is set to 'Off'. Full - The collapsing algorithm is only applied to the results being currently displayed. This consumes fewer resources. Optimized - The collapsing algorithm is applied to the whole list of results. This consumes more resource, but will provide a shorter list of results since everything will be pre-collapsed. Cluster - Select this option to organize search results into groups with different views on the top results. Clustered documents within one group, called a cluster node, share the same common topics or property values. Select the field for which collapsing is to be set fromÂ FieldÂ drop down list. Specify maximum number of consecutive documents to be collapsed underÂ Max consecutive documents. By default, its value is set to '0'. ClickÂ Search. Simple example of collapsing; a given field returns the following values: A A A A A B A B B B B C If this field gets collapsed, with a max consecutive documents value set a 2, the results are: A A B A B B C</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Query+filters</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Query+filters</value></field><field name="autocomplete"><value>Query filters</value></field><field name="title"><value>Query filters</value></field><field name="titleExact"><value>Query filters</value></field><field name="titlePhonetic"><value>Query filters</value></field><field name="content"><value>To add a filter: Â  ClickÂ add filter. AÂ Query stringÂ edit box opens. Type the desired query string to filter the result from the search result. For example, type lang:dan, the search results are displayed in Danish language. If you selectÂ Negative, then it displays the reverse of the filter. For example, if you type lang:dan and selectÂ Negative, then the search result omits all the results having Danish language and displays everything excluding Danish results. ClickÂ Search.</value></field><field name="contentExact"><value>To add a filter: Â  ClickÂ add filter. AÂ Query stringÂ edit box opens. Type the desired query string to filter the result from the search result. For example, type lang:dan, the search results are displayed in Danish language. If you selectÂ Negative, then it displays the reverse of the filter. For example, if you type lang:dan and selectÂ Negative, then the search result omits all the results having Danish language and displays everything excluding Danish results. ClickÂ Search.</value></field><field name="contentPhonetic"><value>To add a filter: Â  ClickÂ add filter. AÂ Query stringÂ edit box opens. Type the desired query string to filter the result from the search result. For example, type lang:dan, the search results are displayed in Danish language. If you selectÂ Negative, then it displays the reverse of the filter. For example, if you type lang:dan and selectÂ Negative, then the search result omits all the results having Danish language and displays everything excluding Danish results. ClickÂ Search.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Sorted+fields</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Sorted+fields</value></field><field name="autocomplete"><value>Sorted fields</value></field><field name="title"><value>Sorted fields</value></field><field name="titleExact"><value>Sorted fields</value></field><field name="titlePhonetic"><value>Sorted fields</value></field><field name="content"><value>You can set the sorting criteria by adding the the field to be sorted and specifying in which direction you can sort them, that is, in ascending or descending order.Â  The order of the fields in the interface does correspond to the order in which the successive sortings will be done by the OpenSearchServer engine. For instance, assume that we are sorting the cookies database used in the previous examples. If the first field to be sorted is "size" (desc.), the results will be arranged in Small -&gt; Medium -&gt; Large order, since this is the descending alphabetical order, as the primary key. If the second field to be sorted is "flavour" (asc.), all results within a given size will be arranged in an order such as Chocolate -&gt; Coffee -&gt; Pecan, since this is the ascending alphabetical order, as the secondary key. Â To add a sorting criteria: Select the desired field to be sorted from the drop down list under the columnÂ FieldÂ and clickÂ add sort field. The field gets listed under a table having information such asÂ Field,Direction, andÂ Action. Select the direction fromÂ DirectionÂ drop down list. There are two options: ascendant and descendant. If you don't want to keep a particular field, clickÂ RemoveÂ to delete it. Â </value></field><field name="contentExact"><value>You can set the sorting criteria by adding the the field to be sorted and specifying in which direction you can sort them, that is, in ascending or descending order.Â  The order of the fields in the interface does correspond to the order in which the successive sortings will be done by the OpenSearchServer engine. For instance, assume that we are sorting the cookies database used in the previous examples. If the first field to be sorted is "size" (desc.), the results will be arranged in Small -&gt; Medium -&gt; Large order, since this is the descending alphabetical order, as the primary key. If the second field to be sorted is "flavour" (asc.), all results within a given size will be arranged in an order such as Chocolate -&gt; Coffee -&gt; Pecan, since this is the ascending alphabetical order, as the secondary key. Â To add a sorting criteria: Select the desired field to be sorted from the drop down list under the columnÂ FieldÂ and clickÂ add sort field. The field gets listed under a table having information such asÂ Field,Direction, andÂ Action. Select the direction fromÂ DirectionÂ drop down list. There are two options: ascendant and descendant. If you don't want to keep a particular field, clickÂ RemoveÂ to delete it. Â </value></field><field name="contentPhonetic"><value>You can set the sorting criteria by adding the the field to be sorted and specifying in which direction you can sort them, that is, in ascending or descending order.Â  The order of the fields in the interface does correspond to the order in which the successive sortings will be done by the OpenSearchServer engine. For instance, assume that we are sorting the cookies database used in the previous examples. If the first field to be sorted is "size" (desc.), the results will be arranged in Small -&gt; Medium -&gt; Large order, since this is the descending alphabetical order, as the primary key. If the second field to be sorted is "flavour" (asc.), all results within a given size will be arranged in an order such as Chocolate -&gt; Coffee -&gt; Pecan, since this is the ascending alphabetical order, as the secondary key. Â To add a sorting criteria: Select the desired field to be sorted from the drop down list under the columnÂ FieldÂ and clickÂ add sort field. The field gets listed under a table having information such asÂ Field,Direction, andÂ Action. Select the direction fromÂ DirectionÂ drop down list. There are two options: ascendant and descendant. If you don't want to keep a particular field, clickÂ RemoveÂ to delete it. Â </value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Snippets</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Snippets</value></field><field name="autocomplete"><value>Snippets</value></field><field name="title"><value>Snippets</value></field><field name="titleExact"><value>Snippets</value></field><field name="titlePhonetic"><value>Snippets</value></field><field name="content"><value>Â  Â  A snippet is an excerpt that is displayed with the search results. It helps the readers to assess what they can expect inside the document. Managing Snippets To add a snippet: Select a snippet from the drop down list and clickÂ add snippet. The added snippet gets listed under a table having various columns described in the following steps. The added snipped name is listed underÂ Field. Select theÂ FragmentorÂ from the drop down list. The fragmenter is the algorithm determining where the snippet starts and where the snippet will end. You can choose from the following fragmentors: NoFragmenter indiscriminately quotes the field from its beginning. SizeFragmenter centres the snippet on the target terms, then extends the snippet rightward and leftward until it hits the maximum allowed size. SentenceFragmenter centres the snippet on the target terms, then extends the snippet rightward and leftward in a way that strives to preserve the sentences in the text. Type the required tag inÂ Tag. The OpenSearchServer engine brackets the target terms with HTML tags. The default tag is b (bold text). Type the separator syntax inÂ Separator. It is a character string that is inserted between the sentence fragments. These sentence fragments make a snippet. By default, this will be an ellipsis (...). Type the maximum size of snippet inÂ Max snippet size. Max snippet size is the maximum number of chars that will be parsed by the snippet generator. By default, its value is set to '200'. Type the maximum number of snippets inÂ Max snippet number. The specified maximum number of snippets are excerpted from this field while generating the search result. By default, its value is set to '1'. Type the maximum size of the snippet inÂ Max field size. By default, its value is set to '2147483647'. ClickÂ Search: The search results are displayed underÂ Summary. ClickÂ SaveÂ to save the query parameters. To view API call for Snippet fields, clickÂ XML/HTTP API Call.</value></field><field name="contentExact"><value>Â  Â  A snippet is an excerpt that is displayed with the search results. It helps the readers to assess what they can expect inside the document. Managing Snippets To add a snippet: Select a snippet from the drop down list and clickÂ add snippet. The added snippet gets listed under a table having various columns described in the following steps. The added snipped name is listed underÂ Field. Select theÂ FragmentorÂ from the drop down list. The fragmenter is the algorithm determining where the snippet starts and where the snippet will end. You can choose from the following fragmentors: NoFragmenter indiscriminately quotes the field from its beginning. SizeFragmenter centres the snippet on the target terms, then extends the snippet rightward and leftward until it hits the maximum allowed size. SentenceFragmenter centres the snippet on the target terms, then extends the snippet rightward and leftward in a way that strives to preserve the sentences in the text. Type the required tag inÂ Tag. The OpenSearchServer engine brackets the target terms with HTML tags. The default tag is b (bold text). Type the separator syntax inÂ Separator. It is a character string that is inserted between the sentence fragments. These sentence fragments make a snippet. By default, this will be an ellipsis (...). Type the maximum size of snippet inÂ Max snippet size. Max snippet size is the maximum number of chars that will be parsed by the snippet generator. By default, its value is set to '200'. Type the maximum number of snippets inÂ Max snippet number. The specified maximum number of snippets are excerpted from this field while generating the search result. By default, its value is set to '1'. Type the maximum size of the snippet inÂ Max field size. By default, its value is set to '2147483647'. ClickÂ Search: The search results are displayed underÂ Summary. ClickÂ SaveÂ to save the query parameters. To view API call for Snippet fields, clickÂ XML/HTTP API Call.</value></field><field name="contentPhonetic"><value>Â  Â  A snippet is an excerpt that is displayed with the search results. It helps the readers to assess what they can expect inside the document. Managing Snippets To add a snippet: Select a snippet from the drop down list and clickÂ add snippet. The added snippet gets listed under a table having various columns described in the following steps. The added snipped name is listed underÂ Field. Select theÂ FragmentorÂ from the drop down list. The fragmenter is the algorithm determining where the snippet starts and where the snippet will end. You can choose from the following fragmentors: NoFragmenter indiscriminately quotes the field from its beginning. SizeFragmenter centres the snippet on the target terms, then extends the snippet rightward and leftward until it hits the maximum allowed size. SentenceFragmenter centres the snippet on the target terms, then extends the snippet rightward and leftward in a way that strives to preserve the sentences in the text. Type the required tag inÂ Tag. The OpenSearchServer engine brackets the target terms with HTML tags. The default tag is b (bold text). Type the separator syntax inÂ Separator. It is a character string that is inserted between the sentence fragments. These sentence fragments make a snippet. By default, this will be an ellipsis (...). Type the maximum size of snippet inÂ Max snippet size. Max snippet size is the maximum number of chars that will be parsed by the snippet generator. By default, its value is set to '200'. Type the maximum number of snippets inÂ Max snippet number. The specified maximum number of snippets are excerpted from this field while generating the search result. By default, its value is set to '1'. Type the maximum size of the snippet inÂ Max field size. By default, its value is set to '2147483647'. ClickÂ Search: The search results are displayed underÂ Summary. ClickÂ SaveÂ to save the query parameters. To view API call for Snippet fields, clickÂ XML/HTTP API Call.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Faceted+fields</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Faceted+fields</value></field><field name="autocomplete"><value>Faceted fields</value></field><field name="title"><value>Faceted fields</value></field><field name="titleExact"><value>Faceted fields</value></field><field name="titlePhonetic"><value>Faceted fields</value></field><field name="content"><value>Faceted fields are considered as categories. Search engine decides which documents should fall in a category and what is the population count within each category. For example, a database of cookies could be queried with the fields "size", "flavor" and "brand"' as facets. If "size" is a faceted field, and has possible values of "Small, Medium, Large" the search will return how many Small, Medium and Large cookies are among the results of the current search. Â  To add a faceted field: Click on the drop down combo to display the list, select a facet (for example: lang), and click add facet.The added facet gets listed as shown below: If the faceted field is set to be multivalued, then selectÂ yesÂ from drop down list underÂ MultivaluedÂ column. A multivalued field is one that can belong to several facets. For example, a cookie that is sold under several brands. If you setÂ Post collapsingÂ as yes, the facet count is made document after collapsing. For example, photos having same name are collapsed together and displayed int the search result as one document. TheÂ Minimal countÂ is set to '0' by default. Type a desired minimal value to diminish the noise from facets with a low number of occurrences. For example, if only one cookie in the query is "Large", setting the minimal count to two will only indicate how many cookies are "Small" and "Medium", with "Large" not being considered a viable category for the current search. Click Search. The results are displayed in Summary section.</value></field><field name="contentExact"><value>Faceted fields are considered as categories. Search engine decides which documents should fall in a category and what is the population count within each category. For example, a database of cookies could be queried with the fields "size", "flavor" and "brand"' as facets. If "size" is a faceted field, and has possible values of "Small, Medium, Large" the search will return how many Small, Medium and Large cookies are among the results of the current search. Â  To add a faceted field: Click on the drop down combo to display the list, select a facet (for example: lang), and click add facet.The added facet gets listed as shown below: If the faceted field is set to be multivalued, then selectÂ yesÂ from drop down list underÂ MultivaluedÂ column. A multivalued field is one that can belong to several facets. For example, a cookie that is sold under several brands. If you setÂ Post collapsingÂ as yes, the facet count is made document after collapsing. For example, photos having same name are collapsed together and displayed int the search result as one document. TheÂ Minimal countÂ is set to '0' by default. Type a desired minimal value to diminish the noise from facets with a low number of occurrences. For example, if only one cookie in the query is "Large", setting the minimal count to two will only indicate how many cookies are "Small" and "Medium", with "Large" not being considered a viable category for the current search. Click Search. The results are displayed in Summary section.</value></field><field name="contentPhonetic"><value>Faceted fields are considered as categories. Search engine decides which documents should fall in a category and what is the population count within each category. For example, a database of cookies could be queried with the fields "size", "flavor" and "brand"' as facets. If "size" is a faceted field, and has possible values of "Small, Medium, Large" the search will return how many Small, Medium and Large cookies are among the results of the current search. Â  To add a faceted field: Click on the drop down combo to display the list, select a facet (for example: lang), and click add facet.The added facet gets listed as shown below: If the faceted field is set to be multivalued, then selectÂ yesÂ from drop down list underÂ MultivaluedÂ column. A multivalued field is one that can belong to several facets. For example, a cookie that is sold under several brands. If you setÂ Post collapsingÂ as yes, the facet count is made document after collapsing. For example, photos having same name are collapsed together and displayed int the search result as one document. TheÂ Minimal countÂ is set to '0' by default. Type a desired minimal value to diminish the noise from facets with a low number of occurrences. For example, if only one cookie in the query is "Large", setting the minimal count to two will only indicate how many cookies are "Small" and "Medium", with "Large" not being considered a viable category for the current search. Click Search. The results are displayed in Summary section.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Returned+fields</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Returned+fields</value></field><field name="autocomplete"><value>Returned fields</value></field><field name="title"><value>Returned fields</value></field><field name="titleExact"><value>Returned fields</value></field><field name="titlePhonetic"><value>Returned fields</value></field><field name="content"><value>Apart from the Query tab, you can set the fields of a query from this tab also. Â  To set the returned fields: Select a field from drop down list and click add. Add as many fields as you want and click Search. Extraneous fields can be disposed of by clicking "Remove" in the "Action" column. Â </value></field><field name="contentExact"><value>Apart from the Query tab, you can set the fields of a query from this tab also. Â  To set the returned fields: Select a field from drop down list and click add. Add as many fields as you want and click Search. Extraneous fields can be disposed of by clicking "Remove" in the "Action" column. Â </value></field><field name="contentPhonetic"><value>Apart from the Query tab, you can set the fields of a query from this tab also. Â  To set the returned fields: Select a field from drop down list and click add. Add as many fields as you want and click Search. Extraneous fields can be disposed of by clicking "Remove" in the "Action" column. Â </value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Query+template</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Query+template</value></field><field name="autocomplete"><value>Query template</value></field><field name="title"><value>Query template</value></field><field name="titleExact"><value>Query template</value></field><field name="titlePhonetic"><value>Query template</value></field><field name="content"><value>Using Query tab, you can check how search works with index data. You can specify basic search parameters from theÂ QueryÂ tab. Â  If you created an index using default web template, theÂ searchÂ query template is pre-loaded on the Query tab. You can edit it or create a new query template. By default, a query template is already present with the name:Â Search. It contains a sample query pattern. Â  To run a query: Â  1. Double click theÂ searchÂ query template. Â  2. Specify the query syntax in theÂ Pattern queryÂ box. By default, the following syntax is already loaded in theÂ Pattern queryÂ box: title:($$)^10 OR title:("$$")^10 OR titleExact:($$)^10 OR titleExact:("$$")^10 OR url:($$)^5 OR url:("$$")^5 OR urlSplit:($$)^5 OR urlSplit:("$$")^5 OR urlExact:($$)^5 OR urlExact:("$$")^5 OR content:($$) OR content:("$$") OR contentExact:($$) OR contentExact:("$$") Â  The sample query shown above use the OR operator. The fields are parsed for sentence ("$$") OR the raw terms ($$). What we mean by "sentence" depends on the phrase slop parameter. The scoring weight given to each of those field is plainly expressed. In this case, The title has a weight of 10, The URL has a weight of 5, The content has a default weight of 1. 3. Type a query inÂ Enter the query. For example, if you type google, the engine will search this term according toÂ Pattern query. 4. You can specify the default operator asÂ ANDÂ andÂ ORÂ fromÂ Default operatorÂ drop down list. By default this is set to the basic Boolean AND. 5. Specify the position where the search result starts to display inÂ Start offset. By default, it is set to '0'. 6. Type a number inÂ Number of rows. It is the maximum number of rows to be returned. 7. Type aÂ Phrase slop. When searching for a sentence, the phrase slop is the tolerance for words between the terms being searched. For example: ("champions world") with a slop of 1 would accept "world champions", but not "champions of the world", as a valid target ("champions world") with a slop of 2 would accept "world champions" and "world-wide champions" but not "champions of the world" as a valid target a slop of 3 would be wide enough for "champions of the world" to be an acceptable target for ("champions world") 8. Select the language of the query fromÂ LanguageÂ drop down list. 9. Click Search. The Summary sections displays the search result as shown in the example below: Query - the query string specified from the query tab. Document(s) found - the number of documents found for a query. Collapsed documents - the number of documents collapsed in a query result. Row(s) returned - number of rows displayed in the search result. Highest score - the highest score of documents in the search result. Time elapsed (ms) - time to display the search result in milliseconds. To view the summary in XML, clickÂ XML/HTTP APIÂ Call.</value></field><field name="contentExact"><value>Using Query tab, you can check how search works with index data. You can specify basic search parameters from theÂ QueryÂ tab. Â  If you created an index using default web template, theÂ searchÂ query template is pre-loaded on the Query tab. You can edit it or create a new query template. By default, a query template is already present with the name:Â Search. It contains a sample query pattern. Â  To run a query: Â  1. Double click theÂ searchÂ query template. Â  2. Specify the query syntax in theÂ Pattern queryÂ box. By default, the following syntax is already loaded in theÂ Pattern queryÂ box: title:($$)^10 OR title:("$$")^10 OR titleExact:($$)^10 OR titleExact:("$$")^10 OR url:($$)^5 OR url:("$$")^5 OR urlSplit:($$)^5 OR urlSplit:("$$")^5 OR urlExact:($$)^5 OR urlExact:("$$")^5 OR content:($$) OR content:("$$") OR contentExact:($$) OR contentExact:("$$") Â  The sample query shown above use the OR operator. The fields are parsed for sentence ("$$") OR the raw terms ($$). What we mean by "sentence" depends on the phrase slop parameter. The scoring weight given to each of those field is plainly expressed. In this case, The title has a weight of 10, The URL has a weight of 5, The content has a default weight of 1. 3. Type a query inÂ Enter the query. For example, if you type google, the engine will search this term according toÂ Pattern query. 4. You can specify the default operator asÂ ANDÂ andÂ ORÂ fromÂ Default operatorÂ drop down list. By default this is set to the basic Boolean AND. 5. Specify the position where the search result starts to display inÂ Start offset. By default, it is set to '0'. 6. Type a number inÂ Number of rows. It is the maximum number of rows to be returned. 7. Type aÂ Phrase slop. When searching for a sentence, the phrase slop is the tolerance for words between the terms being searched. For example: ("champions world") with a slop of 1 would accept "world champions", but not "champions of the world", as a valid target ("champions world") with a slop of 2 would accept "world champions" and "world-wide champions" but not "champions of the world" as a valid target a slop of 3 would be wide enough for "champions of the world" to be an acceptable target for ("champions world") 8. Select the language of the query fromÂ LanguageÂ drop down list. 9. Click Search. The Summary sections displays the search result as shown in the example below: Query - the query string specified from the query tab. Document(s) found - the number of documents found for a query. Collapsed documents - the number of documents collapsed in a query result. Row(s) returned - number of rows displayed in the search result. Highest score - the highest score of documents in the search result. Time elapsed (ms) - time to display the search result in milliseconds. To view the summary in XML, clickÂ XML/HTTP APIÂ Call.</value></field><field name="contentPhonetic"><value>Using Query tab, you can check how search works with index data. You can specify basic search parameters from theÂ QueryÂ tab. Â  If you created an index using default web template, theÂ searchÂ query template is pre-loaded on the Query tab. You can edit it or create a new query template. By default, a query template is already present with the name:Â Search. It contains a sample query pattern. Â  To run a query: Â  1. Double click theÂ searchÂ query template. Â  2. Specify the query syntax in theÂ Pattern queryÂ box. By default, the following syntax is already loaded in theÂ Pattern queryÂ box: title:($$)^10 OR title:("$$")^10 OR titleExact:($$)^10 OR titleExact:("$$")^10 OR url:($$)^5 OR url:("$$")^5 OR urlSplit:($$)^5 OR urlSplit:("$$")^5 OR urlExact:($$)^5 OR urlExact:("$$")^5 OR content:($$) OR content:("$$") OR contentExact:($$) OR contentExact:("$$") Â  The sample query shown above use the OR operator. The fields are parsed for sentence ("$$") OR the raw terms ($$). What we mean by "sentence" depends on the phrase slop parameter. The scoring weight given to each of those field is plainly expressed. In this case, The title has a weight of 10, The URL has a weight of 5, The content has a default weight of 1. 3. Type a query inÂ Enter the query. For example, if you type google, the engine will search this term according toÂ Pattern query. 4. You can specify the default operator asÂ ANDÂ andÂ ORÂ fromÂ Default operatorÂ drop down list. By default this is set to the basic Boolean AND. 5. Specify the position where the search result starts to display inÂ Start offset. By default, it is set to '0'. 6. Type a number inÂ Number of rows. It is the maximum number of rows to be returned. 7. Type aÂ Phrase slop. When searching for a sentence, the phrase slop is the tolerance for words between the terms being searched. For example: ("champions world") with a slop of 1 would accept "world champions", but not "champions of the world", as a valid target ("champions world") with a slop of 2 would accept "world champions" and "world-wide champions" but not "champions of the world" as a valid target a slop of 3 would be wide enough for "champions of the world" to be an acceptable target for ("champions world") 8. Select the language of the query fromÂ LanguageÂ drop down list. 9. Click Search. The Summary sections displays the search result as shown in the example below: Query - the query string specified from the query tab. Document(s) found - the number of documents found for a query. Collapsed documents - the number of documents collapsed in a query result. Row(s) returned - number of rows displayed in the search result. Highest score - the highest score of documents in the search result. Time elapsed (ms) - time to display the search result in milliseconds. To view the summary in XML, clickÂ XML/HTTP APIÂ Call.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Running+a+query</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Running+a+query</value></field><field name="autocomplete"><value>Running a query</value></field><field name="title"><value>Running a query</value></field><field name="titleExact"><value>Running a query</value></field><field name="titlePhonetic"><value>Running a query</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Login+as+a+user</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Login+as+a+user</value></field><field name="autocomplete"><value>Login as a user</value></field><field name="title"><value>Login as a user</value></field><field name="titleExact"><value>Login as a user</value></field><field name="titlePhonetic"><value>Login as a user</value></field><field name="content"><value>Provide the user with login name and password. The user will be able to view only those tabs that are assigned to him/her from the Privileges tab. To login as a user: 1) TypeÂ http://localhost:8080/inÂ the browser. Login window opens. Logging in to access the index 2) Type the user name in Login and password in Password. If you do not know your login name and password, then ask your administrator to create a user for your name and assign role based privileges to the user.</value></field><field name="contentExact"><value>Provide the user with login name and password. The user will be able to view only those tabs that are assigned to him/her from the Privileges tab. To login as a user: 1) TypeÂ http://localhost:8080/inÂ the browser. Login window opens. Logging in to access the index 2) Type the user name in Login and password in Password. If you do not know your login name and password, then ask your administrator to create a user for your name and assign role based privileges to the user.</value></field><field name="contentPhonetic"><value>Provide the user with login name and password. The user will be able to view only those tabs that are assigned to him/her from the Privileges tab. To login as a user: 1) TypeÂ http://localhost:8080/inÂ the browser. Login window opens. Logging in to access the index 2) Type the user name in Login and password in Password. If you do not know your login name and password, then ask your administrator to create a user for your name and assign role based privileges to the user.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+user</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+user</value></field><field name="autocomplete"><value>Creating a user</value></field><field name="title"><value>Creating a user</value></field><field name="titleExact"><value>Creating a user</value></field><field name="titlePhonetic"><value>Creating a user</value></field><field name="content"><value>To create a user from the privileges tab: 1) Type aÂ User name. 2) Type aÂ PasswordÂ and retype it inÂ Confirm passwordÂ to confirm it. Please make sure you remember or note down the user name and password. The next time you accessÂ http://localhost:8080, you will be prompted to enter your user name and password. See Troubleshooting section for details on how to troubleshoot if you forgot your username and password. 3) When you enter the password, the API key is generated and displayed in theÂ API KeyÂ text box. 4) Check the boxÂ Is admin:, if you want to assign administrative rights to this user. 5) Check the boxÂ Can monitoring:, if you want to assign the monitoring rights to the user. 6)Â API KeyÂ - the key required for the APIs to be functional. 7) Select an index from the drop-down list calledÂ Add privileges on following index: drop-down list and select a task that can be performed for the selected index from the drop-down list below it. For example, youÂ Index:query the index. If you select this option, you are able to perform queries on the selected index. The following table lists the available privileges and their respective actions: Privilege Name Action Index:query the index Allows a user to specify queries on Index. When you select this option, the user can view theÂ QueryÂ tab along with the default tabs. Index:insert data Allows a user to insert or update data. The user can viewÂ UpdateÂ andÂ QueryÂ tab and can also update via the Update API. Index:edit the schema Allows a user to edit the schema fields. The user can view theÂ UpdateÂ andÂ SchemaÂ tabs and can also edit the Schema fields via the Update API. Web crawler: edit then pattern list Allows a user to edit the pattern list under the Crawler tab (Crawler &gt; Web &gt; Pattern list). Web crawler: edit parameters Allows a user to edit the parameters such asÂ User-Agent, Fetch interval between re-fetches, Number of simultaneous threads, Number of URLsÂ to crawl, and others under theÂ Crawl processÂ tab (Crawler &gt; Web &gt; Crawl process). Web crawler: start and stop Allows a user to start and stop the web crawler, from the Crawler tab or API. File crawler: edit the pattern list Allows a user to edit the pattern list for the file crawler. File crawler: edit parameters Allows a user to edit the parameters. File crawler: start and stop Allows a user to start and stop the file crawler. Database crawler: edit parameters Allows a user to edit the parameters of a Database crawler. Database crawler: start and stop Allows a user to start and stop the database crawler. By default, three tabs available to all the users: Scheduler, Runtime, and Replication. 8) After selecting an index and a task, clickÂ AddÂ and then clickÂ Create. The user you have just created is listed under the headingÂ List of existing usersÂ -Â click on a user to edit it.</value></field><field name="contentExact"><value>To create a user from the privileges tab: 1) Type aÂ User name. 2) Type aÂ PasswordÂ and retype it inÂ Confirm passwordÂ to confirm it. Please make sure you remember or note down the user name and password. The next time you accessÂ http://localhost:8080, you will be prompted to enter your user name and password. See Troubleshooting section for details on how to troubleshoot if you forgot your username and password. 3) When you enter the password, the API key is generated and displayed in theÂ API KeyÂ text box. 4) Check the boxÂ Is admin:, if you want to assign administrative rights to this user. 5) Check the boxÂ Can monitoring:, if you want to assign the monitoring rights to the user. 6)Â API KeyÂ - the key required for the APIs to be functional. 7) Select an index from the drop-down list calledÂ Add privileges on following index: drop-down list and select a task that can be performed for the selected index from the drop-down list below it. For example, youÂ Index:query the index. If you select this option, you are able to perform queries on the selected index. The following table lists the available privileges and their respective actions: Privilege Name Action Index:query the index Allows a user to specify queries on Index. When you select this option, the user can view theÂ QueryÂ tab along with the default tabs. Index:insert data Allows a user to insert or update data. The user can viewÂ UpdateÂ andÂ QueryÂ tab and can also update via the Update API. Index:edit the schema Allows a user to edit the schema fields. The user can view theÂ UpdateÂ andÂ SchemaÂ tabs and can also edit the Schema fields via the Update API. Web crawler: edit then pattern list Allows a user to edit the pattern list under the Crawler tab (Crawler &gt; Web &gt; Pattern list). Web crawler: edit parameters Allows a user to edit the parameters such asÂ User-Agent, Fetch interval between re-fetches, Number of simultaneous threads, Number of URLsÂ to crawl, and others under theÂ Crawl processÂ tab (Crawler &gt; Web &gt; Crawl process). Web crawler: start and stop Allows a user to start and stop the web crawler, from the Crawler tab or API. File crawler: edit the pattern list Allows a user to edit the pattern list for the file crawler. File crawler: edit parameters Allows a user to edit the parameters. File crawler: start and stop Allows a user to start and stop the file crawler. Database crawler: edit parameters Allows a user to edit the parameters of a Database crawler. Database crawler: start and stop Allows a user to start and stop the database crawler. By default, three tabs available to all the users: Scheduler, Runtime, and Replication. 8) After selecting an index and a task, clickÂ AddÂ and then clickÂ Create. The user you have just created is listed under the headingÂ List of existing usersÂ -Â click on a user to edit it.</value></field><field name="contentPhonetic"><value>To create a user from the privileges tab: 1) Type aÂ User name. 2) Type aÂ PasswordÂ and retype it inÂ Confirm passwordÂ to confirm it. Please make sure you remember or note down the user name and password. The next time you accessÂ http://localhost:8080, you will be prompted to enter your user name and password. See Troubleshooting section for details on how to troubleshoot if you forgot your username and password. 3) When you enter the password, the API key is generated and displayed in theÂ API KeyÂ text box. 4) Check the boxÂ Is admin:, if you want to assign administrative rights to this user. 5) Check the boxÂ Can monitoring:, if you want to assign the monitoring rights to the user. 6)Â API KeyÂ - the key required for the APIs to be functional. 7) Select an index from the drop-down list calledÂ Add privileges on following index: drop-down list and select a task that can be performed for the selected index from the drop-down list below it. For example, youÂ Index:query the index. If you select this option, you are able to perform queries on the selected index. The following table lists the available privileges and their respective actions: Privilege Name Action Index:query the index Allows a user to specify queries on Index. When you select this option, the user can view theÂ QueryÂ tab along with the default tabs. Index:insert data Allows a user to insert or update data. The user can viewÂ UpdateÂ andÂ QueryÂ tab and can also update via the Update API. Index:edit the schema Allows a user to edit the schema fields. The user can view theÂ UpdateÂ andÂ SchemaÂ tabs and can also edit the Schema fields via the Update API. Web crawler: edit then pattern list Allows a user to edit the pattern list under the Crawler tab (Crawler &gt; Web &gt; Pattern list). Web crawler: edit parameters Allows a user to edit the parameters such asÂ User-Agent, Fetch interval between re-fetches, Number of simultaneous threads, Number of URLsÂ to crawl, and others under theÂ Crawl processÂ tab (Crawler &gt; Web &gt; Crawl process). Web crawler: start and stop Allows a user to start and stop the web crawler, from the Crawler tab or API. File crawler: edit the pattern list Allows a user to edit the pattern list for the file crawler. File crawler: edit parameters Allows a user to edit the parameters. File crawler: start and stop Allows a user to start and stop the file crawler. Database crawler: edit parameters Allows a user to edit the parameters of a Database crawler. Database crawler: start and stop Allows a user to start and stop the database crawler. By default, three tabs available to all the users: Scheduler, Runtime, and Replication. 8) After selecting an index and a task, clickÂ AddÂ and then clickÂ Create. The user you have just created is listed under the headingÂ List of existing usersÂ -Â click on a user to edit it.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+user+and+assigning+privileges</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+user+and+assigning+privileges</value></field><field name="autocomplete"><value>Creating a user and assigning privileges</value></field><field name="title"><value>Creating a user and assigning privileges</value></field><field name="titleExact"><value>Creating a user and assigning privileges</value></field><field name="titlePhonetic"><value>Creating a user and assigning privileges</value></field><field name="content"><value>You can create a user and assign privileges on specific Indexes and tasks. There are two tabs on the OpenSearchServer main window. The second one is Privileges (See the screen shot below). Privileges tab Types of Users There are two types of OpenSearchServer users AdministratorÂ - The administrator has full rights on OpenSearchServer software; he can create a user and assign specific privileges for each user. General UserÂ - Any user who perform assigned tasks in OpenSearchServer according to his privileges. Â </value></field><field name="contentExact"><value>You can create a user and assign privileges on specific Indexes and tasks. There are two tabs on the OpenSearchServer main window. The second one is Privileges (See the screen shot below). Privileges tab Types of Users There are two types of OpenSearchServer users AdministratorÂ - The administrator has full rights on OpenSearchServer software; he can create a user and assign specific privileges for each user. General UserÂ - Any user who perform assigned tasks in OpenSearchServer according to his privileges. Â </value></field><field name="contentPhonetic"><value>You can create a user and assign privileges on specific Indexes and tasks. There are two tabs on the OpenSearchServer main window. The second one is Privileges (See the screen shot below). Privileges tab Types of Users There are two types of OpenSearchServer users AdministratorÂ - The administrator has full rights on OpenSearchServer software; he can create a user and assign specific privileges for each user. General UserÂ - Any user who perform assigned tasks in OpenSearchServer according to his privileges. Â </value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Selecting+a+parser+list</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Selecting+a+parser+list</value></field><field name="autocomplete"><value>Selecting a parser list</value></field><field name="title"><value>Selecting a parser list</value></field><field name="titleExact"><value>Selecting a parser list</value></field><field name="titlePhonetic"><value>Selecting a parser list</value></field><field name="content"><value>Parser list To select a parser 1) Select the desired parser fromÂ Type of parserÂ drop down list. By default, theÂ Audio parserÂ is selected. When you select a parser, itsÂ supported extensionsÂ are listed under Supported extension. For example, if you selectÂ HTML parser, its supported extensions are listed as shown in the following screen shot:Â HTML parser TheÂ Supported MIME typeÂ for the selected parser is also displayed. ForÂ HTML parser, it is text/html. Mapping a parser field to an Index field To map a parser field, you have to first select theÂ Type of parserÂ from the drop down list. Information underÂ Supported extensionÂ and SupportedÂ MIME typeÂ changes according the selected parser type. The parser fields also changes in the drop down box placed adjacent to the default index fields. Dynamic parser fields (depends on the type of parser) and default Index fields To map a parser field to an index field 1) Select the parser field from the first drop down list and then select a index field from linked in drop down list. 2) Click add. Parser and Index fields mapping 3) The mapped field gets listed under Field mapping. SelectÂ HTML parserÂ fromÂ Type of parser. The following supported extensions are displayed: htm html xhtml Supported MIME type is text/html. Select the parser field asÂ titleÂ and select the index field asÂ titleExact. ClickÂ add. The mapped field is listed underÂ Field mapping.</value></field><field name="contentExact"><value>Parser list To select a parser 1) Select the desired parser fromÂ Type of parserÂ drop down list. By default, theÂ Audio parserÂ is selected. When you select a parser, itsÂ supported extensionsÂ are listed under Supported extension. For example, if you selectÂ HTML parser, its supported extensions are listed as shown in the following screen shot:Â HTML parser TheÂ Supported MIME typeÂ for the selected parser is also displayed. ForÂ HTML parser, it is text/html. Mapping a parser field to an Index field To map a parser field, you have to first select theÂ Type of parserÂ from the drop down list. Information underÂ Supported extensionÂ and SupportedÂ MIME typeÂ changes according the selected parser type. The parser fields also changes in the drop down box placed adjacent to the default index fields. Dynamic parser fields (depends on the type of parser) and default Index fields To map a parser field to an index field 1) Select the parser field from the first drop down list and then select a index field from linked in drop down list. 2) Click add. Parser and Index fields mapping 3) The mapped field gets listed under Field mapping. SelectÂ HTML parserÂ fromÂ Type of parser. The following supported extensions are displayed: htm html xhtml Supported MIME type is text/html. Select the parser field asÂ titleÂ and select the index field asÂ titleExact. ClickÂ add. The mapped field is listed underÂ Field mapping.</value></field><field name="contentPhonetic"><value>Parser list To select a parser 1) Select the desired parser fromÂ Type of parserÂ drop down list. By default, theÂ Audio parserÂ is selected. When you select a parser, itsÂ supported extensionsÂ are listed under Supported extension. For example, if you selectÂ HTML parser, its supported extensions are listed as shown in the following screen shot:Â HTML parser TheÂ Supported MIME typeÂ for the selected parser is also displayed. ForÂ HTML parser, it is text/html. Mapping a parser field to an Index field To map a parser field, you have to first select theÂ Type of parserÂ from the drop down list. Information underÂ Supported extensionÂ and SupportedÂ MIME typeÂ changes according the selected parser type. The parser fields also changes in the drop down box placed adjacent to the default index fields. Dynamic parser fields (depends on the type of parser) and default Index fields To map a parser field to an index field 1) Select the parser field from the first drop down list and then select a index field from linked in drop down list. 2) Click add. Parser and Index fields mapping 3) The mapped field gets listed under Field mapping. SelectÂ HTML parserÂ fromÂ Type of parser. The following supported extensions are displayed: htm html xhtml Supported MIME type is text/html. Select the parser field asÂ titleÂ and select the index field asÂ titleExact. ClickÂ add. The mapped field is listed underÂ Field mapping.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Specifying+the+stop+words</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Specifying+the+stop+words</value></field><field name="autocomplete"><value>Specifying the stop words</value></field><field name="title"><value>Specifying the stop words</value></field><field name="titleExact"><value>Specifying the stop words</value></field><field name="titlePhonetic"><value>Specifying the stop words</value></field><field name="content"><value>Stop words are those words that you don't want your index to search and return for queries. You can specify stop words that will not be indexed by OpenSearchServer. Stop words are usually not significant for an index. For example: a the or To specify stop words 1) Click on theÂ Stop wordsÂ tab under theÂ SchemaÂ tab. 2) Create a list by typing a name in edit box underÂ List name. For example, type stoplist1. 3) ClickÂ . 4) Now add the desired stop words underÂ ListcontentÂ and clickÂ Save. For example, you can add the words: a, the, about, or, it, and so on to this list. Adding stop words to the list A message box opens displaying the message that list is saved.</value></field><field name="contentExact"><value>Stop words are those words that you don't want your index to search and return for queries. You can specify stop words that will not be indexed by OpenSearchServer. Stop words are usually not significant for an index. For example: a the or To specify stop words 1) Click on theÂ Stop wordsÂ tab under theÂ SchemaÂ tab. 2) Create a list by typing a name in edit box underÂ List name. For example, type stoplist1. 3) ClickÂ . 4) Now add the desired stop words underÂ ListcontentÂ and clickÂ Save. For example, you can add the words: a, the, about, or, it, and so on to this list. Adding stop words to the list A message box opens displaying the message that list is saved.</value></field><field name="contentPhonetic"><value>Stop words are those words that you don't want your index to search and return for queries. You can specify stop words that will not be indexed by OpenSearchServer. Stop words are usually not significant for an index. For example: a the or To specify stop words 1) Click on theÂ Stop wordsÂ tab under theÂ SchemaÂ tab. 2) Create a list by typing a name in edit box underÂ List name. For example, type stoplist1. 3) ClickÂ . 4) Now add the desired stop words underÂ ListcontentÂ and clickÂ Save. For example, you can add the words: a, the, about, or, it, and so on to this list. Adding stop words to the list A message box opens displaying the message that list is saved.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+synonyms+list</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+synonyms+list</value></field><field name="autocomplete"><value>Creating a synonyms list</value></field><field name="title"><value>Creating a synonyms list</value></field><field name="titleExact"><value>Creating a synonyms list</value></field><field name="titlePhonetic"><value>Creating a synonyms list</value></field><field name="content"><value>By maintaining a list of synonyms, an index can ensure that a query using one term will return data using another term which has been predefined as a synonym. Synonyms To create a synonym list: 1) Type a name in List name and click . For example, type synlist1. The list name is added andÂ List contentedit box opens. Adding synonyms 2) Add the desired synonyms. For example, apparent and obvious are synonyms.</value></field><field name="contentExact"><value>By maintaining a list of synonyms, an index can ensure that a query using one term will return data using another term which has been predefined as a synonym. Synonyms To create a synonym list: 1) Type a name in List name and click . For example, type synlist1. The list name is added andÂ List contentedit box opens. Adding synonyms 2) Add the desired synonyms. For example, apparent and obvious are synonyms.</value></field><field name="contentPhonetic"><value>By maintaining a list of synonyms, an index can ensure that a query using one term will return data using another term which has been predefined as a synonym. Synonyms To create a synonym list: 1) Type a name in List name and click . For example, type synlist1. The list name is added andÂ List contentedit box opens. Adding synonyms 2) Add the desired synonyms. For example, apparent and obvious are synonyms.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Filters</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Filters</value></field><field name="autocomplete"><value>Filters</value></field><field name="title"><value>Filters</value></field><field name="titleExact"><value>Filters</value></field><field name="titlePhonetic"><value>Filters</value></field><field name="content"><value>The following filters are provided with the OpenSearchServer analyzer StandardFilter This filter is designed to be fed by StandardTokenizer. It removes dots from acronyms and âs (apostrophe followed by S) from words with apostrophes. N.A.S.A. to NASA Cat's to Cats ChineseFilter This is a stop-word filter that passes Chinese characters through. DutchStemFilter This is a Java filter written specifically for stemming the Dutch language. It uses the Lucene class org.apache.lucene.analysis.nl.DutchStemmer. {{Example | In: âkanaal kanalenâ T-&gt;F: âkanaalâ, âkanalenâ Out: âkanalâ, âkanalâ EdgeNGramFilter This filter is very useful in matching substrings of particular terms in the index during query time. The string value Nigerian gets broken down to the following terms: Nigerian =&gt; "ni", "nig", "nige", "niger", "nigeri", "nigeria", "nigeria", "nigerian" FrenchStemFilter This is a Java filter written specifically for stemming the French language. It uses the Lucene class org.apache.lucene.analysis.fr.FrenchStemmer. In: âle chat, les chatsâ T-&gt;F: âleâ, âchatâ, âlesâ, âchatsâ Out: âleâ, âchatâ, âleâ, âchatâ ISOLatin1AccentFilter This filter replaces any accented characters in a token with the unaccented equivalent. This can increase recall by causing more matches. On the other hand, it can reduce precision because language-specific character differences may be lost.Characters in the ISO Latin 1 (ISO-8859-1) character set are recognized and letter case will be preserved, so that âÃâ becomes âAâ and âÃ¡â becomes âaâ. This filter only looks for accented characters, it does not filter out other non-ASCII characters. LowerCaseFilter Converts the letters to lowercases in each token. Â 'N.A.S.A.' to 'n.a.s.a.' NGramFilter Generates n-gram tokens of sizes in the given range RussianStemFilter This is a Java filter written specifically for stemming the Russian language. It uses the Lucene class org.apache.lucene.analysis.ru.RussianStemmer'. This filter only works with Russian lowercase letters. Tokens should first be passed through the Russian Lowercase Filter (above) for this filter to work reliably. In: âBjÃ¶rn ÃngstrÃ¶mâ T-&gt;F: âBjÃ¶rnâ, âÃngstrÃ¶mâ Out: âBjornâ, âAngstromâ ShingleFilter This filter constructs shingles, which are token n-grams, from the token stream. It combines runs of tokens into a single token. Factory class: solr.ShingleFilterFactory. A shingle size of four, do not include original token. In: âTo be, or not to be.â T&gt;F: âToâ(1), âbeâ(2), âorâ(3), ânotâ(4), âtoâ(5), âbeâ(6) Out: âTo beâ(1), âTo be orâ(1), âTo be or notâ(1), âbe orâ(2), âbe or notâ(2), âbe or not toâ(2), âor notâ(3), âor not toâ(3), âor not to beâ(3), ânot toâ(4), ânot to beâ(4), âto beâ(5)</value></field><field name="contentExact"><value>The following filters are provided with the OpenSearchServer analyzer StandardFilter This filter is designed to be fed by StandardTokenizer. It removes dots from acronyms and âs (apostrophe followed by S) from words with apostrophes. N.A.S.A. to NASA Cat's to Cats ChineseFilter This is a stop-word filter that passes Chinese characters through. DutchStemFilter This is a Java filter written specifically for stemming the Dutch language. It uses the Lucene class org.apache.lucene.analysis.nl.DutchStemmer. {{Example | In: âkanaal kanalenâ T-&gt;F: âkanaalâ, âkanalenâ Out: âkanalâ, âkanalâ EdgeNGramFilter This filter is very useful in matching substrings of particular terms in the index during query time. The string value Nigerian gets broken down to the following terms: Nigerian =&gt; "ni", "nig", "nige", "niger", "nigeri", "nigeria", "nigeria", "nigerian" FrenchStemFilter This is a Java filter written specifically for stemming the French language. It uses the Lucene class org.apache.lucene.analysis.fr.FrenchStemmer. In: âle chat, les chatsâ T-&gt;F: âleâ, âchatâ, âlesâ, âchatsâ Out: âleâ, âchatâ, âleâ, âchatâ ISOLatin1AccentFilter This filter replaces any accented characters in a token with the unaccented equivalent. This can increase recall by causing more matches. On the other hand, it can reduce precision because language-specific character differences may be lost.Characters in the ISO Latin 1 (ISO-8859-1) character set are recognized and letter case will be preserved, so that âÃâ becomes âAâ and âÃ¡â becomes âaâ. This filter only looks for accented characters, it does not filter out other non-ASCII characters. LowerCaseFilter Converts the letters to lowercases in each token. Â 'N.A.S.A.' to 'n.a.s.a.' NGramFilter Generates n-gram tokens of sizes in the given range RussianStemFilter This is a Java filter written specifically for stemming the Russian language. It uses the Lucene class org.apache.lucene.analysis.ru.RussianStemmer'. This filter only works with Russian lowercase letters. Tokens should first be passed through the Russian Lowercase Filter (above) for this filter to work reliably. In: âBjÃ¶rn ÃngstrÃ¶mâ T-&gt;F: âBjÃ¶rnâ, âÃngstrÃ¶mâ Out: âBjornâ, âAngstromâ ShingleFilter This filter constructs shingles, which are token n-grams, from the token stream. It combines runs of tokens into a single token. Factory class: solr.ShingleFilterFactory. A shingle size of four, do not include original token. In: âTo be, or not to be.â T&gt;F: âToâ(1), âbeâ(2), âorâ(3), ânotâ(4), âtoâ(5), âbeâ(6) Out: âTo beâ(1), âTo be orâ(1), âTo be or notâ(1), âbe orâ(2), âbe or notâ(2), âbe or not toâ(2), âor notâ(3), âor not toâ(3), âor not to beâ(3), ânot toâ(4), ânot to beâ(4), âto beâ(5)</value></field><field name="contentPhonetic"><value>The following filters are provided with the OpenSearchServer analyzer StandardFilter This filter is designed to be fed by StandardTokenizer. It removes dots from acronyms and âs (apostrophe followed by S) from words with apostrophes. N.A.S.A. to NASA Cat's to Cats ChineseFilter This is a stop-word filter that passes Chinese characters through. DutchStemFilter This is a Java filter written specifically for stemming the Dutch language. It uses the Lucene class org.apache.lucene.analysis.nl.DutchStemmer. {{Example | In: âkanaal kanalenâ T-&gt;F: âkanaalâ, âkanalenâ Out: âkanalâ, âkanalâ EdgeNGramFilter This filter is very useful in matching substrings of particular terms in the index during query time. The string value Nigerian gets broken down to the following terms: Nigerian =&gt; "ni", "nig", "nige", "niger", "nigeri", "nigeria", "nigeria", "nigerian" FrenchStemFilter This is a Java filter written specifically for stemming the French language. It uses the Lucene class org.apache.lucene.analysis.fr.FrenchStemmer. In: âle chat, les chatsâ T-&gt;F: âleâ, âchatâ, âlesâ, âchatsâ Out: âleâ, âchatâ, âleâ, âchatâ ISOLatin1AccentFilter This filter replaces any accented characters in a token with the unaccented equivalent. This can increase recall by causing more matches. On the other hand, it can reduce precision because language-specific character differences may be lost.Characters in the ISO Latin 1 (ISO-8859-1) character set are recognized and letter case will be preserved, so that âÃâ becomes âAâ and âÃ¡â becomes âaâ. This filter only looks for accented characters, it does not filter out other non-ASCII characters. LowerCaseFilter Converts the letters to lowercases in each token. Â 'N.A.S.A.' to 'n.a.s.a.' NGramFilter Generates n-gram tokens of sizes in the given range RussianStemFilter This is a Java filter written specifically for stemming the Russian language. It uses the Lucene class org.apache.lucene.analysis.ru.RussianStemmer'. This filter only works with Russian lowercase letters. Tokens should first be passed through the Russian Lowercase Filter (above) for this filter to work reliably. In: âBjÃ¶rn ÃngstrÃ¶mâ T-&gt;F: âBjÃ¶rnâ, âÃngstrÃ¶mâ Out: âBjornâ, âAngstromâ ShingleFilter This filter constructs shingles, which are token n-grams, from the token stream. It combines runs of tokens into a single token. Factory class: solr.ShingleFilterFactory. A shingle size of four, do not include original token. In: âTo be, or not to be.â T&gt;F: âToâ(1), âbeâ(2), âorâ(3), ânotâ(4), âtoâ(5), âbeâ(6) Out: âTo beâ(1), âTo be orâ(1), âTo be or notâ(1), âbe orâ(2), âbe or notâ(2), âbe or not toâ(2), âor notâ(3), âor not toâ(3), âor not to beâ(3), ânot toâ(4), ânot to beâ(4), âto beâ(5)</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Tokenizers</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Tokenizers</value></field><field name="autocomplete"><value>Tokenizers</value></field><field name="title"><value>Tokenizers</value></field><field name="titleExact"><value>Tokenizers</value></field><field name="titlePhonetic"><value>Tokenizers</value></field><field name="content"><value>Tokenizers Tokenizers demarcate and classify sections of a string of input characters. The resulting tokens are then passed on to parsers. OpenSearchServer supports the following tokenizers KeywordTokenizer LetterOrDigitTokenizerFactory NGramTokenizer EdgeNGramTokenizer StandardTokenizer WhitespaceTokenizer ChineseTokenizer RussianLetterTokenizer KeywordTokenizer A tokenizer of type keyword that emits the entire input as a single input. The following are settings that can be set for a keyword tokenizer type: Setting Description buffer_size Â The term buffer size. Defaults to 256. "http://example.com/I-am+example?Text=-Hello" =&gt; "http://example.com/I-am+example?Text=-Hello" LetterOrDigitTokenizerFactory Creates tokens consisting of strings of contiguous letters or digits. Â "I can't " =&gt; "I", "can", "t" NGramTokenizer When you select this type of tokenizer from the Tokenizer drop down list (See Choosing an Analyzer). Specify default minimum and maximum n-grams in Min gram size and Max gram sizerespectively. Specifying values for NGramTokenizer âbicycleâ =&gt; âbicyâ, âicycâ, âcyclâ, âycleâ, âbicycâ, âicyclâ, âcycleâ EdgeNGramTokenizer Tokenizes the input from an edge into n-grams of given size(s). you have to specify which side of the input the n-gram should be generated from. Select either front or back from Edge sidedrop down list. Specifying values for EdgeNGramTokenizer Â Nigerian =&gt; "ni", "nig", "nige", "niger", "nigeri", "nigeria", "nigeria", "nigerian" StandardTokenizer It is a grammar based tokenizer which, splits words at punctuation characters, removing punctuation. However, a dot thatâs not followed by whitespace is considered part of a token. It also splits words at hyphens, unless thereâs a number in the token, in which case the whole token is interpreted as a product number and is not split. It recognizes email addresses and internet hostnames as one token. Â  "How it works" =&gt; "how", "it", "works" WhitespaceTokenizer This type of tokenizer divides text at whitespace. Â "Open Search Server" =&gt; "Open", "Search", "Server" ChineseTokenizer This tokenizer breaks Chinese language text into tokens. Chinese is not a whitespace delimited language, so each Chinese character becomes a token. RussianLetterTokenizer This tokenizer breaks Russian language text into tokens.</value></field><field name="contentExact"><value>Tokenizers Tokenizers demarcate and classify sections of a string of input characters. The resulting tokens are then passed on to parsers. OpenSearchServer supports the following tokenizers KeywordTokenizer LetterOrDigitTokenizerFactory NGramTokenizer EdgeNGramTokenizer StandardTokenizer WhitespaceTokenizer ChineseTokenizer RussianLetterTokenizer KeywordTokenizer A tokenizer of type keyword that emits the entire input as a single input. The following are settings that can be set for a keyword tokenizer type: Setting Description buffer_size Â The term buffer size. Defaults to 256. "http://example.com/I-am+example?Text=-Hello" =&gt; "http://example.com/I-am+example?Text=-Hello" LetterOrDigitTokenizerFactory Creates tokens consisting of strings of contiguous letters or digits. Â "I can't " =&gt; "I", "can", "t" NGramTokenizer When you select this type of tokenizer from the Tokenizer drop down list (See Choosing an Analyzer). Specify default minimum and maximum n-grams in Min gram size and Max gram sizerespectively. Specifying values for NGramTokenizer âbicycleâ =&gt; âbicyâ, âicycâ, âcyclâ, âycleâ, âbicycâ, âicyclâ, âcycleâ EdgeNGramTokenizer Tokenizes the input from an edge into n-grams of given size(s). you have to specify which side of the input the n-gram should be generated from. Select either front or back from Edge sidedrop down list. Specifying values for EdgeNGramTokenizer Â Nigerian =&gt; "ni", "nig", "nige", "niger", "nigeri", "nigeria", "nigeria", "nigerian" StandardTokenizer It is a grammar based tokenizer which, splits words at punctuation characters, removing punctuation. However, a dot thatâs not followed by whitespace is considered part of a token. It also splits words at hyphens, unless thereâs a number in the token, in which case the whole token is interpreted as a product number and is not split. It recognizes email addresses and internet hostnames as one token. Â  "How it works" =&gt; "how", "it", "works" WhitespaceTokenizer This type of tokenizer divides text at whitespace. Â "Open Search Server" =&gt; "Open", "Search", "Server" ChineseTokenizer This tokenizer breaks Chinese language text into tokens. Chinese is not a whitespace delimited language, so each Chinese character becomes a token. RussianLetterTokenizer This tokenizer breaks Russian language text into tokens.</value></field><field name="contentPhonetic"><value>Tokenizers Tokenizers demarcate and classify sections of a string of input characters. The resulting tokens are then passed on to parsers. OpenSearchServer supports the following tokenizers KeywordTokenizer LetterOrDigitTokenizerFactory NGramTokenizer EdgeNGramTokenizer StandardTokenizer WhitespaceTokenizer ChineseTokenizer RussianLetterTokenizer KeywordTokenizer A tokenizer of type keyword that emits the entire input as a single input. The following are settings that can be set for a keyword tokenizer type: Setting Description buffer_size Â The term buffer size. Defaults to 256. "http://example.com/I-am+example?Text=-Hello" =&gt; "http://example.com/I-am+example?Text=-Hello" LetterOrDigitTokenizerFactory Creates tokens consisting of strings of contiguous letters or digits. Â "I can't " =&gt; "I", "can", "t" NGramTokenizer When you select this type of tokenizer from the Tokenizer drop down list (See Choosing an Analyzer). Specify default minimum and maximum n-grams in Min gram size and Max gram sizerespectively. Specifying values for NGramTokenizer âbicycleâ =&gt; âbicyâ, âicycâ, âcyclâ, âycleâ, âbicycâ, âicyclâ, âcycleâ EdgeNGramTokenizer Tokenizes the input from an edge into n-grams of given size(s). you have to specify which side of the input the n-gram should be generated from. Select either front or back from Edge sidedrop down list. Specifying values for EdgeNGramTokenizer Â Nigerian =&gt; "ni", "nig", "nige", "niger", "nigeri", "nigeria", "nigeria", "nigerian" StandardTokenizer It is a grammar based tokenizer which, splits words at punctuation characters, removing punctuation. However, a dot thatâs not followed by whitespace is considered part of a token. It also splits words at hyphens, unless thereâs a number in the token, in which case the whole token is interpreted as a product number and is not split. It recognizes email addresses and internet hostnames as one token. Â  "How it works" =&gt; "how", "it", "works" WhitespaceTokenizer This type of tokenizer divides text at whitespace. Â "Open Search Server" =&gt; "Open", "Search", "Server" ChineseTokenizer This tokenizer breaks Chinese language text into tokens. Chinese is not a whitespace delimited language, so each Chinese character becomes a token. RussianLetterTokenizer This tokenizer breaks Russian language text into tokens.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Testing+an+analyzer</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Testing+an+analyzer</value></field><field name="autocomplete"><value>Testing an analyzer</value></field><field name="title"><value>Testing an analyzer</value></field><field name="titleExact"><value>Testing an analyzer</value></field><field name="titlePhonetic"><value>Testing an analyzer</value></field><field name="content"><value>To test an analyzer Type the text to be analyzed inÂ Enter a text to analyze. For example, type 'content'. SelectÂ QueryÂ orÂ IndexationÂ from the adjacent drop down list. ClickÂ Test. Analyzer test result Where, 0 is the start position (in characters) in the original indexed test. 7 is the end position (in characters) in the original indexed test. 1 is the position increment (in terms).</value></field><field name="contentExact"><value>To test an analyzer Type the text to be analyzed inÂ Enter a text to analyze. For example, type 'content'. SelectÂ QueryÂ orÂ IndexationÂ from the adjacent drop down list. ClickÂ Test. Analyzer test result Where, 0 is the start position (in characters) in the original indexed test. 7 is the end position (in characters) in the original indexed test. 1 is the position increment (in terms).</value></field><field name="contentPhonetic"><value>To test an analyzer Type the text to be analyzed inÂ Enter a text to analyze. For example, type 'content'. SelectÂ QueryÂ orÂ IndexationÂ from the adjacent drop down list. ClickÂ Test. Analyzer test result Where, 0 is the start position (in characters) in the original indexed test. 7 is the end position (in characters) in the original indexed test. 1 is the position increment (in terms).</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+new+analyzer</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+new+analyzer</value></field><field name="autocomplete"><value>Creating a new analyzer</value></field><field name="title"><value>Creating a new analyzer</value></field><field name="titleExact"><value>Creating a new analyzer</value></field><field name="titlePhonetic"><value>Creating a new analyzer</value></field><field name="content"><value>To create a new analyzer 1) From theÂ Create a new analyzerÂ section, type the name for the new analyzer inÂ Name. 2) Select the language for the analyzer from theÂ LanguageÂ drop-down list. The following languages are available: UNDEFINED (no language specified) CHINESE DANISH DUTCH ENGLISH FINNISH FRENCH GERMAN HUNGARIAN ITALIAN JAPANESE KOREAN NORWEGIAN PORTUGUESE ROMANIAN RUSSIAN SPANISH SWEDISH TURKISH 3) Select a tokenizer from the Tokenizer drop down list (Also see Tokenizers). The following tokenizers are available: KeywordTokenizer LetterOrDigitTokenizerFactory NGramTokenizer EdgeNGramTokenizer StandardTokenizer WhitespaceTokenizer ChineseTokenizer RussianLetterTokenizer 4) Select a filter from theÂ FilterÂ drop down list. The following filters are available: StandardFilter ChineseFilter DutchStemFilter EdgeNGramFilter FrenchStemFilter ISOLatin1AccentFilter LowerCaseFilter NGramFilter RussianStemFilter ShingleFilter SnowballDanishFilter 5) Select one of the following task from theÂ ScopeÂ drop-down list: Query Indexation Query and Indexation Disable 6) ClickÂ Â to add a filter to the filter list. ClickÂ Â buttons to move a filter up or down in the filter list. 7) ClickÂ Create. An analyzer is created.</value></field><field name="contentExact"><value>To create a new analyzer 1) From theÂ Create a new analyzerÂ section, type the name for the new analyzer inÂ Name. 2) Select the language for the analyzer from theÂ LanguageÂ drop-down list. The following languages are available: UNDEFINED (no language specified) CHINESE DANISH DUTCH ENGLISH FINNISH FRENCH GERMAN HUNGARIAN ITALIAN JAPANESE KOREAN NORWEGIAN PORTUGUESE ROMANIAN RUSSIAN SPANISH SWEDISH TURKISH 3) Select a tokenizer from the Tokenizer drop down list (Also see Tokenizers). The following tokenizers are available: KeywordTokenizer LetterOrDigitTokenizerFactory NGramTokenizer EdgeNGramTokenizer StandardTokenizer WhitespaceTokenizer ChineseTokenizer RussianLetterTokenizer 4) Select a filter from theÂ FilterÂ drop down list. The following filters are available: StandardFilter ChineseFilter DutchStemFilter EdgeNGramFilter FrenchStemFilter ISOLatin1AccentFilter LowerCaseFilter NGramFilter RussianStemFilter ShingleFilter SnowballDanishFilter 5) Select one of the following task from theÂ ScopeÂ drop-down list: Query Indexation Query and Indexation Disable 6) ClickÂ Â to add a filter to the filter list. ClickÂ Â buttons to move a filter up or down in the filter list. 7) ClickÂ Create. An analyzer is created.</value></field><field name="contentPhonetic"><value>To create a new analyzer 1) From theÂ Create a new analyzerÂ section, type the name for the new analyzer inÂ Name. 2) Select the language for the analyzer from theÂ LanguageÂ drop-down list. The following languages are available: UNDEFINED (no language specified) CHINESE DANISH DUTCH ENGLISH FINNISH FRENCH GERMAN HUNGARIAN ITALIAN JAPANESE KOREAN NORWEGIAN PORTUGUESE ROMANIAN RUSSIAN SPANISH SWEDISH TURKISH 3) Select a tokenizer from the Tokenizer drop down list (Also see Tokenizers). The following tokenizers are available: KeywordTokenizer LetterOrDigitTokenizerFactory NGramTokenizer EdgeNGramTokenizer StandardTokenizer WhitespaceTokenizer ChineseTokenizer RussianLetterTokenizer 4) Select a filter from theÂ FilterÂ drop down list. The following filters are available: StandardFilter ChineseFilter DutchStemFilter EdgeNGramFilter FrenchStemFilter ISOLatin1AccentFilter LowerCaseFilter NGramFilter RussianStemFilter ShingleFilter SnowballDanishFilter 5) Select one of the following task from theÂ ScopeÂ drop-down list: Query Indexation Query and Indexation Disable 6) ClickÂ Â to add a filter to the filter list. ClickÂ Â buttons to move a filter up or down in the filter list. 7) ClickÂ Create. An analyzer is created.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Analyzer</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Analyzer</value></field><field name="autocomplete"><value>Analyzer</value></field><field name="title"><value>Analyzer</value></field><field name="titleExact"><value>Analyzer</value></field><field name="titlePhonetic"><value>Analyzer</value></field><field name="content"><value>Analyzers are components that pre-process input text at index time and/or at search time.To view the contents of the analyzer:1) Click on the Analyzers tab. Analyzers tabÂ  2) There are three sections in the analyzer tab Choose an analyzer - You can select an already created analyzer and edit or delete it. Create a new analyzer Analyzer test</value></field><field name="contentExact"><value>Analyzers are components that pre-process input text at index time and/or at search time.To view the contents of the analyzer:1) Click on the Analyzers tab. Analyzers tabÂ  2) There are three sections in the analyzer tab Choose an analyzer - You can select an already created analyzer and edit or delete it. Create a new analyzer Analyzer test</value></field><field name="contentPhonetic"><value>Analyzers are components that pre-process input text at index time and/or at search time.To view the contents of the analyzer:1) Click on the Analyzers tab. Analyzers tabÂ  2) There are three sections in the analyzer tab Choose an analyzer - You can select an already created analyzer and edit or delete it. Create a new analyzer Analyzer test</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Choosing+an+analyzer</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Choosing+an+analyzer</value></field><field name="autocomplete"><value>Choosing an analyzer</value></field><field name="title"><value>Choosing an analyzer</value></field><field name="titleExact"><value>Choosing an analyzer</value></field><field name="titlePhonetic"><value>Choosing an analyzer</value></field><field name="content"><value>To choose/editing an analyzer 1) Select an analyzer from the first drop-down list. Its corresponding language is displayed in the adjacent drop down list. For example, you selected TextAnalyzer.Choosing an analyzer 2) To edit the contents of the selected analyzer, click Edit. The analyzer section expands to display the contents of the sub-tab Editing analyzer: TextAnalyzer - UNDEFINED. Editing an analyzer You can not change the name and language of an existing analyzer. You can only change its tokenizer and token filters. 3) Select the desired tokenizer from the Tokenizer drop-down list.4) Select the filter and scope from the Filter and Scope drop-down lists respectively.5) Click Save.6) Click Cancel to return to the main analyzer tab.</value></field><field name="contentExact"><value>To choose/editing an analyzer 1) Select an analyzer from the first drop-down list. Its corresponding language is displayed in the adjacent drop down list. For example, you selected TextAnalyzer.Choosing an analyzer 2) To edit the contents of the selected analyzer, click Edit. The analyzer section expands to display the contents of the sub-tab Editing analyzer: TextAnalyzer - UNDEFINED. Editing an analyzer You can not change the name and language of an existing analyzer. You can only change its tokenizer and token filters. 3) Select the desired tokenizer from the Tokenizer drop-down list.4) Select the filter and scope from the Filter and Scope drop-down lists respectively.5) Click Save.6) Click Cancel to return to the main analyzer tab.</value></field><field name="contentPhonetic"><value>To choose/editing an analyzer 1) Select an analyzer from the first drop-down list. Its corresponding language is displayed in the adjacent drop down list. For example, you selected TextAnalyzer.Choosing an analyzer 2) To edit the contents of the selected analyzer, click Edit. The analyzer section expands to display the contents of the sub-tab Editing analyzer: TextAnalyzer - UNDEFINED. Editing an analyzer You can not change the name and language of an existing analyzer. You can only change its tokenizer and token filters. 3) Select the desired tokenizer from the Tokenizer drop-down list.4) Select the filter and scope from the Filter and Scope drop-down lists respectively.5) Click Save.6) Click Cancel to return to the main analyzer tab.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+field+for+a+schema</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+field+for+a+schema</value></field><field name="autocomplete"><value>Creating a field for a schema</value></field><field name="title"><value>Creating a field for a schema</value></field><field name="titleExact"><value>Creating a field for a schema</value></field><field name="titlePhonetic"><value>Creating a field for a schema</value></field><field name="content"><value>The attributes of a field can be defined through the parameters passed via OpenSearchServer APIs, or through the OpenSearchServer web interface ("Schema" tab, "Fields" sub-tab). Default fields are listed under the Fields tab, if you have selected the template as Web crawler or File crawler. In case, you selected the template as Empty index, then you have to create the fields and map them. The web interface provides you with a table of the existing fields and their characteristics. To create a field By default, the Schema tab opens theÂ FieldÂ tab. If the field tab is not open, click on theÂ FieldÂ tab. To map the default fields, select a field fromÂ Select default field listÂ and then select a corresponding field to be mapped from Select unique field. Type a name in Field. SelectÂ yesÂ orÂ noÂ from theÂ IndexedÂ drop down list. If you selectÂ yes, the field is included within the index, and will be searchable. If you selectÂ no, the field is not indexed and it will not be searchable. SelectÂ yes,Â no, orÂ compressÂ from theÂ StoredÂ dropdown list. yesÂ - The content is stored by the OpenSearchServer engine. This is usually used for short fields, where compression would be overkill. compressÂ - The content is stored in compressed form. This option is suitable for voluminous text. noÂ - The content is not stored by the OpenSearchServer engine.This choice is usually made because this content is already stored in another field, and duplicating would be a waste of resources. SelectÂ noÂ orÂ positions_offsetsÂ fromÂ TermVectorÂ drop down list. If you select no, then term vectors are not recorded. This prevents the use #snippets in this field. If you select positions_offsets, then position and offsets of the words/token are recorded. This allows the use of snippets in this field. SelectÂ StandardAnalyzerÂ orÂ TextAnalyzerÂ from theÂ Analyzerdrop down list. StandardAnalyzerÂ - uses a standard tokeniser, normalises the text into lower case, and remove all diacritics. TextAnalyzerÂ - it can accept one of the languages supported by OpenSearchServer. Click Add. The field is created and listed under List of existing fields and their settings.</value></field><field name="contentExact"><value>The attributes of a field can be defined through the parameters passed via OpenSearchServer APIs, or through the OpenSearchServer web interface ("Schema" tab, "Fields" sub-tab). Default fields are listed under the Fields tab, if you have selected the template as Web crawler or File crawler. In case, you selected the template as Empty index, then you have to create the fields and map them. The web interface provides you with a table of the existing fields and their characteristics. To create a field By default, the Schema tab opens theÂ FieldÂ tab. If the field tab is not open, click on theÂ FieldÂ tab. To map the default fields, select a field fromÂ Select default field listÂ and then select a corresponding field to be mapped from Select unique field. Type a name in Field. SelectÂ yesÂ orÂ noÂ from theÂ IndexedÂ drop down list. If you selectÂ yes, the field is included within the index, and will be searchable. If you selectÂ no, the field is not indexed and it will not be searchable. SelectÂ yes,Â no, orÂ compressÂ from theÂ StoredÂ dropdown list. yesÂ - The content is stored by the OpenSearchServer engine. This is usually used for short fields, where compression would be overkill. compressÂ - The content is stored in compressed form. This option is suitable for voluminous text. noÂ - The content is not stored by the OpenSearchServer engine.This choice is usually made because this content is already stored in another field, and duplicating would be a waste of resources. SelectÂ noÂ orÂ positions_offsetsÂ fromÂ TermVectorÂ drop down list. If you select no, then term vectors are not recorded. This prevents the use #snippets in this field. If you select positions_offsets, then position and offsets of the words/token are recorded. This allows the use of snippets in this field. SelectÂ StandardAnalyzerÂ orÂ TextAnalyzerÂ from theÂ Analyzerdrop down list. StandardAnalyzerÂ - uses a standard tokeniser, normalises the text into lower case, and remove all diacritics. TextAnalyzerÂ - it can accept one of the languages supported by OpenSearchServer. Click Add. The field is created and listed under List of existing fields and their settings.</value></field><field name="contentPhonetic"><value>The attributes of a field can be defined through the parameters passed via OpenSearchServer APIs, or through the OpenSearchServer web interface ("Schema" tab, "Fields" sub-tab). Default fields are listed under the Fields tab, if you have selected the template as Web crawler or File crawler. In case, you selected the template as Empty index, then you have to create the fields and map them. The web interface provides you with a table of the existing fields and their characteristics. To create a field By default, the Schema tab opens theÂ FieldÂ tab. If the field tab is not open, click on theÂ FieldÂ tab. To map the default fields, select a field fromÂ Select default field listÂ and then select a corresponding field to be mapped from Select unique field. Type a name in Field. SelectÂ yesÂ orÂ noÂ from theÂ IndexedÂ drop down list. If you selectÂ yes, the field is included within the index, and will be searchable. If you selectÂ no, the field is not indexed and it will not be searchable. SelectÂ yes,Â no, orÂ compressÂ from theÂ StoredÂ dropdown list. yesÂ - The content is stored by the OpenSearchServer engine. This is usually used for short fields, where compression would be overkill. compressÂ - The content is stored in compressed form. This option is suitable for voluminous text. noÂ - The content is not stored by the OpenSearchServer engine.This choice is usually made because this content is already stored in another field, and duplicating would be a waste of resources. SelectÂ noÂ orÂ positions_offsetsÂ fromÂ TermVectorÂ drop down list. If you select no, then term vectors are not recorded. This prevents the use #snippets in this field. If you select positions_offsets, then position and offsets of the words/token are recorded. This allows the use of snippets in this field. SelectÂ StandardAnalyzerÂ orÂ TextAnalyzerÂ from theÂ Analyzerdrop down list. StandardAnalyzerÂ - uses a standard tokeniser, normalises the text into lower case, and remove all diacritics. TextAnalyzerÂ - it can accept one of the languages supported by OpenSearchServer. Click Add. The field is created and listed under List of existing fields and their settings.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Editing+the+schema</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Editing+the+schema</value></field><field name="autocomplete"><value>Editing the schema</value></field><field name="title"><value>Editing the schema</value></field><field name="titleExact"><value>Editing the schema</value></field><field name="titlePhonetic"><value>Editing the schema</value></field><field name="content"><value>A schema describes the structure of an index. You can create a schema using the Schema tab (See the screen shot below). A schema for an index is defined by the following: Fields Analyzers Parser list Stop words Synonyms Schema</value></field><field name="contentExact"><value>A schema describes the structure of an index. You can create a schema using the Schema tab (See the screen shot below). A schema for an index is defined by the following: Fields Analyzers Parser list Stop words Synonyms Schema</value></field><field name="contentPhonetic"><value>A schema describes the structure of an index. You can create a schema using the Schema tab (See the screen shot below). A schema for an index is defined by the following: Fields Analyzers Parser list Stop words Synonyms Schema</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Deleting+an+index</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Deleting+an+index</value></field><field name="autocomplete"><value>Deleting an index</value></field><field name="title"><value>Deleting an index</value></field><field name="titleExact"><value>Deleting an index</value></field><field name="titlePhonetic"><value>Deleting an index</value></field><field name="content"><value>Click . A dialog box opens, prompting you to take action.Click Yes.</value></field><field name="contentExact"><value>Click . A dialog box opens, prompting you to take action.Click Yes.</value></field><field name="contentPhonetic"><value>Click . A dialog box opens, prompting you to take action.Click Yes.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Web+crawler+template</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Web+crawler+template</value></field><field name="autocomplete"><value>Web crawler template</value></field><field name="title"><value>Web crawler template</value></field><field name="titleExact"><value>Web crawler template</value></field><field name="titlePhonetic"><value>Web crawler template</value></field><field name="content"><value>This is an index with predefined fields, analysers and parsers. This template is suitable for web crawling and indexation. When you select the template as Web crawler, the default settings for the web crawler are enabled such as default fields under Schema and web query template. The following default fields are listed under Schema&gt;Fields tab: Web crawler default fields lang title titleExact content contentExact contentBaseType url urlSplit urlExact host subhost The details for each default field such as Indexation of content, Storage of queries, TermVector, and Analyzer can be viewed from the table listed under List of existing fields and their settings (see the screen shot below). List of default fields and their properties Â </value></field><field name="contentExact"><value>This is an index with predefined fields, analysers and parsers. This template is suitable for web crawling and indexation. When you select the template as Web crawler, the default settings for the web crawler are enabled such as default fields under Schema and web query template. The following default fields are listed under Schema&gt;Fields tab: Web crawler default fields lang title titleExact content contentExact contentBaseType url urlSplit urlExact host subhost The details for each default field such as Indexation of content, Storage of queries, TermVector, and Analyzer can be viewed from the table listed under List of existing fields and their settings (see the screen shot below). List of default fields and their properties Â </value></field><field name="contentPhonetic"><value>This is an index with predefined fields, analysers and parsers. This template is suitable for web crawling and indexation. When you select the template as Web crawler, the default settings for the web crawler are enabled such as default fields under Schema and web query template. The following default fields are listed under Schema&gt;Fields tab: Web crawler default fields lang title titleExact content contentExact contentBaseType url urlSplit urlExact host subhost The details for each default field such as Indexation of content, Storage of queries, TermVector, and Analyzer can be viewed from the table listed under List of existing fields and their settings (see the screen shot below). List of default fields and their properties Â </value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/File+crawler+template</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/File+crawler+template</value></field><field name="autocomplete"><value>File crawler template</value></field><field name="title"><value>File crawler template</value></field><field name="titleExact"><value>File crawler template</value></field><field name="titlePhonetic"><value>File crawler template</value></field><field name="content"><value>This is an index with predefined fields, analyzers, and parsers. This template is suitable for parsing and indexing files (.doc, .pdf, etc.). When you select the template as File crawler, default settings for the file crawler are enabled such as default fields under Schema and file query templates (fileSearch and Search). The default fields that are listed with the file crawler template are listed below: content contentExact crawlDate directory fileSystemDate lang metaDescription metaKeywords subDirectory title titleExact url</value></field><field name="contentExact"><value>This is an index with predefined fields, analyzers, and parsers. This template is suitable for parsing and indexing files (.doc, .pdf, etc.). When you select the template as File crawler, default settings for the file crawler are enabled such as default fields under Schema and file query templates (fileSearch and Search). The default fields that are listed with the file crawler template are listed below: content contentExact crawlDate directory fileSystemDate lang metaDescription metaKeywords subDirectory title titleExact url</value></field><field name="contentPhonetic"><value>This is an index with predefined fields, analyzers, and parsers. This template is suitable for parsing and indexing files (.doc, .pdf, etc.). When you select the template as File crawler, default settings for the file crawler are enabled such as default fields under Schema and file query templates (fileSearch and Search). The default fields that are listed with the file crawler template are listed below: content contentExact crawlDate directory fileSystemDate lang metaDescription metaKeywords subDirectory title titleExact url</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Empty+index</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Empty+index</value></field><field name="autocomplete"><value>Empty index</value></field><field name="title"><value>Empty index</value></field><field name="titleExact"><value>Empty index</value></field><field name="titlePhonetic"><value>Empty index</value></field><field name="content"><value>When you select the template asÂ Empty index, the Schema and Query templates will be empty; you have to create a schema and write queries afresh. This template selection is recommended for the advance OpenSearchServer user. An example screenshot of an empty index is shown below: No default fields or unique fields are present in the empty index. You need toÂ create the fieldsÂ from Create a new field section. When you create new fields, they will be reflected under theÂ Select default fieldÂ andÂ Select unique fieldÂ respectively.</value></field><field name="contentExact"><value>When you select the template asÂ Empty index, the Schema and Query templates will be empty; you have to create a schema and write queries afresh. This template selection is recommended for the advance OpenSearchServer user. An example screenshot of an empty index is shown below: No default fields or unique fields are present in the empty index. You need toÂ create the fieldsÂ from Create a new field section. When you create new fields, they will be reflected under theÂ Select default fieldÂ andÂ Select unique fieldÂ respectively.</value></field><field name="contentPhonetic"><value>When you select the template asÂ Empty index, the Schema and Query templates will be empty; you have to create a schema and write queries afresh. This template selection is recommended for the advance OpenSearchServer user. An example screenshot of an empty index is shown below: No default fields or unique fields are present in the empty index. You need toÂ create the fieldsÂ from Create a new field section. When you create new fields, they will be reflected under theÂ Select default fieldÂ andÂ Select unique fieldÂ respectively.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Index+templates</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Index+templates</value></field><field name="autocomplete"><value>Index templates</value></field><field name="title"><value>Index templates</value></field><field name="titleExact"><value>Index templates</value></field><field name="titlePhonetic"><value>Index templates</value></field><field name="content"><value>An Index template is a pre-designed template based on which you can create an index. The following are three types of templates available in OpenSearchServer: Empty index Web crawler File crawler</value></field><field name="contentExact"><value>An Index template is a pre-designed template based on which you can create an index. The following are three types of templates available in OpenSearchServer: Empty index Web crawler File crawler</value></field><field name="contentPhonetic"><value>An Index template is a pre-designed template based on which you can create an index. The following are three types of templates available in OpenSearchServer: Empty index Web crawler File crawler</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+new+index</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Creating+a+new+index</value></field><field name="autocomplete"><value>Creating a new index</value></field><field name="title"><value>Creating a new index</value></field><field name="titleExact"><value>Creating a new index</value></field><field name="titlePhonetic"><value>Creating a new index</value></field><field name="content"><value>To create an index 1) Click on the Indicestab to display its contents. 2) Type the name you want to give the index in Index name.3) Select a template for the index from Template drop down list (See Indexing#Index Templates).You can either select an Indexing Empty index or you can choose one of the following templates: Web crawler File crawler 4) Click Create. The moment an index is created, its related tabs are created. The following tabs are created: Schema Query Update Delete Crawler Scheduler Runtime Replication Video Demonstration Follow this link to watch the video in HD: http://www.youtube.com/watch?v=xUCJXATdeIY</value></field><field name="contentExact"><value>To create an index 1) Click on the Indicestab to display its contents. 2) Type the name you want to give the index in Index name.3) Select a template for the index from Template drop down list (See Indexing#Index Templates).You can either select an Indexing Empty index or you can choose one of the following templates: Web crawler File crawler 4) Click Create. The moment an index is created, its related tabs are created. The following tabs are created: Schema Query Update Delete Crawler Scheduler Runtime Replication Video Demonstration Follow this link to watch the video in HD: http://www.youtube.com/watch?v=xUCJXATdeIY</value></field><field name="contentPhonetic"><value>To create an index 1) Click on the Indicestab to display its contents. 2) Type the name you want to give the index in Index name.3) Select a template for the index from Template drop down list (See Indexing#Index Templates).You can either select an Indexing Empty index or you can choose one of the following templates: Web crawler File crawler 4) Click Create. The moment an index is created, its related tabs are created. The following tabs are created: Schema Query Update Delete Crawler Scheduler Runtime Replication Video Demonstration Follow this link to watch the video in HD: http://www.youtube.com/watch?v=xUCJXATdeIY</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Indices+list</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Indices+list</value></field><field name="autocomplete"><value>Indices list</value></field><field name="title"><value>Indices list</value></field><field name="titleExact"><value>Indices list</value></field><field name="titlePhonetic"><value>Indices list</value></field><field name="content"><value>Indices List The created index or indices are listed under List of existing indices - click on an index to work with it. The following information is displayed for the indices in the list:Â Index nameÂ - all the names of the created indices are listed under this column. Crawl StatusÂ - This column displays the status of the web, database, or file crawler attached with the index. You can change the parameters of the crawler from the Crawler tab. InformationÂ - This column displays information about an index, such as Last Modified Date and Size.</value></field><field name="contentExact"><value>Indices List The created index or indices are listed under List of existing indices - click on an index to work with it. The following information is displayed for the indices in the list:Â Index nameÂ - all the names of the created indices are listed under this column. Crawl StatusÂ - This column displays the status of the web, database, or file crawler attached with the index. You can change the parameters of the crawler from the Crawler tab. InformationÂ - This column displays information about an index, such as Last Modified Date and Size.</value></field><field name="contentPhonetic"><value>Indices List The created index or indices are listed under List of existing indices - click on an index to work with it. The following information is displayed for the indices in the list:Â Index nameÂ - all the names of the created indices are listed under this column. Crawl StatusÂ - This column displays the status of the web, database, or file crawler attached with the index. You can change the parameters of the crawler from the Crawler tab. InformationÂ - This column displays information about an index, such as Last Modified Date and Size.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Indexing</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Indexing</value></field><field name="autocomplete"><value>Indexing</value></field><field name="title"><value>Indexing</value></field><field name="titleExact"><value>Indexing</value></field><field name="titlePhonetic"><value>Indexing</value></field><field name="content"><value>An index is created and stored to optimize speed and performance in finding relevant documents for a search query. Without a stored index, the search engine would scan every document in the corpus, which would require considerable time and computing power. Open Search Server provides the functionality to create, store, save, and reuse predefined indexes. The Index tab where you can define, save and load various indexes is shown below:</value></field><field name="contentExact"><value>An index is created and stored to optimize speed and performance in finding relevant documents for a search query. Without a stored index, the search engine would scan every document in the corpus, which would require considerable time and computing power. Open Search Server provides the functionality to create, store, save, and reuse predefined indexes. The Index tab where you can define, save and load various indexes is shown below:</value></field><field name="contentPhonetic"><value>An index is created and stored to optimize speed and performance in finding relevant documents for a search query. Without a stored index, the search engine would scan every document in the corpus, which would require considerable time and computing power. Open Search Server provides the functionality to create, store, save, and reuse predefined indexes. The Index tab where you can define, save and load various indexes is shown below:</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Understanding+the+main+window</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Understanding+the+main+window</value></field><field name="autocomplete"><value>Understanding the main window</value></field><field name="title"><value>Understanding the main window</value></field><field name="titleExact"><value>Understanding the main window</value></field><field name="titlePhonetic"><value>Understanding the main window</value></field><field name="content"><value>Â  OpenSearchServer main Window The main user interface of OpenSearchServer lets you create an Index or perform related tasks sequentially. The main window opens when you launch the Tomcat server and access the localhost from your browser (See Downloading and running OpenSearchServer).The following is a screenshot of main window: All the labels are described sequentially. Software build information The software build information is displayed at the top left and it includes the following: Release version Phase of the build Revision Number Build Number Example: v1.2.1-beta-rev987-build535 Links to OpenSearchServer website and wiki The following links are located at the top right of the OpenSearchServer main window: Visit the OpenSearchServer web site - Click this link to open OpenSearchServer's website: http://www.open-search-server.com/. Wiki documentation - Click this link to open the OpenSearchServer documentation on wiki: http://www.open-search-server.com/wiki/doc/index.php Main Window Tabs There are two tabs in the main window, namely, Indices - Create an Index from this tab. Privileges - Create a user and assign privileges for an index.</value></field><field name="contentExact"><value>Â  OpenSearchServer main Window The main user interface of OpenSearchServer lets you create an Index or perform related tasks sequentially. The main window opens when you launch the Tomcat server and access the localhost from your browser (See Downloading and running OpenSearchServer).The following is a screenshot of main window: All the labels are described sequentially. Software build information The software build information is displayed at the top left and it includes the following: Release version Phase of the build Revision Number Build Number Example: v1.2.1-beta-rev987-build535 Links to OpenSearchServer website and wiki The following links are located at the top right of the OpenSearchServer main window: Visit the OpenSearchServer web site - Click this link to open OpenSearchServer's website: http://www.open-search-server.com/. Wiki documentation - Click this link to open the OpenSearchServer documentation on wiki: http://www.open-search-server.com/wiki/doc/index.php Main Window Tabs There are two tabs in the main window, namely, Indices - Create an Index from this tab. Privileges - Create a user and assign privileges for an index.</value></field><field name="contentPhonetic"><value>Â  OpenSearchServer main Window The main user interface of OpenSearchServer lets you create an Index or perform related tasks sequentially. The main window opens when you launch the Tomcat server and access the localhost from your browser (See Downloading and running OpenSearchServer).The following is a screenshot of main window: All the labels are described sequentially. Software build information The software build information is displayed at the top left and it includes the following: Release version Phase of the build Revision Number Build Number Example: v1.2.1-beta-rev987-build535 Links to OpenSearchServer website and wiki The following links are located at the top right of the OpenSearchServer main window: Visit the OpenSearchServer web site - Click this link to open OpenSearchServer's website: http://www.open-search-server.com/. Wiki documentation - Click this link to open the OpenSearchServer documentation on wiki: http://www.open-search-server.com/wiki/doc/index.php Main Window Tabs There are two tabs in the main window, namely, Indices - Create an Index from this tab. Privileges - Create a user and assign privileges for an index.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Running+OpenSearchServer+on+Mac+OS</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Running+OpenSearchServer+on+Mac+OS</value></field><field name="autocomplete"><value>Running OpenSearchServer on Mac OS</value></field><field name="title"><value>Running OpenSearchServer on Mac OS</value></field><field name="titleExact"><value>Running OpenSearchServer on Mac OS</value></field><field name="titlePhonetic"><value>Running OpenSearchServer on Mac OS</value></field><field name="content"><value>Prerequisites Make sure that you have the following software installed before you run OpenSearchServer on Windows:Java version 5 or later Steps for running OpenSearchServer on Apple Macintosh Open the Terminal application, which is in the Utilities folder within the Applications folder of your Mac.Using the Terminal, go to your newly-downloaded OpenSearchServer folder.Once there, launch the Start application by typing in ./start.sh.</value></field><field name="contentExact"><value>Prerequisites Make sure that you have the following software installed before you run OpenSearchServer on Windows:Java version 5 or later Steps for running OpenSearchServer on Apple Macintosh Open the Terminal application, which is in the Utilities folder within the Applications folder of your Mac.Using the Terminal, go to your newly-downloaded OpenSearchServer folder.Once there, launch the Start application by typing in ./start.sh.</value></field><field name="contentPhonetic"><value>Prerequisites Make sure that you have the following software installed before you run OpenSearchServer on Windows:Java version 5 or later Steps for running OpenSearchServer on Apple Macintosh Open the Terminal application, which is in the Utilities folder within the Applications folder of your Mac.Using the Terminal, go to your newly-downloaded OpenSearchServer folder.Once there, launch the Start application by typing in ./start.sh.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Running+OpenSearchServer+on+Windows</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Running+OpenSearchServer+on+Windows</value></field><field name="autocomplete"><value>Running OpenSearchServer on Windows</value></field><field name="title"><value>Running OpenSearchServer on Windows</value></field><field name="titleExact"><value>Running OpenSearchServer on Windows</value></field><field name="titlePhonetic"><value>Running OpenSearchServer on Windows</value></field><field name="content"><value>Prerequisites Make sure that you have the following software installed before you run OpenSearchServer on Windows:Java version 5 or later -&gt; http://www.oracle.com/technetwork/java/javase/downloads/index.html Steps for running OpenSearchServer on Windowsy Open open-search-server folder to view its contents Double-click Start.bat to open it. Tomcat server is launched Open the browser and type 'http://localhost:8080' in the address bar. The OpenSearchServer main window opens Video Demonstration</value></field><field name="contentExact"><value>Prerequisites Make sure that you have the following software installed before you run OpenSearchServer on Windows:Java version 5 or later -&gt; http://www.oracle.com/technetwork/java/javase/downloads/index.html Steps for running OpenSearchServer on Windowsy Open open-search-server folder to view its contents Double-click Start.bat to open it. Tomcat server is launched Open the browser and type 'http://localhost:8080' in the address bar. The OpenSearchServer main window opens Video Demonstration</value></field><field name="contentPhonetic"><value>Prerequisites Make sure that you have the following software installed before you run OpenSearchServer on Windows:Java version 5 or later -&gt; http://www.oracle.com/technetwork/java/javase/downloads/index.html Steps for running OpenSearchServer on Windowsy Open open-search-server folder to view its contents Double-click Start.bat to open it. Tomcat server is launched Open the browser and type 'http://localhost:8080' in the address bar. The OpenSearchServer main window opens Video Demonstration</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Verifying+Java</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Verifying+Java</value></field><field name="autocomplete"><value>Verifying Java</value></field><field name="title"><value>Verifying Java</value></field><field name="titleExact"><value>Verifying Java</value></field><field name="titlePhonetic"><value>Verifying Java</value></field><field name="content"><value>Type this website address in your browser's address bar: http://www.java.com/en/download/installed.jsp Click Verify Java version button. Verifying Installation screen opens The verification results are displayed. If you don't have the recommended version installed, you are given the opportunity to download it Â  Note: If the Verification results web page states that you don't have any Java software installed, please install it.</value></field><field name="contentExact"><value>Type this website address in your browser's address bar: http://www.java.com/en/download/installed.jsp Click Verify Java version button. Verifying Installation screen opens The verification results are displayed. If you don't have the recommended version installed, you are given the opportunity to download it Â  Note: If the Verification results web page states that you don't have any Java software installed, please install it.</value></field><field name="contentPhonetic"><value>Type this website address in your browser's address bar: http://www.java.com/en/download/installed.jsp Click Verify Java version button. Verifying Installation screen opens The verification results are displayed. If you don't have the recommended version installed, you are given the opportunity to download it Â  Note: If the Verification results web page states that you don't have any Java software installed, please install it.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Downloading+OpenSearchServer</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Downloading+OpenSearchServer</value></field><field name="autocomplete"><value>Downloading OpenSearchServer</value></field><field name="title"><value>Downloading OpenSearchServer</value></field><field name="titleExact"><value>Downloading OpenSearchServer</value></field><field name="titlePhonetic"><value>Downloading OpenSearchServer</value></field><field name="content"><value>Go to the SourceForge project Open the following URL: http://sourceforge.net/projects/opensearchserve/ Note: All the latest release files can also be downloaded from http://sourceforge.net/projects/opensearchserve/files/ The Sourceforge download page opens. Click on the Download button Click on the Download button as shown in the above screen shot. A dialog box opens, prompting you to either open or save the file. Select the Save File radio button and click OK The open-search-server zip file is saved in your download folder. Unzip the content You may use winzip or any other extracting software.</value></field><field name="contentExact"><value>Go to the SourceForge project Open the following URL: http://sourceforge.net/projects/opensearchserve/ Note: All the latest release files can also be downloaded from http://sourceforge.net/projects/opensearchserve/files/ The Sourceforge download page opens. Click on the Download button Click on the Download button as shown in the above screen shot. A dialog box opens, prompting you to either open or save the file. Select the Save File radio button and click OK The open-search-server zip file is saved in your download folder. Unzip the content You may use winzip or any other extracting software.</value></field><field name="contentPhonetic"><value>Go to the SourceForge project Open the following URL: http://sourceforge.net/projects/opensearchserve/ Note: All the latest release files can also be downloaded from http://sourceforge.net/projects/opensearchserve/files/ The Sourceforge download page opens. Click on the Download button Click on the Download button as shown in the above screen shot. A dialog box opens, prompting you to either open or save the file. Select the Save File radio button and click OK The open-search-server zip file is saved in your download folder. Unzip the content You may use winzip or any other extracting software.</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Downloading+and+running+OpenSearchServer</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Downloading+and+running+OpenSearchServer</value></field><field name="autocomplete"><value>Downloading and running OpenSearchServer</value></field><field name="title"><value>Downloading and running OpenSearchServer</value></field><field name="titleExact"><value>Downloading and running OpenSearchServer</value></field><field name="titlePhonetic"><value>Downloading and running OpenSearchServer</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Introduction</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Introduction</value></field><field name="autocomplete"><value>Introduction</value></field><field name="title"><value>Introduction</value></field><field name="titleExact"><value>Introduction</value></field><field name="titlePhonetic"><value>Introduction</value></field><field name="content"><value>OpenSearchServer is a search engine software developed under the GPL v3 open source licence. It is a suite of high-powered full text search algorithms built using the best available open source technologies. Open Source It is a open source software developed under the GPL v3 open source licence. Index based on web crawling, file crawling, database, structured XML You can create an Index from web content or file content by running web crawler or file crawler respectively. Database content can be easily indexed using the database crawler, as well as structured XML. Indexing in multiple languages Web content / documents can be indexed in seventeen languages listed below: Arabic, Chinese, Danish, Dutch, English, Finnish, French, German, Hungarian, Italian, Norwegian, Portuguese, Romanian, Russian, Spanish, Swedish, Turkish. Multi-lingual analyzers There are various types of analyzers available with OpenSearchServer that slice sentences into words, then run algorithms on words based on the document's language (singular/plural, gender, conjugated verbs, etc.). Various document formats supported The following formats are supported: XML, XHTML/HTML, MS Office (Word, Powerpoint, Excel), Adobe PDF, Open Office, RTF, Text, Audio (OGG, MP3, WAV, Torrent), Images (JPEG, GIF, PNG). Advanced functions Faceting, synonyms, spellcheck, collapsing, stopwords, autocompletion, joined queries, OCR, screenshot. Easy configuration OpenSearchServer is easily configurable through a XML files or using the rich web interface, which includes fields definition and the indexation options. Quick integration OpenSearchServer can be quickly integrated: REST (XML or JSON) SOAP Web service Client libraries: PHP, .NET Drupal and Wordpress plugins. OpenSearchServer is supported on the following operating systems Windows 20xx/XP/Vista/7/8 Linux MacOS X Solaris</value></field><field name="contentExact"><value>OpenSearchServer is a search engine software developed under the GPL v3 open source licence. It is a suite of high-powered full text search algorithms built using the best available open source technologies. Open Source It is a open source software developed under the GPL v3 open source licence. Index based on web crawling, file crawling, database, structured XML You can create an Index from web content or file content by running web crawler or file crawler respectively. Database content can be easily indexed using the database crawler, as well as structured XML. Indexing in multiple languages Web content / documents can be indexed in seventeen languages listed below: Arabic, Chinese, Danish, Dutch, English, Finnish, French, German, Hungarian, Italian, Norwegian, Portuguese, Romanian, Russian, Spanish, Swedish, Turkish. Multi-lingual analyzers There are various types of analyzers available with OpenSearchServer that slice sentences into words, then run algorithms on words based on the document's language (singular/plural, gender, conjugated verbs, etc.). Various document formats supported The following formats are supported: XML, XHTML/HTML, MS Office (Word, Powerpoint, Excel), Adobe PDF, Open Office, RTF, Text, Audio (OGG, MP3, WAV, Torrent), Images (JPEG, GIF, PNG). Advanced functions Faceting, synonyms, spellcheck, collapsing, stopwords, autocompletion, joined queries, OCR, screenshot. Easy configuration OpenSearchServer is easily configurable through a XML files or using the rich web interface, which includes fields definition and the indexation options. Quick integration OpenSearchServer can be quickly integrated: REST (XML or JSON) SOAP Web service Client libraries: PHP, .NET Drupal and Wordpress plugins. OpenSearchServer is supported on the following operating systems Windows 20xx/XP/Vista/7/8 Linux MacOS X Solaris</value></field><field name="contentPhonetic"><value>OpenSearchServer is a search engine software developed under the GPL v3 open source licence. It is a suite of high-powered full text search algorithms built using the best available open source technologies. Open Source It is a open source software developed under the GPL v3 open source licence. Index based on web crawling, file crawling, database, structured XML You can create an Index from web content or file content by running web crawler or file crawler respectively. Database content can be easily indexed using the database crawler, as well as structured XML. Indexing in multiple languages Web content / documents can be indexed in seventeen languages listed below: Arabic, Chinese, Danish, Dutch, English, Finnish, French, German, Hungarian, Italian, Norwegian, Portuguese, Romanian, Russian, Spanish, Swedish, Turkish. Multi-lingual analyzers There are various types of analyzers available with OpenSearchServer that slice sentences into words, then run algorithms on words based on the document's language (singular/plural, gender, conjugated verbs, etc.). Various document formats supported The following formats are supported: XML, XHTML/HTML, MS Office (Word, Powerpoint, Excel), Adobe PDF, Open Office, RTF, Text, Audio (OGG, MP3, WAV, Torrent), Images (JPEG, GIF, PNG). Advanced functions Faceting, synonyms, spellcheck, collapsing, stopwords, autocompletion, joined queries, OCR, screenshot. Easy configuration OpenSearchServer is easily configurable through a XML files or using the rich web interface, which includes fields definition and the indexation options. Quick integration OpenSearchServer can be quickly integrated: REST (XML or JSON) SOAP Web service Client libraries: PHP, .NET Drupal and Wordpress plugins. OpenSearchServer is supported on the following operating systems Windows 20xx/XP/Vista/7/8 Linux MacOS X Solaris</value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/User+Guide</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/User+Guide</value></field><field name="autocomplete"><value>User Guide</value></field><field name="title"><value>User Guide</value></field><field name="titleExact"><value>User Guide</value></field><field name="titlePhonetic"><value>User Guide</value></field><field name="content"><value/></field><field name="contentExact"><value/></field><field name="contentPhonetic"><value/></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document><document lang="en"><field name="url"><value>http://www.open-search-server.com/confluence/display/EN/Home</value></field><field name="urlExact"><value>http://www.open-search-server.com/confluence/display/EN/Home</value></field><field name="autocomplete"><value>Home</value></field><field name="title"><value>Home</value></field><field name="titleExact"><value>Home</value></field><field name="titlePhonetic"><value>Home</value></field><field name="content"><value>This is theÂ EnglishÂ home page of OpenSearchServer's user documentation. You are welcome to read our documentation.Â You can also add comments, on pages and blog posts. Your comments are appreciatedÂ ! (You must log in to be able to comment. No account yet ? Just sign in.) Navigate space Â  This is theÂ EnglishÂ home page of OpenSearchServer's user documentation. You are welcome to review the documentation and if you have suggestions feel free to comment.Â You can add a new comment, on pages and blog posts. Your Comments Are Appreciated Â  Navigate space Â </value></field><field name="contentExact"><value>This is theÂ EnglishÂ home page of OpenSearchServer's user documentation. You are welcome to read our documentation.Â You can also add comments, on pages and blog posts. Your comments are appreciatedÂ ! (You must log in to be able to comment. No account yet ? Just sign in.) Navigate space Â  This is theÂ EnglishÂ home page of OpenSearchServer's user documentation. You are welcome to review the documentation and if you have suggestions feel free to comment.Â You can add a new comment, on pages and blog posts. Your Comments Are Appreciated Â  Navigate space Â </value></field><field name="contentPhonetic"><value>This is theÂ EnglishÂ home page of OpenSearchServer's user documentation. You are welcome to read our documentation.Â You can also add comments, on pages and blog posts. Your comments are appreciatedÂ ! (You must log in to be able to comment. No account yet ? Just sign in.) Navigate space Â  This is theÂ EnglishÂ home page of OpenSearchServer's user documentation. You are welcome to review the documentation and if you have suggestions feel free to comment.Â You can add a new comment, on pages and blog posts. Your Comments Are Appreciated Â  Navigate space Â </value></field><field name="timestamp"><value>20120904180444</value></field><field name="type"><value>documentation</value></field><field name="lang"><value>en</value></field><field name="host"><value>www.open-search-server.com</value></field></document></index>
